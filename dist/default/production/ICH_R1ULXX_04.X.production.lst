

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Mon Mar 08 14:19:24 2021

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F1933
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text600,local,class=CODE,delta=2
    18                           	psect	text602,local,class=CODE,delta=2
    19                           	psect	text603,local,class=CODE,delta=2
    20                           	psect	text604,local,class=CODE,delta=2
    21                           	psect	text605,local,class=CODE,delta=2
    22                           	psect	text606,local,class=CODE,delta=2
    23                           	psect	text607,local,class=CODE,delta=2
    24                           	psect	text608,local,class=CODE,delta=2
    25                           	psect	text609,local,class=CODE,delta=2
    26                           	psect	text610,local,class=CODE,delta=2
    27                           	psect	text611,local,class=CODE,delta=2
    28                           	psect	text616,local,class=CODE,delta=2
    29                           	psect	text617,local,class=CODE,delta=2
    30                           	psect	functab,global,reloc=256,class=CODE,delta=2
    31                           	psect	pa_nodes,global,class=CODE,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     	;#
    34  0001                     	;#
    35  0002                     	;#
    36  0003                     	;#
    37  0004                     	;#
    38  0005                     	;#
    39  0006                     	;#
    40  0007                     	;#
    41  0008                     	;#
    42  0009                     	;#
    43  000A                     	;#
    44  000B                     	;#
    45  000C                     	;#
    46  000D                     	;#
    47  000E                     	;#
    48  0010                     	;#
    49  0011                     	;#
    50  0012                     	;#
    51  0013                     	;#
    52  0015                     	;#
    53  0016                     	;#
    54  0017                     	;#
    55  0018                     	;#
    56  0019                     	;#
    57  001A                     	;#
    58  001B                     	;#
    59  001C                     	;#
    60  001E                     	;#
    61  001F                     	;#
    62  008C                     	;#
    63  008D                     	;#
    64  008E                     	;#
    65  0090                     	;#
    66  0091                     	;#
    67  0092                     	;#
    68  0093                     	;#
    69  0095                     	;#
    70  0096                     	;#
    71  0097                     	;#
    72  0098                     	;#
    73  0099                     	;#
    74  009A                     	;#
    75  009B                     	;#
    76  009C                     	;#
    77  009D                     	;#
    78  009E                     	;#
    79  010C                     	;#
    80  010D                     	;#
    81  010E                     	;#
    82  0110                     	;#
    83  0111                     	;#
    84  0112                     	;#
    85  0113                     	;#
    86  0114                     	;#
    87  0115                     	;#
    88  0116                     	;#
    89  0117                     	;#
    90  0118                     	;#
    91  0119                     	;#
    92  011A                     	;#
    93  011B                     	;#
    94  011D                     	;#
    95  018C                     	;#
    96  018D                     	;#
    97  0191                     	;#
    98  0192                     	;#
    99  0193                     	;#
   100  0193                     	;#
   101  0194                     	;#
   102  0195                     	;#
   103  0196                     	;#
   104  0199                     	;#
   105  019A                     	;#
   106  019B                     	;#
   107  019B                     	;#
   108  019C                     	;#
   109  019D                     	;#
   110  019E                     	;#
   111  019F                     	;#
   112  020D                     	;#
   113  0210                     	;#
   114  0211                     	;#
   115  0212                     	;#
   116  0213                     	;#
   117  0214                     	;#
   118  0215                     	;#
   119  0215                     	;#
   120  0216                     	;#
   121  0217                     	;#
   122  0291                     	;#
   123  0292                     	;#
   124  0293                     	;#
   125  0294                     	;#
   126  0295                     	;#
   127  0295                     	;#
   128  0296                     	;#
   129  0298                     	;#
   130  0299                     	;#
   131  029A                     	;#
   132  029B                     	;#
   133  029C                     	;#
   134  029C                     	;#
   135  029D                     	;#
   136  029E                     	;#
   137  029F                     	;#
   138  0311                     	;#
   139  0312                     	;#
   140  0313                     	;#
   141  0314                     	;#
   142  0315                     	;#
   143  0315                     	;#
   144  0316                     	;#
   145  0318                     	;#
   146  0319                     	;#
   147  031A                     	;#
   148  031C                     	;#
   149  031D                     	;#
   150  031E                     	;#
   151  0394                     	;#
   152  0395                     	;#
   153  0396                     	;#
   154  0415                     	;#
   155  0416                     	;#
   156  0417                     	;#
   157  041C                     	;#
   158  041D                     	;#
   159  041E                     	;#
   160  0791                     	;#
   161  0792                     	;#
   162  0793                     	;#
   163  0794                     	;#
   164  0795                     	;#
   165  0798                     	;#
   166  0799                     	;#
   167  07A0                     	;#
   168  07A1                     	;#
   169  07A3                     	;#
   170  07A4                     	;#
   171  07A6                     	;#
   172  07A7                     	;#
   173  07A9                     	;#
   174  07AA                     	;#
   175  0FE4                     	;#
   176  0FE5                     	;#
   177  0FE6                     	;#
   178  0FE7                     	;#
   179  0FE8                     	;#
   180  0FE9                     	;#
   181  0FEA                     	;#
   182  0FEB                     	;#
   183  0FED                     	;#
   184  0FEE                     	;#
   185  0FEF                     	;#
   186                           
   187                           	psect	config
   188  8007  C80C               	dw	51212	;#
   189  8008  DBFF               	dw	56319	;#
   190                           
   191                           	psect	idataBANK0
   192  0000                     __pidataBANK0:	
   193                           
   194                           	psect	strings
   195  0069                     __pstrings:	
   196  0069                     __stringtab:	
   197  0069  3400               	retlw	0
   198  006A                     _mTouch_pressThreshold:	
   199  006A  342C               	retlw	44
   200  006B  3401               	retlw	1
   201  006C  342C               	retlw	44
   202  006D  3401               	retlw	1
   203  006E  342C               	retlw	44
   204  006F  3401               	retlw	1
   205  0070  342C               	retlw	44
   206  0071  3401               	retlw	1
   207  0072  342C               	retlw	44
   208  0073  3401               	retlw	1
   209  0074                     _mTouch_releaseThreshold:	
   210  0074  34B4               	retlw	180
   211  0075  3400               	retlw	0
   212  0076  34B4               	retlw	180
   213  0077  3400               	retlw	0
   214  0078  34B4               	retlw	180
   215  0079  3400               	retlw	0
   216  007A  34B4               	retlw	180
   217  007B  3400               	retlw	0
   218  007C  34B4               	retlw	180
   219  007D  3400               	retlw	0
   220  007E                     _mTouch_ScanA:	
   221  007E  3403               	retlw	(fp__mTouch_ScanA_0-i1fpbase)& (0+255)
   222  007F  3405               	retlw	(fp__mTouch_ScanA_1-i1fpbase)& (0+255)
   223  0080  3407               	retlw	(fp__mTouch_ScanA_2-i1fpbase)& (0+255)
   224  0081  3409               	retlw	(fp__mTouch_ScanA_3-i1fpbase)& (0+255)
   225  0082  3401               	retlw	(fp__mTouch_ScanA_4-i1fpbase)& (0+255)
   226  0083                     _mTouch_ScanB:	
   227  0083  340D               	retlw	(fp__mTouch_ScanB_0-i1fpbase)& (0+255)
   228  0084  340F               	retlw	(fp__mTouch_ScanB_1-i1fpbase)& (0+255)
   229  0085  3411               	retlw	(fp__mTouch_ScanB_2-i1fpbase)& (0+255)
   230  0086  3413               	retlw	(fp__mTouch_ScanB_3-i1fpbase)& (0+255)
   231  0087  340B               	retlw	(fp__mTouch_ScanB_4-i1fpbase)& (0+255)
   232  000B                     _INTCONbits	set	11
   233  000C                     _PORTA	set	12
   234  000D                     _PORTB	set	13
   235  000E                     _PORTC	set	14
   236  0010                     _PORTE	set	16
   237  001C                     _T2CON	set	28
   238  005A                     _T0IF	set	90
   239  005D                     _TMR0IE	set	93
   240  005A                     _TMR0IF	set	90
   241  0089                     _TMR2IF	set	137
   242  009E                     _ADCON1bits	set	158
   243  009C                     _ADRESH	set	156
   244  009B                     _ADRESL	set	155
   245  0095                     _OPTION_REG	set	149
   246  0099                     _OSCCON	set	153
   247  008C                     _TRISA	set	140
   248  008D                     _TRISB	set	141
   249  008E                     _TRISC	set	142
   250  0090                     _TRISE	set	144
   251  04E9                     _GO_nDONE	set	1257
   252  0489                     _TMR2IE	set	1161
   253  0866                     _LATA6	set	2150
   254  0867                     _LATA7	set	2151
   255  086F                     _LATB7	set	2159
   256  0870                     _LATC0	set	2160
   257  0871                     _LATC1	set	2161
   258  0872                     _LATC2	set	2162
   259  0873                     _LATC3	set	2163
   260  0874                     _LATC4	set	2164
   261  0875                     _LATC5	set	2165
   262  0876                     _LATC6	set	2166
   263  018C                     _ANSELA	set	396
   264  018D                     _ANSELB	set	397
   265                           
   266                           	psect	cinit
   267  0118                     start_initialization:	
   268  0118  3020               	movlw	low __pbssBANK0
   269                           
   270                           ; Clear objects allocated to BITCOMMON
   271  0119  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   272                           
   273                           ; Clear objects allocated to COMMON
   274  011A  01FB               	clrf	__pbssCOMMON& (0+127)
   275  011B  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   276  011C  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   277                           
   278                           ; Clear objects allocated to BANK0
   279  011D  0084               	movwf	4
   280  011E  3000               	movlw	high __pbssBANK0
   281  011F  0085               	movwf	5
   282  0120  3036               	movlw	54
   283  0121  3187  2769  3181   	fcall	clear_ram
   284                           
   285                           ; Clear objects allocated to BANK1
   286  0124  30A0               	movlw	low __pbssBANK1
   287  0125  0084               	movwf	4
   288  0126  3000               	movlw	high __pbssBANK1
   289  0127  0085               	movwf	5
   290  0128  302E               	movlw	46
   291  0129  3187  2769  3181   	fcall	clear_ram
   292                           
   293                           ;initializer for _mTouch_jitter
   294  012C  3055               	movlw	85
   295  012D  00E3               	movwf	__pdataBANK0& (0+127)
   296  012E                     end_of_initialization:	
   297                           ;End of C runtime variable initialization code
   298                           
   299  012E  0020               	movlb	0
   300  012F  2930               	ljmp	_main	;jump to C main() function
   301  0130                     __pmaintext:	
   302 ;;Data sizes: Strings 0, constant 30, data 1, bss 103, persistent 0 stack 0
   303 ;;Auto spaces:   Size  Autos    Used
   304 ;; COMMON          14     10      14
   305 ;; BANK0           80     13      68
   306 ;; BANK1           80      0      46
   307 ;; BANK2           80      0       0
   308 ;;
   309 ;; Pointer list with targets:
   310 ;; mTouch_currentAcqData	PTR struct . size(1) Largest target is 20
   311 ;;		 -> NULL(NULL[0]), mTouch_acqData(BANK1[20]), 
   312 ;;
   313 ;; mTouch_ScanB	const PTR FTN()void [5] size(1) Largest target is 0
   314 ;;		 -> mTouch_ScanB_4(), mTouch_ScanB_3(), mTouch_ScanB_2(), mTouch_ScanB_1(), 
   315 ;;		 -> mTouch_ScanB_0(), 
   316 ;;
   317 ;; mTouch_ScanA	const PTR FTN()void [5] size(1) Largest target is 0
   318 ;;		 -> mTouch_ScanA_4(), mTouch_ScanA_3(), mTouch_ScanA_2(), mTouch_ScanA_1(), 
   319 ;;		 -> mTouch_ScanA_0(), 
   320 ;;
   321 ;; mTouch_ButtonStateMachine@sensor	PTR struct . size(1) Largest target is 26
   322 ;;		 -> mTouch_stateVars(BANK1[26]), 
   323 ;;
   324 ;; mTouch_Init@acqData	PTR struct . size(1) Largest target is 20
   325 ;;		 -> mTouch_acqData(BANK1[20]), 
   326 ;;
   327 ;;
   328 ;; Critical Paths under _main in COMMON
   329 ;;
   330 ;;   None.
   331 ;;
   332 ;; Critical Paths under _ISR in COMMON
   333 ;;
   334 ;;   _ISR->_mTouch_Scan
   335 ;;   _mTouch_Scan->_mTouch_DecimationFilter
   336 ;;
   337 ;; Critical Paths under _main in BANK0
   338 ;;
   339 ;;   _mTouch_Decode->_mTouch_UpdateBaseline
   340 ;;   _mTouch_UpdateBaseline->___bmul
   341 ;;   _mTouch_ButtonStateMachine->___bmul
   342 ;;   _mTouch_Init->___bmul
   343 ;;
   344 ;; Critical Paths under _ISR in BANK0
   345 ;;
   346 ;;   None.
   347 ;;
   348 ;; Critical Paths under _main in BANK1
   349 ;;
   350 ;;   None.
   351 ;;
   352 ;; Critical Paths under _ISR in BANK1
   353 ;;
   354 ;;   None.
   355 ;;
   356 ;; Critical Paths under _main in BANK2
   357 ;;
   358 ;;   None.
   359 ;;
   360 ;; Critical Paths under _ISR in BANK2
   361 ;;
   362 ;;   None.
   363 ;;
   364 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   365 ;;
   366 ;;
   367 ;;Call Graph Tables:
   368 ;;
   369 ;; ---------------------------------------------------------------------------------
   370 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   371 ;; ---------------------------------------------------------------------------------
   372 ;; (0) _main                                                 1     1      0    1075
   373 ;;                                             12 BANK0      1     1      0
   374 ;;                _Example_System_Init
   375 ;;                        _mTouch_Init
   376 ;;                      _mTouch_Decode
   377 ;;                         _KeyExecute
   378 ;; ---------------------------------------------------------------------------------
   379 ;; (1) _mTouch_Decode                                        0     0      0     738
   380 ;;          _mTouch_ButtonStateMachine
   381 ;;              _mTouch_UpdateBaseline
   382 ;;                  _mTouch_ChangeMode
   383 ;; ---------------------------------------------------------------------------------
   384 ;; (2) _mTouch_UpdateBaseline                                9     9      0     159
   385 ;;                                              3 BANK0      9     9      0
   386 ;;                             ___bmul
   387 ;; ---------------------------------------------------------------------------------
   388 ;; (2) _mTouch_ButtonStateMachine                            5     5      0     579
   389 ;;                                              3 BANK0      5     5      0
   390 ;;                             ___bmul
   391 ;; ---------------------------------------------------------------------------------
   392 ;; (1) _mTouch_Init                                          2     2      0     337
   393 ;;                                              3 BANK0      2     2      0
   394 ;;                             ___bmul
   395 ;;                  _mTouch_ChangeMode
   396 ;; ---------------------------------------------------------------------------------
   397 ;; (3) ___bmul                                               3     2      1      92
   398 ;;                                              0 BANK0      3     2      1
   399 ;; ---------------------------------------------------------------------------------
   400 ;; (1) _Example_System_Init                                  0     0      0       0
   401 ;; ---------------------------------------------------------------------------------
   402 ;; (2) _mTouch_ChangeMode                                    0     0      0       0
   403 ;; ---------------------------------------------------------------------------------
   404 ;; (1) _KeyExecute                                           2     2      0       0
   405 ;;                                              0 BANK0      2     2      0
   406 ;; ---------------------------------------------------------------------------------
   407 ;; Estimated maximum stack depth 3
   408 ;; ---------------------------------------------------------------------------------
   409 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   410 ;; ---------------------------------------------------------------------------------
   411 ;; (4) _ISR                                                  1     1      0      94
   412 ;;                                              9 COMMON     1     1      0
   413 ;;                            _IchLeds
   414 ;;                         _IchOutputs
   415 ;;                        _mTouch_Scan
   416 ;; ---------------------------------------------------------------------------------
   417 ;; (5) _mTouch_Scan                                          2     2      0      94
   418 ;;                                              7 COMMON     2     2      0
   419 ;;                     _mTouch_ScanA_4
   420 ;;                     _mTouch_ScanA_3
   421 ;;                     _mTouch_ScanA_2
   422 ;;                     _mTouch_ScanA_1
   423 ;;                     _mTouch_ScanA_0
   424 ;;               _mTouch_WaitForGoDone
   425 ;;                  _mTouch_StoreScanA
   426 ;;                     _mTouch_ScanB_4
   427 ;;                     _mTouch_ScanB_3
   428 ;;                     _mTouch_ScanB_2
   429 ;;                     _mTouch_ScanB_1
   430 ;;                     _mTouch_ScanB_0
   431 ;;                  _mTouch_StoreScanB
   432 ;;            _mTouch_DecimationFilter
   433 ;;                i1_mTouch_ChangeMode
   434 ;; ---------------------------------------------------------------------------------
   435 ;; (6) i1_mTouch_ChangeMode                                  0     0      0       0
   436 ;; ---------------------------------------------------------------------------------
   437 ;; (6) _mTouch_ScanB_4                                       0     0      0       0
   438 ;; ---------------------------------------------------------------------------------
   439 ;; (6) _mTouch_ScanA_4                                       0     0      0       0
   440 ;; ---------------------------------------------------------------------------------
   441 ;; (6) _mTouch_ScanB_3                                       0     0      0       0
   442 ;; ---------------------------------------------------------------------------------
   443 ;; (6) _mTouch_ScanA_3                                       0     0      0       0
   444 ;; ---------------------------------------------------------------------------------
   445 ;; (6) _mTouch_ScanB_2                                       0     0      0       0
   446 ;; ---------------------------------------------------------------------------------
   447 ;; (6) _mTouch_ScanA_2                                       0     0      0       0
   448 ;; ---------------------------------------------------------------------------------
   449 ;; (6) _mTouch_ScanB_1                                       0     0      0       0
   450 ;; ---------------------------------------------------------------------------------
   451 ;; (6) _mTouch_ScanA_1                                       0     0      0       0
   452 ;; ---------------------------------------------------------------------------------
   453 ;; (6) _mTouch_ScanB_0                                       0     0      0       0
   454 ;; ---------------------------------------------------------------------------------
   455 ;; (6) _mTouch_ScanA_0                                       0     0      0       0
   456 ;; ---------------------------------------------------------------------------------
   457 ;; (6) _mTouch_DecimationFilter                              7     7      0      94
   458 ;;                                              0 COMMON     7     7      0
   459 ;; ---------------------------------------------------------------------------------
   460 ;; (6) _mTouch_StoreScanB                                    1     1      0       0
   461 ;;                                              0 COMMON     1     1      0
   462 ;; ---------------------------------------------------------------------------------
   463 ;; (6) _mTouch_StoreScanA                                    0     0      0       0
   464 ;; ---------------------------------------------------------------------------------
   465 ;; (6) _mTouch_WaitForGoDone                                 0     0      0       0
   466 ;; ---------------------------------------------------------------------------------
   467 ;; (5) _IchLeds                                              0     0      0       0
   468 ;; ---------------------------------------------------------------------------------
   469 ;; (5) _IchOutputs                                           0     0      0       0
   470 ;; ---------------------------------------------------------------------------------
   471 ;; Estimated maximum stack depth 6
   472 ;; ---------------------------------------------------------------------------------
   473 ;; Call Graph Graphs:
   474 ;; _main (ROOT)
   475 ;;   _Example_System_Init
   476 ;;   _mTouch_Init
   477 ;;     ___bmul
   478 ;;     _mTouch_ChangeMode
   479 ;;   _mTouch_Decode
   480 ;;     _mTouch_ButtonStateMachine
   481 ;;       ___bmul
   482 ;;     _mTouch_UpdateBaseline
   483 ;;       ___bmul
   484 ;;     _mTouch_ChangeMode
   485 ;;   _KeyExecute
   486 ;;
   487 ;; _ISR (ROOT)
   488 ;;   _IchLeds
   489 ;;   _IchOutputs
   490 ;;   _mTouch_Scan
   491 ;;     _mTouch_ScanA_4
   492 ;;     _mTouch_ScanA_3
   493 ;;     _mTouch_ScanA_2
   494 ;;     _mTouch_ScanA_1
   495 ;;     _mTouch_ScanA_0
   496 ;;     _mTouch_WaitForGoDone
   497 ;;     _mTouch_StoreScanA
   498 ;;     _mTouch_ScanB_4
   499 ;;     _mTouch_ScanB_3
   500 ;;     _mTouch_ScanB_2
   501 ;;     _mTouch_ScanB_1
   502 ;;     _mTouch_ScanB_0
   503 ;;     _mTouch_StoreScanB
   504 ;;     _mTouch_DecimationFilter
   505 ;;     i1_mTouch_ChangeMode
   506 ;;
   507 ;; Address spaces:
   508 ;;Name               Size   Autos  Total    Cost      Usage
   509 ;;BIGRAM              F0      0       0       0        0.0%
   510 ;;EEDATA             100      0       0       0        0.0%
   511 ;;NULL                 0      0       0       0        0.0%
   512 ;;CODE                 0      0       0       0        0.0%
   513 ;;BITCOMMON            E      0       1       1        7.1%
   514 ;;BITSFR0              0      0       0       1        0.0%
   515 ;;SFR0                 0      0       0       1        0.0%
   516 ;;COMMON               E      A       E       2      100.0%
   517 ;;BITSFR1              0      0       0       2        0.0%
   518 ;;SFR1                 0      0       0       2        0.0%
   519 ;;BITSFR2              0      0       0       3        0.0%
   520 ;;SFR2                 0      0       0       3        0.0%
   521 ;;STACK                0      0       9       3        0.0%
   522 ;;BITSFR3              0      0       0       4        0.0%
   523 ;;SFR3                 0      0       0       4        0.0%
   524 ;;ABS                  0      0      80       4        0.0%
   525 ;;BITBANK0            50      0       0       5        0.0%
   526 ;;BITSFR4              0      0       0       5        0.0%
   527 ;;SFR4                 0      0       0       5        0.0%
   528 ;;BANK0               50      D      44       6       85.0%
   529 ;;BITSFR5              0      0       0       6        0.0%
   530 ;;SFR5                 0      0       0       6        0.0%
   531 ;;BITBANK1            50      0       0       7        0.0%
   532 ;;BITSFR6              0      0       0       7        0.0%
   533 ;;SFR6                 0      0       0       7        0.0%
   534 ;;BANK1               50      0      2E       8       57.5%
   535 ;;BITSFR7              0      0       0       8        0.0%
   536 ;;SFR7                 0      0       0       8        0.0%
   537 ;;BITBANK2            50      0       0       9        0.0%
   538 ;;BITSFR8              0      0       0       9        0.0%
   539 ;;SFR8                 0      0       0       9        0.0%
   540 ;;BANK2               50      0       0      10        0.0%
   541 ;;BITSFR9              0      0       0      10        0.0%
   542 ;;SFR9                 0      0       0      10        0.0%
   543 ;;BITSFR10             0      0       0      11        0.0%
   544 ;;SFR10                0      0       0      11        0.0%
   545 ;;DATA                 0      0      89      11        0.0%
   546 ;;BITSFR11             0      0       0      12        0.0%
   547 ;;SFR11                0      0       0      12        0.0%
   548 ;;BITSFR12             0      0       0      13        0.0%
   549 ;;SFR12                0      0       0      13        0.0%
   550 ;;BITSFR13             0      0       0      14        0.0%
   551 ;;SFR13                0      0       0      14        0.0%
   552 ;;BITSFR14             0      0       0      15        0.0%
   553 ;;SFR14                0      0       0      15        0.0%
   554 ;;BITSFR15             0      0       0      16        0.0%
   555 ;;SFR15                0      0       0      16        0.0%
   556 ;;BITSFR16             0      0       0      17        0.0%
   557 ;;SFR16                0      0       0      17        0.0%
   558 ;;BITSFR17             0      0       0      18        0.0%
   559 ;;SFR17                0      0       0      18        0.0%
   560 ;;BITSFR18             0      0       0      19        0.0%
   561 ;;SFR18                0      0       0      19        0.0%
   562 ;;BITSFR19             0      0       0      20        0.0%
   563 ;;SFR19                0      0       0      20        0.0%
   564 ;;BITSFR20             0      0       0      21        0.0%
   565 ;;SFR20                0      0       0      21        0.0%
   566 ;;BITSFR21             0      0       0      22        0.0%
   567 ;;SFR21                0      0       0      22        0.0%
   568 ;;BITSFR22             0      0       0      23        0.0%
   569 ;;SFR22                0      0       0      23        0.0%
   570 ;;BITSFR23             0      0       0      24        0.0%
   571 ;;SFR23                0      0       0      24        0.0%
   572 ;;BITSFR24             0      0       0      25        0.0%
   573 ;;SFR24                0      0       0      25        0.0%
   574 ;;BITSFR25             0      0       0      26        0.0%
   575 ;;SFR25                0      0       0      26        0.0%
   576 ;;BITSFR26             0      0       0      27        0.0%
   577 ;;SFR26                0      0       0      27        0.0%
   578 ;;BITSFR27             0      0       0      28        0.0%
   579 ;;SFR27                0      0       0      28        0.0%
   580 ;;BITSFR28             0      0       0      29        0.0%
   581 ;;SFR28                0      0       0      29        0.0%
   582 ;;BITSFR29             0      0       0      30        0.0%
   583 ;;SFR29                0      0       0      30        0.0%
   584 ;;BITSFR30             0      0       0      31        0.0%
   585 ;;SFR30                0      0       0      31        0.0%
   586 ;;BITSFR31             0      0       0      32        0.0%
   587 ;;SFR31                0      0       0      32        0.0%
   588                           
   589                           
   590 ;; *************** function _main *****************
   591 ;; Defined at:
   592 ;;		line 84 in file "main.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;		None               void
   599 ;; Registers used:
   600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 17F/0
   603 ;;		On exit  : 1F/0
   604 ;;		Unchanged: FFE00/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   606 ;;      Params:         0       0       0       0
   607 ;;      Locals:         0       0       0       0
   608 ;;      Temps:          0       1       0       0
   609 ;;      Totals:         0       1       0       0
   610 ;;Total ram usage:        1 bytes
   611 ;; Hardware stack levels required when called:    6
   612 ;; This function calls:
   613 ;;		_Example_System_Init
   614 ;;		_mTouch_Init
   615 ;;		_mTouch_Decode
   616 ;;		_KeyExecute
   617 ;; This function is called by:
   618 ;;		Startup code after reset
   619 ;; This function uses a non-reentrant model
   620 ;;
   621  0130                     _main:	
   622                           
   623                           ;main.c: 85: Example_System_Init();
   624                           
   625                           ; Regs used in _main: [wreg-status,0+pclath+cstack]
   626  0130  2211  3181         	fcall	_Example_System_Init
   627                           
   628                           ;main.c: 96: mTouch_Init();
   629  0132  2229  3181         	fcall	_mTouch_Init
   630                           
   631                           ;main.c: 101: INTCONbits.GIE = 1;
   632  0134  178B               	bsf	11,7	;volatile
   633                           
   634                           ;main.c: 103: ledTimer = 30;
   635  0135  301E               	movlw	30
   636  0136  0020               	movlb	0	; select bank0
   637  0137  00BE               	movwf	_ledTimer
   638  0138  01BF               	clrf	_ledTimer+1
   639                           
   640                           ;main.c: 104: led_enable = 1;
   641  0139  177A               	bsf	_led_enable/(0+8),_led_enable& (0+7)
   642  013A                     l23713:	
   643                           
   644                           ;main.c: 107: if ((mTouch_state.dataReady)) {
   645  013A  1C51               	btfss	_mTouch_state,0
   646  013B  296B               	goto	l23739
   647                           
   648                           ;main.c: 108: mTouch_state.dataReady = 0; mTouch_Decode();
   649  013C  1051               	bcf	_mTouch_state,0
   650  013D  2346  3181         	fcall	_mTouch_Decode
   651                           
   652                           ;main.c: 109: if (mTouch_stateVars.sensor[4].state < MTOUCH_PRESSED){
   653  013F  0835               	movf	(_mTouch_stateVars^(0+128)+21),w
   654  0140  2419  3181         	fcall	PL4	;call to abstracted procedure
   655  0142  1803               	skipnc
   656  0143  2946               	goto	l20307
   657                           
   658                           ;main.c: 110: Key_state.oneBit.Massage = 0;
   659  0144  11CC               	bcf	_Key_state,3
   660                           
   661                           ;main.c: 111: } else {
   662  0145  2947               	goto	l23723
   663  0146                     l20307:	
   664                           
   665                           ;main.c: 112: Key_state.oneBit.Massage = 1;
   666  0146  15CC               	bsf	_Key_state,3
   667  0147                     l23723:	
   668                           
   669                           ;main.c: 113: }
   670                           ;main.c: 115: if (mTouch_stateVars.sensor[3].state < MTOUCH_PRESSED)
   671  0147  0021               	movlb	1	; select bank1
   672  0148  0830               	movf	(_mTouch_stateVars^(0+128)+16),w
   673  0149  2419  3181         	fcall	PL4	;call to abstracted procedure
   674  014B  1803               	skipnc
   675  014C  294F               	goto	l20309
   676                           
   677                           ;main.c: 116: {
   678                           ;main.c: 117: Key_state.oneBit.Heat = 0;
   679  014D  114C               	bcf	_Key_state,2
   680                           
   681                           ;main.c: 118: } else {
   682  014E  2950               	goto	l23727
   683  014F                     l20309:	
   684                           
   685                           ;main.c: 119: Key_state.oneBit.Heat = 1;
   686  014F  154C               	bsf	_Key_state,2
   687  0150                     l23727:	
   688                           
   689                           ;main.c: 120: }
   690                           ;main.c: 122: if (mTouch_stateVars.sensor[2].state < MTOUCH_PRESSED)
   691  0150  0021               	movlb	1	; select bank1
   692  0151  082B               	movf	(_mTouch_stateVars^(0+128)+11),w
   693  0152  2419  3181         	fcall	PL4	;call to abstracted procedure
   694  0154  1803               	skipnc
   695  0155  2958               	goto	l20311
   696                           
   697                           ;main.c: 123: {
   698                           ;main.c: 124: Key_state.oneBit.Light = 0;
   699  0156  124C               	bcf	_Key_state,4
   700                           
   701                           ;main.c: 125: } else {
   702  0157  2959               	goto	l23731
   703  0158                     l20311:	
   704                           
   705                           ;main.c: 126: Key_state.oneBit.Light = 1;
   706  0158  164C               	bsf	_Key_state,4
   707  0159                     l23731:	
   708                           
   709                           ;main.c: 127: }
   710                           ;main.c: 129: if (mTouch_stateVars.sensor[1].state < MTOUCH_PRESSED){
   711  0159  0021               	movlb	1	; select bank1
   712  015A  0826               	movf	(_mTouch_stateVars^(0+128)+6),w
   713  015B  2419  3181         	fcall	PL4	;call to abstracted procedure
   714  015D  1803               	skipnc
   715  015E  2961               	goto	l20313
   716                           
   717                           ;main.c: 130: Key_state.oneBit.PRClose = 0;
   718  015F  10CC               	bcf	_Key_state,1
   719                           
   720                           ;main.c: 131: } else {
   721  0160  2962               	goto	l23735
   722  0161                     l20313:	
   723                           
   724                           ;main.c: 132: Key_state.oneBit.PRClose = 1;
   725  0161  14CC               	bsf	_Key_state,1
   726  0162                     l23735:	
   727                           
   728                           ;main.c: 133: }
   729                           ;main.c: 135: if (mTouch_stateVars.sensor[0].state < MTOUCH_PRESSED){
   730  0162  0021               	movlb	1	; select bank1
   731  0163  0821               	movf	(_mTouch_stateVars^(0+128)+1),w
   732  0164  2419  3181         	fcall	PL4	;call to abstracted procedure
   733  0166  1803               	skipnc
   734  0167  296A               	goto	l20315
   735                           
   736                           ;main.c: 136: Key_state.oneBit.PROpen = 0;
   737  0168  104C               	bcf	_Key_state,0
   738                           
   739                           ;main.c: 137: } else {
   740  0169  296B               	goto	l23739
   741  016A                     l20315:	
   742                           
   743                           ;main.c: 138: Key_state.oneBit.PROpen = 1;
   744  016A  144C               	bsf	_Key_state,0
   745  016B                     l23739:	
   746                           
   747                           ;main.c: 139: }
   748                           ;main.c: 140: }
   749                           ;main.c: 142: KeyExecute();
   750  016B  216E  3181         	fcall	_KeyExecute
   751  016D  293A               	goto	l23713
   752  016E                     __end_of_main:	
   753  016E                     __ptext598:	
   754 ;; =============== function _mTouch_ChangeMode ends ============
   755                           
   756                           
   757 ;; *************** function _KeyExecute *****************
   758 ;; Defined at:
   759 ;;		line 17 in file "ICH-LR-HR.C"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;		None               void
   766 ;; Registers used:
   767 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   768 ;; Tracked objects:
   769 ;;		On entry : 1F/0
   770 ;;		On exit  : 1F/0
   771 ;;		Unchanged: FFFE0/0
   772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   773 ;;      Params:         0       0       0       0
   774 ;;      Locals:         0       0       0       0
   775 ;;      Temps:          0       2       0       0
   776 ;;      Totals:         0       2       0       0
   777 ;;Total ram usage:        2 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; Hardware stack levels required when called:    3
   780 ;; This function calls:
   781 ;;		Nothing
   782 ;; This function is called by:
   783 ;;		_main
   784 ;; This function uses a non-reentrant model
   785 ;;
   786  016E                     _KeyExecute:	
   787                           
   788                           ;ICH-LR-HR.C: 18: if (Key_state.allBits){
   789                           
   790                           ; Regs used in _KeyExecute: [wreg-fsr0h+status,2+status,0]
   791  016E  084C               	movf	_Key_state,w
   792  016F  1903               	btfsc	3,2
   793  0170  29F9               	goto	l23257
   794                           
   795                           ;ICH-LR-HR.C: 19: ledTimer = 30;
   796  0171  301E               	movlw	30
   797  0172  00BE               	movwf	_ledTimer
   798  0173  01BF               	clrf	_ledTimer+1
   799                           
   800                           ;ICH-LR-HR.C: 20: if(!led_enable){
   801  0174  1B7A               	btfsc	_led_enable/(0+8),_led_enable& (0+7)
   802  0175  2978               	goto	l1862
   803                           
   804                           ;ICH-LR-HR.C: 21: flag_led_enable = 1;
   805  0176  14FA               	bsf	_flag_led_enable/(0+8),_flag_led_enable& (0+7)
   806                           
   807                           ;ICH-LR-HR.C: 22: led_enable = 1;
   808  0177  177A               	bsf	_led_enable/(0+8),_led_enable& (0+7)
   809  0178                     l1862:	
   810                           
   811                           ;ICH-LR-HR.C: 23: }
   812                           ;ICH-LR-HR.C: 26: if (Key_state.oneBit.PROpen && Key_state.oneBit.PRClose){
   813  0178  184C               	btfsc	_Key_state,0
   814  0179  1CCC               	btfss	_Key_state,1
   815  017A  2980               	goto	l1863
   816                           
   817                           ;ICH-LR-HR.C: 27: flag_pr_open = flag_pr_close = 0;
   818  017B  127A               	bcf	_flag_pr_close/(0+8),_flag_pr_close& (0+7)
   819  017C  12FA               	bcf	_flag_pr_open/(0+8),_flag_pr_open& (0+7)
   820                           
   821                           ;ICH-LR-HR.C: 28: Key_LED.oneBit.PROpen = Key_LED.oneBit.PRClose= 0;
   822  017D  10FB               	bcf	_Key_LED,1
   823  017E  107B               	bcf	_Key_LED,0
   824                           
   825                           ;ICH-LR-HR.C: 29: } else {
   826  017F  2992               	goto	l1864
   827  0180                     l1863:	
   828                           
   829                           ;ICH-LR-HR.C: 31: if (Key_state.oneBit.PROpen){
   830  0180  1C4C               	btfss	_Key_state,0
   831  0181  2987               	goto	l1865
   832                           
   833                           ;ICH-LR-HR.C: 32: if (!flag_pr_open){
   834  0182  1AFA               	btfsc	_flag_pr_open/(0+8),_flag_pr_open& (0+7)
   835  0183  2989               	goto	l1867
   836                           
   837                           ;ICH-LR-HR.C: 33: flag_pr_open = 1;
   838  0184  16FA               	bsf	_flag_pr_open/(0+8),_flag_pr_open& (0+7)
   839                           
   840                           ;ICH-LR-HR.C: 34: Key_LED.oneBit.PROpen = 1;
   841  0185  147B               	bsf	_Key_LED,0
   842  0186  2989               	goto	l1867
   843  0187                     l1865:	
   844                           
   845                           ;ICH-LR-HR.C: 37: else{
   846                           ;ICH-LR-HR.C: 38: flag_pr_open = 0;
   847  0187  12FA               	bcf	_flag_pr_open/(0+8),_flag_pr_open& (0+7)
   848                           
   849                           ;ICH-LR-HR.C: 39: Key_LED.oneBit.PROpen = 0;
   850  0188  107B               	bcf	_Key_LED,0
   851  0189                     l1867:	
   852                           
   853                           ;ICH-LR-HR.C: 40: }
   854                           ;ICH-LR-HR.C: 43: if (Key_state.oneBit.PRClose){
   855  0189  1CCC               	btfss	_Key_state,1
   856  018A  2990               	goto	l1868
   857                           
   858                           ;ICH-LR-HR.C: 44: if (!flag_pr_close){
   859  018B  1A7A               	btfsc	_flag_pr_close/(0+8),_flag_pr_close& (0+7)
   860  018C  2992               	goto	l1864
   861                           
   862                           ;ICH-LR-HR.C: 45: flag_pr_close = 1;
   863  018D  167A               	bsf	_flag_pr_close/(0+8),_flag_pr_close& (0+7)
   864                           
   865                           ;ICH-LR-HR.C: 46: Key_LED.oneBit.PRClose = 1;
   866  018E  14FB               	bsf	_Key_LED,1
   867  018F  2992               	goto	l1864
   868  0190                     l1868:	
   869                           
   870                           ;ICH-LR-HR.C: 49: else{
   871                           ;ICH-LR-HR.C: 50: flag_pr_close = 0;
   872  0190  127A               	bcf	_flag_pr_close/(0+8),_flag_pr_close& (0+7)
   873                           
   874                           ;ICH-LR-HR.C: 51: Key_LED.oneBit.PRClose = 0;
   875  0191  10FB               	bcf	_Key_LED,1
   876  0192                     l1864:	
   877                           
   878                           ;ICH-LR-HR.C: 52: }
   879                           ;ICH-LR-HR.C: 53: }
   880                           ;ICH-LR-HR.C: 56: if(!flag_led_enable){
   881  0192  18FA               	btfsc	_flag_led_enable/(0+8),_flag_led_enable& (0+7)
   882  0193  0008               	return
   883                           
   884                           ;ICH-LR-HR.C: 57: if (Key_state.oneBit.Heat){
   885  0194  1D4C               	btfss	_Key_state,2
   886  0195  29B9               	goto	l1872
   887                           
   888                           ;ICH-LR-HR.C: 58: if(!flag_heat){
   889  0196  187A               	btfsc	_flag_heat/(0+8),_flag_heat& (0+7)
   890  0197  29BA               	goto	l1880
   891  0198  3008               	movlw	8
   892                           
   893                           ;ICH-LR-HR.C: 59: flag_heat = 1;
   894  0199  147A               	bsf	_flag_heat/(0+8),_flag_heat& (0+7)
   895                           
   896                           ;ICH-LR-HR.C: 60: Key_LED.oneBit.Heat = 1;
   897  019A  157B               	bsf	_Key_LED,2
   898                           
   899                           ;ICH-LR-HR.C: 61: heatTimer = 30*60;
   900  019B  00BC               	movwf	_heatTimer
   901  019C  3007               	movlw	7
   902  019D  00BD               	movwf	_heatTimer+1
   903  019E  3003               	movlw	3
   904                           
   905                           ;ICH-LR-HR.C: 63: heatState++;
   906  019F  0ACE               	incf	_heatState,f
   907                           
   908                           ;ICH-LR-HR.C: 64: if (heatState >= 3){
   909  01A0  024E               	subwf	_heatState,w
   910  01A1  1C03               	skipc
   911  01A2  29B1               	goto	l23221
   912                           
   913                           ;ICH-LR-HR.C: 65: heatState = 0;
   914  01A3  01CE               	clrf	_heatState
   915                           
   916                           ;ICH-LR-HR.C: 66: Key_LED.oneBit.Heat = 0;
   917  01A4  117B               	bcf	_Key_LED,2
   918  01A5  29B1               	goto	l23221
   919  01A6                     l23215:	
   920                           
   921                           ;ICH-LR-HR.C: 70: heatIntensity = 6*(20/10);
   922  01A6  300C               	movlw	12
   923  01A7  00B4               	movwf	_heatIntensity
   924  01A8  3014               	movlw	20
   925  01A9  29AC               	goto	L8
   926  01AA                     l23217:	
   927                           ;ICH-LR-HR.C: 72: break;
   928                           
   929                           ;ICH-LR-HR.C: 71: heatLedIntensity = 20;
   930                           
   931                           
   932                           ;ICH-LR-HR.C: 74: heatIntensity = 3*(20/10);
   933  01AA  3006               	movlw	6
   934  01AB  00B4               	movwf	_heatIntensity
   935  01AC                     L8:	
   936  01AC  01B5               	clrf	_heatIntensity+1
   937  01AD  01B6               	clrf	_heatIntensity+2
   938  01AE  01B7               	clrf	_heatIntensity+3
   939                           
   940                           ;ICH-LR-HR.C: 75: heatLedIntensity = 3*20/10;
   941  01AF  00CD               	movwf	_heatLedIntensity
   942                           
   943                           ;ICH-LR-HR.C: 76: break;
   944  01B0  29BA               	goto	l1880
   945  01B1                     l23221:	
   946  01B1  084E               	movf	_heatState,w
   947                           
   948                           ; Switch size 1, requested type "space"
   949                           ; Number of cases is 2, Range of values is 1 to 2
   950                           ; switch strategies available:
   951                           ; Name         Instructions Cycles
   952                           ; simple_byte            7     4 (average)
   953                           ; direct_byte           13     9 (fixed)
   954                           ; jumptable            263     9 (fixed)
   955                           ;	Chosen strategy is simple_byte
   956  01B2  3A01               	xorlw	1	; case 1
   957  01B3  1903               	skipnz
   958  01B4  29A6               	goto	l23215
   959  01B5  3A03               	xorlw	3	; case 2
   960  01B6  1903               	skipnz
   961  01B7  29AA               	goto	l23217
   962  01B8  29BA               	goto	l1880
   963  01B9                     l1872:	
   964                           
   965                           ;ICH-LR-HR.C: 82: flag_heat = 0;
   966  01B9  107A               	bcf	_flag_heat/(0+8),_flag_heat& (0+7)
   967  01BA                     l1880:	
   968                           
   969                           ;ICH-LR-HR.C: 83: }
   970                           ;ICH-LR-HR.C: 86: if (Key_state.oneBit.Massage){
   971  01BA  1DCC               	btfss	_Key_state,3
   972  01BB  29E2               	goto	l1881
   973                           
   974                           ;ICH-LR-HR.C: 87: if (!flag_massage){
   975  01BC  19FA               	btfsc	_flag_massage/(0+8),_flag_massage& (0+7)
   976  01BD  29E3               	goto	l1890
   977  01BE  30B0               	movlw	176
   978                           
   979                           ;ICH-LR-HR.C: 88: flag_massage = 1;
   980  01BF  15FA               	bsf	_flag_massage/(0+8),_flag_massage& (0+7)
   981                           
   982                           ;ICH-LR-HR.C: 89: massageTimer = 20*60;
   983  01C0  00C4               	movwf	_massageTimer
   984  01C1  3004               	movlw	4
   985  01C2  00C5               	movwf	_massageTimer+1
   986                           
   987                           ;ICH-LR-HR.C: 90: Key_LED.oneBit.Massage = 1;
   988  01C3  15FB               	bsf	_Key_LED,3
   989                           
   990                           ;ICH-LR-HR.C: 91: massageState++;
   991  01C4  0AD4               	incf	_massageState,f
   992                           
   993                           ;ICH-LR-HR.C: 92: if (massageState >= 4){
   994  01C5  0254               	subwf	_massageState,w
   995  01C6  1C03               	skipc
   996  01C7  29D7               	goto	l23247
   997                           
   998                           ;ICH-LR-HR.C: 93: massageState = 0;
   999  01C8  01D4               	clrf	_massageState
  1000                           
  1001                           ;ICH-LR-HR.C: 94: Key_LED.oneBit.Massage = 0;
  1002  01C9  11FB               	bcf	_Key_LED,3
  1003  01CA  29D7               	goto	l23247
  1004  01CB                     l23239:	
  1005                           
  1006                           ;ICH-LR-HR.C: 98: massageIntensity = 7*20/10;
  1007  01CB  300E               	movlw	14
  1008  01CC  00D2               	movwf	_massageIntensity
  1009                           
  1010                           ;ICH-LR-HR.C: 99: massageLedIntensity = 20;
  1011  01CD  3014               	movlw	20
  1012  01CE  29D5               	goto	L10
  1013  01CF                     l23241:	
  1014                           ;ICH-LR-HR.C: 100: break;
  1015                           
  1016                           
  1017                           ;ICH-LR-HR.C: 102: massageIntensity = 5*20/10;
  1018  01CF  300A               	movlw	10
  1019  01D0  00D2               	movwf	_massageIntensity
  1020  01D1  29D5               	goto	L10
  1021  01D2                     l23243:	
  1022                           ;ICH-LR-HR.C: 104: break;
  1023                           
  1024                           ;ICH-LR-HR.C: 103: massageLedIntensity = 5*20/10;
  1025                           
  1026                           
  1027                           ;ICH-LR-HR.C: 106: massageIntensity = 3*20/10;
  1028  01D2  3006               	movlw	6
  1029  01D3  00D2               	movwf	_massageIntensity
  1030                           
  1031                           ;ICH-LR-HR.C: 107: massageLedIntensity = 2*20/10;
  1032  01D4  3004               	movlw	4
  1033  01D5                     L10:	
  1034  01D5  00D3               	movwf	_massageLedIntensity
  1035                           
  1036                           ;ICH-LR-HR.C: 108: break;
  1037  01D6  29E3               	goto	l1890
  1038  01D7                     l23247:	
  1039  01D7  0854               	movf	_massageState,w
  1040                           
  1041                           ; Switch size 1, requested type "space"
  1042                           ; Number of cases is 3, Range of values is 1 to 3
  1043                           ; switch strategies available:
  1044                           ; Name         Instructions Cycles
  1045                           ; simple_byte           10     6 (average)
  1046                           ; direct_byte           15     9 (fixed)
  1047                           ; jumptable            263     9 (fixed)
  1048                           ;	Chosen strategy is simple_byte
  1049  01D8  3A01               	xorlw	1	; case 1
  1050  01D9  1903               	skipnz
  1051  01DA  29CB               	goto	l23239
  1052  01DB  3A03               	xorlw	3	; case 2
  1053  01DC  1903               	skipnz
  1054  01DD  29CF               	goto	l23241
  1055  01DE  3A01               	xorlw	1	; case 3
  1056  01DF  1903               	skipnz
  1057  01E0  29D2               	goto	l23243
  1058  01E1  29E3               	goto	l1890
  1059  01E2                     l1881:	
  1060                           
  1061                           ;ICH-LR-HR.C: 114: flag_massage = 0;
  1062  01E2  11FA               	bcf	_flag_massage/(0+8),_flag_massage& (0+7)
  1063  01E3                     l1890:	
  1064                           
  1065                           ;ICH-LR-HR.C: 115: }
  1066                           ;ICH-LR-HR.C: 118: if (Key_state.oneBit.Light){
  1067  01E3  1E4C               	btfss	_Key_state,4
  1068  01E4  29F7               	goto	l1891
  1069                           
  1070                           ;ICH-LR-HR.C: 119: if (!flag_light){
  1071  01E5  197A               	btfsc	_flag_light/(0+8),_flag_light& (0+7)
  1072  01E6  0008               	return
  1073  01E7  3010               	movlw	16
  1074                           
  1075                           ;ICH-LR-HR.C: 120: flag_light = 1;
  1076  01E8  157A               	bsf	_flag_light/(0+8),_flag_light& (0+7)
  1077                           
  1078                           ;ICH-LR-HR.C: 121: lightTimer = 60*60;
  1079  01E9  00C0               	movwf	_lightTimer
  1080  01EA  300E               	movlw	14
  1081  01EB  00C1               	movwf	_lightTimer+1
  1082                           
  1083                           ;ICH-LR-HR.C: 122: Key_LED.oneBit.Light = !Key_LED.oneBit.Light;
  1084  01EC  3000               	movlw	0
  1085  01ED  1E7B               	btfss	_Key_LED,4
  1086  01EE  3001               	movlw	1
  1087  01EF  00D6               	movwf	??_KeyExecute
  1088  01F0  0ED6               	swapf	??_KeyExecute,f
  1089  01F1  087B               	movf	_Key_LED,w
  1090  01F2  0656               	xorwf	??_KeyExecute,w
  1091  01F3  39EF               	andlw	-17
  1092  01F4  0656               	xorwf	??_KeyExecute,w
  1093  01F5  00FB               	movwf	_Key_LED
  1094  01F6  0008               	return
  1095  01F7                     l1891:	
  1096                           
  1097                           ;ICH-LR-HR.C: 125: flag_light = 0;
  1098  01F7  117A               	bcf	_flag_light/(0+8),_flag_light& (0+7)
  1099  01F8  0008               	return
  1100  01F9                     l23257:	
  1101                           ;ICH-LR-HR.C: 126: }
  1102                           ;ICH-LR-HR.C: 127: }
  1103                           ;ICH-LR-HR.C: 128: }else{
  1104                           
  1105  01F9  3000               	movlw	0
  1106                           
  1107                           ;ICH-LR-HR.C: 129: Key_LED.oneBit.PROpen = Key_LED.oneBit.PRClose = flag_pr_open = flag_
      +                          pr_close = flag_heat = flag_massage = flag_light = flag_led_enable = 0;
  1108  01FA  10FA               	bcf	_flag_led_enable/(0+8),_flag_led_enable& (0+7)
  1109  01FB  117A               	bcf	_flag_light/(0+8),_flag_light& (0+7)
  1110  01FC  11FA               	bcf	_flag_massage/(0+8),_flag_massage& (0+7)
  1111  01FD  107A               	bcf	_flag_heat/(0+8),_flag_heat& (0+7)
  1112  01FE  127A               	bcf	_flag_pr_close/(0+8),_flag_pr_close& (0+7)
  1113  01FF  12FA               	bcf	_flag_pr_open/(0+8),_flag_pr_open& (0+7)
  1114  0200  1AFA               	btfsc	_flag_pr_open/(0+8),_flag_pr_open& (0+7)
  1115  0201  3001               	movlw	1
  1116  0202  00D6               	movwf	??_KeyExecute
  1117  0203  0DD6               	rlf	??_KeyExecute,f
  1118  0204  087B               	movf	_Key_LED,w
  1119  0205  0656               	xorwf	??_KeyExecute,w
  1120  0206  39FD               	andlw	-3
  1121  0207  0656               	xorwf	??_KeyExecute,w
  1122  0208  00FB               	movwf	_Key_LED
  1123  0209  0C7B               	rrf	_Key_LED,w
  1124  020A  3901               	andlw	1
  1125  020B  00D7               	movwf	??_KeyExecute+1
  1126  020C  067B               	xorwf	_Key_LED,w
  1127  020D  39FE               	andlw	-2
  1128  020E  0657               	xorwf	??_KeyExecute+1,w
  1129  020F  00FB               	movwf	_Key_LED
  1130  0210  0008               	return
  1131  0211                     __end_of_KeyExecute:	
  1132  0211                     __ptext596:	
  1133 ;; =============== function ___bmul ends ============
  1134                           
  1135                           
  1136 ;; *************** function _Example_System_Init *****************
  1137 ;; Defined at:
  1138 ;;		line 158 in file "main.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;		None               void
  1145 ;; Registers used:
  1146 ;;		wreg, status,2
  1147 ;; Tracked objects:
  1148 ;;		On entry : 17F/0
  1149 ;;		On exit  : 17F/1
  1150 ;;		Unchanged: FFE80/0
  1151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1152 ;;      Params:         0       0       0       0
  1153 ;;      Locals:         0       0       0       0
  1154 ;;      Temps:          0       0       0       0
  1155 ;;      Totals:         0       0       0       0
  1156 ;;Total ram usage:        0 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:    3
  1159 ;; This function calls:
  1160 ;;		Nothing
  1161 ;; This function is called by:
  1162 ;;		_main
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165  0211                     _Example_System_Init:	
  1166                           
  1167                           ;main.c: 169: OSCCON = 0b11110000;
  1168                           
  1169                           ; Regs used in _Example_System_Init: [wreg+status,2]
  1170  0211  30F0               	movlw	240
  1171  0212  0021               	movlb	1	; select bank1
  1172  0213  0099               	movwf	25	;volatile
  1173                           
  1174                           ;main.c: 175: ANSELA = 0b00000000;
  1175  0214  0023               	movlb	3	; select bank3
  1176  0215  018C               	clrf	12	;volatile
  1177                           
  1178                           ;main.c: 176: ANSELB = 0b00000000;
  1179  0216  018D               	clrf	13	;volatile
  1180                           
  1181                           ;main.c: 183: PORTA = 0b00000000;
  1182  0217  0020               	movlb	0	; select bank0
  1183  0218  018C               	clrf	12	;volatile
  1184                           
  1185                           ;main.c: 184: PORTB = 0b00000000;
  1186  0219  018D               	clrf	13	;volatile
  1187                           
  1188                           ;main.c: 185: PORTC = 0b00000000;
  1189  021A  018E               	clrf	14	;volatile
  1190                           
  1191                           ;main.c: 189: PORTE = 0b00000000;
  1192  021B  0190               	clrf	16	;volatile
  1193                           
  1194                           ;main.c: 190: TRISA = 0b00000000;
  1195  021C  0021               	movlb	1	; select bank1
  1196  021D  018C               	clrf	12	;volatile
  1197                           
  1198                           ;main.c: 191: TRISB = 0b00000000;
  1199  021E  018D               	clrf	13	;volatile
  1200                           
  1201                           ;main.c: 192: TRISC = 0b00000000;
  1202  021F  018E               	clrf	14	;volatile
  1203                           
  1204                           ;main.c: 196: TRISE = 0b00000000;
  1205  0220  0190               	clrf	16	;volatile
  1206                           
  1207                           ;main.c: 202: OPTION_REG = 0b10001000;
  1208  0221  3088               	movlw	136
  1209  0222  0095               	movwf	21	;volatile
  1210                           
  1211                           ;main.c: 204: T2CON = 0b01111111;
  1212  0223  307F               	movlw	127
  1213  0224  0020               	movlb	0	; select bank0
  1214  0225  009C               	movwf	28	;volatile
  1215                           
  1216                           ;main.c: 205: TMR2IE = 1;
  1217  0226  0021               	movlb	1	; select bank1
  1218  0227  1491               	bsf	17,1
  1219  0228  0008               	return
  1220  0229                     __end_of_Example_System_Init:	
  1221  0229                     __ptext594:	
  1222 ;; =============== function _mTouch_ButtonStateMachine ends ============
  1223                           
  1224                           
  1225 ;; *************** function _mTouch_Init *****************
  1226 ;; Defined at:
  1227 ;;		line 210 in file "mTouch.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  acqData         1    3[BANK0 ] PTR struct .
  1232 ;;		 -> mTouch_acqData(20), 
  1233 ;;  sensorIndex     1    4[BANK0 ] char 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;		None               void
  1236 ;; Registers used:
  1237 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : 17F/1
  1240 ;;		On exit  : 17F/1
  1241 ;;		Unchanged: FFE80/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1243 ;;      Params:         0       0       0       0
  1244 ;;      Locals:         0       2       0       0
  1245 ;;      Temps:          0       0       0       0
  1246 ;;      Totals:         0       2       0       0
  1247 ;;Total ram usage:        2 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; Hardware stack levels required when called:    4
  1250 ;; This function calls:
  1251 ;;		___bmul
  1252 ;;		_mTouch_ChangeMode
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257  0229                     _mTouch_Init:	
  1258                           
  1259                           ;mTouch.c: 228: for (int8_t sensorIndex = 5-1; sensorIndex >= 0; sensorIndex--)
  1260                           
  1261                           ; Regs used in _mTouch_Init: [wreg+fsr1l-status,0+pclath+cstack]
  1262  0229  3004               	movlw	4
  1263  022A  0020               	movlb	0	; select bank0
  1264  022B  00DA               	movwf	mTouch_Init@sensorIndex
  1265  022C                     l23559:	
  1266                           
  1267                           ;mTouch.c: 229: {
  1268                           ;mTouch.c: 232: mTouch_AcquisitionData* acqData = &mTouch_acqData[sensorIndex];
  1269  022C  085A               	movf	mTouch_Init@sensorIndex,w
  1270  022D  0709               	addwf	9,w
  1271  022E  0709               	addwf	9,w
  1272  022F  3EBA               	addlw	_mTouch_acqData& (0+255)
  1273  0230  00D9               	movwf	mTouch_Init@acqData
  1274                           
  1275                           ;mTouch.c: 233: (*acqData).result.v &= 0x000F;
  1276  0231  3E02               	addlw	2
  1277  0232  0086               	movwf	6
  1278  0233  300F               	movlw	15
  1279  0234  0187               	clrf	7
  1280  0235  0581               	andwf	1,f
  1281  0236  3141               	addfsr 1,1
  1282  0237  0181               	clrf	1
  1283                           
  1284                           ;mTouch.c: 234: (*acqData).result.v |= (uint16_t)(0x47F << 4);
  1285  0238  0859               	movf	mTouch_Init@acqData,w
  1286  0239  3E02               	addlw	2
  1287  023A  0086               	movwf	6
  1288  023B  30F0               	movlw	240
  1289  023C  0187               	clrf	7
  1290  023D  0481               	iorwf	1,f
  1291  023E  3141               	addfsr 1,1
  1292  023F  3047               	movlw	71
  1293  0240  0481               	iorwf	1,f
  1294                           
  1295                           ;mTouch.c: 236: mTouch_stateVars.sensor[sensorIndex].state = MTOUCH_INITIALIZING;
  1296  0241  3005               	movlw	5
  1297  0242  00D6               	movwf	?___bmul
  1298  0243  085A               	movf	mTouch_Init@sensorIndex,w
  1299  0244  233A  3181         	fcall	___bmul
  1300  0246  3EA1               	addlw	(_mTouch_stateVars+1)& (0+255)
  1301  0247  0086               	movwf	6
  1302  0248  30FC               	movlw	-4
  1303  0249  0187               	clrf	7
  1304  024A  0581               	andwf	1,f
  1305                           
  1306                           ;mTouch.c: 238: mTouch_stateVars.sensor[sensorIndex].timeout = 0;
  1307  024B  3005               	movlw	5
  1308  024C  00D6               	movwf	?___bmul
  1309  024D  085A               	movf	mTouch_Init@sensorIndex,w
  1310  024E  233A  3181         	fcall	___bmul
  1311  0250  3EA1               	addlw	(_mTouch_stateVars+1)& (0+255)
  1312  0251  0086               	movwf	6
  1313  0252  3005               	movlw	5
  1314  0253  0187               	clrf	7
  1315  0254  1181               	bcf	1,3
  1316                           
  1317                           ;mTouch.c: 240: mTouch_stateVars.sensor[sensorIndex].timer = 30;
  1318  0255  00D6               	movwf	?___bmul
  1319  0256  085A               	movf	mTouch_Init@sensorIndex,w
  1320  0257  233A  3181         	fcall	___bmul
  1321  0259  3EA3               	addlw	(_mTouch_stateVars+3)& (0+255)
  1322  025A  0086               	movwf	6
  1323  025B  301E               	movlw	30
  1324  025C  0187               	clrf	7
  1325  025D  3FC0               	movwi [0]fsr1
  1326  025E  3000               	movlw	0
  1327  025F  3FC1               	movwi [1]fsr1
  1328                           
  1329                           ;mTouch.c: 241: mTouch_stateVars.sensor[sensorIndex].baselineCount = 255;
  1330  0260  3005               	movlw	5
  1331  0261  00D6               	movwf	?___bmul
  1332  0262  085A               	movf	mTouch_Init@sensorIndex,w
  1333  0263  233A  3181         	fcall	___bmul
  1334  0265  244C  3181         	fcall	PL13	;call to abstracted procedure
  1335                           
  1336                           ;mTouch.c: 243: mTouch_stateVars.sensor[sensorIndex].debounce = 0;
  1337  0267  3005               	movlw	5
  1338  0268  00D6               	movwf	?___bmul
  1339  0269  085A               	movf	mTouch_Init@sensorIndex,w
  1340  026A  233A  3181         	fcall	___bmul
  1341  026C  3EA5               	addlw	(_mTouch_stateVars+5)& (0+255)
  1342  026D  0086               	movwf	6
  1343  026E  30FC               	movlw	-4
  1344  026F  0187               	clrf	7
  1345  0270  0581               	andwf	1,f
  1346                           
  1347                           ;mTouch.c: 246: mTouch_average [sensorIndex] = 0;
  1348  0271  355A               	lslf	mTouch_Init@sensorIndex,w
  1349  0272  3E20               	addlw	_mTouch_average& (0+255)
  1350  0273  0086               	movwf	6
  1351  0274  0181               	clrf	1
  1352  0275  3141               	addfsr 1,1
  1353  0276  0181               	clrf	1
  1354  0277  03DA               	decf	mTouch_Init@sensorIndex,f
  1355  0278  1FDA               	btfss	mTouch_Init@sensorIndex,7
  1356  0279  2A2C               	goto	l23559
  1357                           
  1358                           ;mTouch.c: 251: }
  1359                           ;mTouch.c: 280: mTouch_state.dataReady = 0;
  1360  027A  1051               	bcf	_mTouch_state,0
  1361                           
  1362                           ;mTouch.c: 281: mTouch_state.areInitialized = 0;
  1363  027B  10D1               	bcf	_mTouch_state,1
  1364                           
  1365                           ;mTouch.c: 306: mTouch_ChangeMode();
  1366  027C  235B               	fcall	_mTouch_ChangeMode
  1367                           
  1368                           ;mTouch.c: 310: ADCON1bits.ADCS = 0b101; ADCON1bits.ADFM = 1;;
  1369  027D  081E               	movf	30,w	;volatile
  1370  027E  398F               	andlw	-113
  1371  027F  3850               	iorlw	80
  1372  0280  009E               	movwf	30	;volatile
  1373  0281  179E               	bsf	30,7	;volatile
  1374                           
  1375                           ;mTouch.c: 316: TMR0IF = 0; TMR0IE = 1;;
  1376  0282  110B               	bcf	11,2
  1377  0283  168B               	bsf	11,5
  1378  0284  0008               	return
  1379  0285                     __end_of_mTouch_Init:	
  1380  0285                     __ptext592:	
  1381 ;; =============== function _mTouch_Decode ends ============
  1382                           
  1383                           
  1384 ;; *************** function _mTouch_UpdateBaseline *****************
  1385 ;; Defined at:
  1386 ;;		line 970 in file "mTouch.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;		None
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  reading         2   10[BANK0 ] unsigned int 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;		None               void
  1393 ;; Registers used:
  1394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 1F/0
  1397 ;;		On exit  : 1F/0
  1398 ;;		Unchanged: FFE00/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1400 ;;      Params:         0       0       0       0
  1401 ;;      Locals:         0       2       0       0
  1402 ;;      Temps:          0       7       0       0
  1403 ;;      Totals:         0       9       0       0
  1404 ;;Total ram usage:        9 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    4
  1407 ;; This function calls:
  1408 ;;		___bmul
  1409 ;; This function is called by:
  1410 ;;		_mTouch_Decode
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413  0285                     _mTouch_UpdateBaseline:	
  1414                           
  1415                           ;mTouch.c: 971: uint16_t reading = mTouch_sensorData[mTouch_currentScan];
  1416                           
  1417                           ; Regs used in _mTouch_UpdateBaseline: [wreg-status,0+pclath+cstack]
  1418  0285  354F               	lslf	_mTouch_currentScan,w
  1419  0286  3E2A               	addlw	_mTouch_sensorData& (0+255)
  1420  0287  0086               	movwf	6
  1421  0288  0187               	clrf	7
  1422  0289  3F40               	moviw [0]fsr1
  1423  028A  00E0               	movwf	mTouch_UpdateBaseline@reading
  1424  028B  3F41               	moviw [1]fsr1
  1425  028C  00E1               	movwf	mTouch_UpdateBaseline@reading+1
  1426                           
  1427                           ;mTouch.c: 987: if (mTouch_stateVars.sensor[mTouch_currentScan].timeout)
  1428  028D  3005               	movlw	5
  1429  028E  00D6               	movwf	?___bmul
  1430  028F  084F               	movf	_mTouch_currentScan,w
  1431  0290  233A  3181         	fcall	___bmul
  1432  0292  3EA1               	addlw	(_mTouch_stateVars+1)& (0+255)
  1433  0293  0086               	movwf	6
  1434  0294  0187               	clrf	7
  1435  0295  1D81               	btfss	1,3
  1436  0296  2AC6               	goto	l9224
  1437                           
  1438                           ;mTouch.c: 988: {
  1439                           ;mTouch.c: 989: if ((int16_t)(mTouch_average[mTouch_currentScan] - reading) > (int16_t)(
      +                          mTouch_pressThreshold[mTouch_currentScan] >> 1))
  1440  0297  354F               	lslf	_mTouch_currentScan,w
  1441  0298  2445  3181         	fcall	PL11	;call to abstracted procedure
  1442  029A  0860               	movf	mTouch_UpdateBaseline@reading,w
  1443  029B  0259               	subwf	??_mTouch_UpdateBaseline,w
  1444  029C  00DB               	movwf	??_mTouch_UpdateBaseline+2
  1445  029D  0861               	movf	mTouch_UpdateBaseline@reading+1,w
  1446  029E  3B5A               	subwfb	??_mTouch_UpdateBaseline+1,w
  1447  029F  00DC               	movwf	??_mTouch_UpdateBaseline+3
  1448  02A0  2437  3181         	fcall	PL9	;call to abstracted procedure
  1449  02A2  00DD               	movwf	??_mTouch_UpdateBaseline+4
  1450  02A3  3F01               	moviw [1]fsr0
  1451  02A4  00DE               	movwf	??_mTouch_UpdateBaseline+5
  1452  02A5  36DE               	lsrf	??_mTouch_UpdateBaseline+5,f
  1453  02A6  0CDD               	rrf	??_mTouch_UpdateBaseline+4,f
  1454  02A7  085E               	movf	??_mTouch_UpdateBaseline+5,w
  1455  02A8  3A80               	xorlw	128
  1456  02A9  00DF               	movwf	??_mTouch_UpdateBaseline+6
  1457  02AA  085C               	movf	??_mTouch_UpdateBaseline+3,w
  1458  02AB  3A80               	xorlw	128
  1459  02AC  025F               	subwf	??_mTouch_UpdateBaseline+6,w
  1460  02AD  1D03               	skipz
  1461  02AE  2AB1               	goto	u1795
  1462  02AF  085B               	movf	??_mTouch_UpdateBaseline+2,w
  1463  02B0  025D               	subwf	??_mTouch_UpdateBaseline+4,w
  1464  02B1                     u1795:	
  1465                           
  1466                           ;mTouch.c: 990: {
  1467                           ;mTouch.c: 991: mTouch_stateVars.sensor[mTouch_currentScan].baselineCorrection = 1;
  1468  02B1  3005               	movlw	5
  1469  02B2  1803               	skipnc
  1470  02B3  2AC7               	goto	L1
  1471  02B4  0020               	movlb	0	; select bank0
  1472  02B5  00D6               	movwf	?___bmul
  1473  02B6  084F               	movf	_mTouch_currentScan,w
  1474  02B7  233A  3181         	fcall	___bmul
  1475  02B9  3EA1               	addlw	(_mTouch_stateVars+1)& (0+255)
  1476  02BA  0086               	movwf	6
  1477  02BB  3005               	movlw	5
  1478  02BC  0187               	clrf	7
  1479  02BD  1501               	bsf	1,2
  1480                           
  1481                           ;mTouch.c: 992: mTouch_stateVars.sensor[mTouch_currentScan].timeout = 0;
  1482  02BE  00D6               	movwf	?___bmul
  1483  02BF  084F               	movf	_mTouch_currentScan,w
  1484  02C0  233A  3181         	fcall	___bmul
  1485  02C2  3EA1               	addlw	(_mTouch_stateVars+1)& (0+255)
  1486  02C3  0086               	movwf	6
  1487  02C4  0187               	clrf	7
  1488  02C5  1181               	bcf	1,3
  1489  02C6                     l9224:	
  1490                           
  1491                           ;mTouch.c: 993: }
  1492                           ;mTouch.c: 994: }
  1493                           ;mTouch.c: 997: if (mTouch_stateVars.sensor[mTouch_currentScan].baselineCorrection)
  1494  02C6  3005               	movlw	5
  1495  02C7                     L1:	
  1496  02C7  0020               	movlb	0	; select bank0
  1497  02C8  00D6               	movwf	?___bmul
  1498  02C9  084F               	movf	_mTouch_currentScan,w
  1499  02CA  233A  3181         	fcall	___bmul
  1500  02CC  3EA1               	addlw	(_mTouch_stateVars+1)& (0+255)
  1501  02CD  0086               	movwf	6
  1502  02CE  3005               	movlw	5
  1503  02CF  0187               	clrf	7
  1504                           
  1505                           ;mTouch.c: 998: {
  1506                           ;mTouch.c: 999: mTouch_stateVars.sensor[mTouch_currentScan].baselineCount = 1;
  1507  02D0  1D01               	btfss	1,2
  1508  02D1  2B05               	goto	L2
  1509  02D2  00D6               	movwf	?___bmul
  1510  02D3  084F               	movf	_mTouch_currentScan,w
  1511  02D4  233A  3181         	fcall	___bmul
  1512  02D6  3EA2               	addlw	(_mTouch_stateVars+2)& (0+255)
  1513  02D7  0086               	movwf	6
  1514  02D8  0187               	clrf	7
  1515  02D9  0801               	movf	1,w
  1516  02DA  3900               	andlw	-256
  1517  02DB  3801               	iorlw	1
  1518  02DC  0081               	movwf	1
  1519                           
  1520                           ;mTouch.c: 1001: if ((int16_t)(mTouch_average[mTouch_currentScan] - reading) < (int16_t)
      +                          (mTouch_releaseThreshold[mTouch_currentScan]))
  1521  02DD  243E  3181         	fcall	PL10	;call to abstracted procedure
  1522  02DF  00D9               	movwf	??_mTouch_UpdateBaseline
  1523  02E0  3F01               	moviw [1]fsr0
  1524  02E1  00DA               	movwf	??_mTouch_UpdateBaseline+1
  1525  02E2  354F               	lslf	_mTouch_currentScan,w
  1526  02E3  3E20               	addlw	_mTouch_average& (0+255)
  1527  02E4  0086               	movwf	6
  1528  02E5  3F40               	moviw [0]fsr1
  1529  02E6  00DB               	movwf	??_mTouch_UpdateBaseline+2
  1530  02E7  3F41               	moviw [1]fsr1
  1531  02E8  00DC               	movwf	??_mTouch_UpdateBaseline+3
  1532  02E9  0860               	movf	mTouch_UpdateBaseline@reading,w
  1533  02EA  025B               	subwf	??_mTouch_UpdateBaseline+2,w
  1534  02EB  00DD               	movwf	??_mTouch_UpdateBaseline+4
  1535  02EC  0861               	movf	mTouch_UpdateBaseline@reading+1,w
  1536  02ED  3B5C               	subwfb	??_mTouch_UpdateBaseline+3,w
  1537  02EE  00DE               	movwf	??_mTouch_UpdateBaseline+5
  1538  02EF  3A80               	xorlw	128
  1539  02F0  00DF               	movwf	??_mTouch_UpdateBaseline+6
  1540  02F1  085A               	movf	??_mTouch_UpdateBaseline+1,w
  1541  02F2  3A80               	xorlw	128
  1542  02F3  025F               	subwf	??_mTouch_UpdateBaseline+6,w
  1543  02F4  1D03               	skipz
  1544  02F5  2AF8               	goto	u1815
  1545  02F6  0859               	movf	??_mTouch_UpdateBaseline,w
  1546  02F7  025D               	subwf	??_mTouch_UpdateBaseline+4,w
  1547  02F8                     u1815:	
  1548                           
  1549                           ;mTouch.c: 1002: {
  1550                           ;mTouch.c: 1003: mTouch_stateVars.sensor[mTouch_currentScan].baselineCorrection = 0;
  1551  02F8  3005               	movlw	5
  1552  02F9  1803               	skipnc
  1553  02FA  2B05               	goto	L2
  1554  02FB  0020               	movlb	0	; select bank0
  1555  02FC  00D6               	movwf	?___bmul
  1556  02FD  084F               	movf	_mTouch_currentScan,w
  1557  02FE  233A  3181         	fcall	___bmul
  1558  0300  3EA1               	addlw	(_mTouch_stateVars+1)& (0+255)
  1559  0301  0086               	movwf	6
  1560  0302  3005               	movlw	5
  1561  0303  0187               	clrf	7
  1562  0304  1101               	bcf	1,2
  1563  0305                     L2:	
  1564                           ;mTouch.c: 1004: }
  1565                           ;mTouch.c: 1005: }
  1566                           ;mTouch.c: 1010: if ((uint8_t)(--(mTouch_stateVars.sensor[mTouch_currentScan].baselineCo
      +                          unt)) == 0)
  1567                           
  1568  0305  0020               	movlb	0	; select bank0
  1569  0306  00D6               	movwf	?___bmul
  1570  0307  084F               	movf	_mTouch_currentScan,w
  1571  0308  233A  3181         	fcall	___bmul
  1572  030A  3EA2               	addlw	(_mTouch_stateVars+2)& (0+255)
  1573  030B  0086               	movwf	6
  1574  030C  0187               	clrf	7
  1575  030D  0801               	movf	1,w
  1576  030E  39FF               	andlw	255
  1577  030F  00D9               	movwf	??_mTouch_UpdateBaseline
  1578  0310  03D9               	decf	??_mTouch_UpdateBaseline,f
  1579  0311  0801               	movf	1,w
  1580  0312  0659               	xorwf	??_mTouch_UpdateBaseline,w
  1581  0313  3900               	andlw	-256
  1582  0314  0659               	xorwf	??_mTouch_UpdateBaseline,w
  1583  0315  0081               	movwf	1
  1584  0316  0801               	movf	1,w
  1585  0317  39FF               	andlw	255
  1586  0318  1D03               	skipz
  1587  0319  0008               	return
  1588                           
  1589                           ;mTouch.c: 1012: {
  1590                           ;mTouch.c: 1013: mTouch_stateVars.sensor[mTouch_currentScan].baselineCount = 255;
  1591  031A  3005               	movlw	5
  1592  031B  00D6               	movwf	?___bmul
  1593  031C  084F               	movf	_mTouch_currentScan,w
  1594  031D  233A  3181         	fcall	___bmul
  1595  031F  244C  3181         	fcall	PL13	;call to abstracted procedure
  1596                           
  1597                           ;mTouch.c: 1032: mTouch_average[mTouch_currentScan] -= (uint16_t)(mTouch_average[mTouch_
      +                          currentScan] >> 3);
  1598  0321  354F               	lslf	_mTouch_currentScan,w
  1599  0322  2445  3181         	fcall	PL11	;call to abstracted procedure
  1600  0324  241F  3181         	fcall	PL5	;call to abstracted procedure
  1601  0326  0859               	movf	??_mTouch_UpdateBaseline,w
  1602  0327  0281               	subwf	1,f
  1603  0328  3141               	addfsr 1,1
  1604  0329  085A               	movf	??_mTouch_UpdateBaseline+1,w
  1605  032A  3B81               	subwfb	1,f
  1606  032B  317F               	addfsr 1,-1
  1607                           
  1608                           ;mTouch.c: 1033: mTouch_average[mTouch_currentScan] += (uint16_t)(reading >> 3);
  1609  032C  0861               	movf	mTouch_UpdateBaseline@reading+1,w
  1610  032D  00DA               	movwf	??_mTouch_UpdateBaseline+1
  1611  032E  0860               	movf	mTouch_UpdateBaseline@reading,w
  1612  032F  00D9               	movwf	??_mTouch_UpdateBaseline
  1613  0330  241F  3181         	fcall	PL5	;call to abstracted procedure
  1614  0332  0187               	clrf	7
  1615  0333  0859               	movf	??_mTouch_UpdateBaseline,w
  1616  0334  0781               	addwf	1,f
  1617  0335  3141               	addfsr 1,1
  1618  0336  085A               	movf	??_mTouch_UpdateBaseline+1,w
  1619  0337  3D81               	addwfc	1,f
  1620  0338  317F               	addfsr 1,-1
  1621  0339  0008               	return
  1622  033A                     __end_of_mTouch_UpdateBaseline:	
  1623  033A                     __ptext595:	
  1624 ;; =============== function _mTouch_Init ends ============
  1625                           
  1626                           
  1627 ;; *************** function ___bmul *****************
  1628 ;; Defined at:
  1629 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  multiplier      1    wreg     unsigned char 
  1632 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  multiplier      1    2[BANK0 ] unsigned char 
  1635 ;;  product         1    1[BANK0 ] unsigned char 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      unsigned char 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, status,0
  1640 ;; Tracked objects:
  1641 ;;		On entry : 1F/0
  1642 ;;		On exit  : 1F/0
  1643 ;;		Unchanged: FFFE0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1645 ;;      Params:         0       1       0       0
  1646 ;;      Locals:         0       2       0       0
  1647 ;;      Temps:          0       0       0       0
  1648 ;;      Totals:         0       3       0       0
  1649 ;;Total ram usage:        3 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:    3
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_mTouch_ButtonStateMachine
  1656 ;;		_mTouch_Init
  1657 ;;		_mTouch_UpdateBaseline
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660  033A                     ___bmul:	
  1661                           
  1662                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1663                           ;___bmul@multiplier stored from wreg
  1664  033A  00D8               	movwf	___bmul@multiplier
  1665  033B  01D7               	clrf	___bmul@product
  1666  033C                     l23519:	
  1667  033C  0856               	movf	___bmul@multiplicand,w
  1668  033D  1858               	btfsc	___bmul@multiplier,0
  1669  033E  07D7               	addwf	___bmul@product,f
  1670  033F  35D6               	lslf	___bmul@multiplicand,f
  1671  0340  36D8               	lsrf	___bmul@multiplier,f
  1672  0341  08D8               	movf	___bmul@multiplier,f
  1673  0342  1D03               	skipz
  1674  0343  2B3C               	goto	l23519
  1675  0344  0857               	movf	___bmul@product,w
  1676  0345  0008               	return
  1677  0346                     __end_of___bmul:	
  1678  0346                     __ptext591:	
  1679 ;; =============== function _main ends ============
  1680                           
  1681                           
  1682 ;; *************** function _mTouch_Decode *****************
  1683 ;; Defined at:
  1684 ;;		line 340 in file "mTouch.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;		None               void
  1691 ;; Registers used:
  1692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 1F/0
  1695 ;;		On exit  : 1F/1
  1696 ;;		Unchanged: FFE00/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1698 ;;      Params:         0       0       0       0
  1699 ;;      Locals:         0       0       0       0
  1700 ;;      Temps:          0       0       0       0
  1701 ;;      Totals:         0       0       0       0
  1702 ;;Total ram usage:        0 bytes
  1703 ;; Hardware stack levels used:    1
  1704 ;; Hardware stack levels required when called:    5
  1705 ;; This function calls:
  1706 ;;		_mTouch_ButtonStateMachine
  1707 ;;		_mTouch_UpdateBaseline
  1708 ;;		_mTouch_ChangeMode
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713  0346                     _mTouch_Decode:	
  1714                           
  1715                           ;mTouch.c: 345: TMR0IE = 0;;
  1716                           
  1717                           ; Regs used in _mTouch_Decode: [wreg-status,0+pclath+cstack]
  1718  0346  128B               	bcf	11,5
  1719                           
  1720                           ;mTouch.c: 348: mTouch_state.areInitialized = 1;
  1721  0347  14D1               	bsf	_mTouch_state,1
  1722                           
  1723                           ;mTouch.c: 349: mTouch_state.buttonStateChange = 0;
  1724  0348  1151               	bcf	_mTouch_state,2
  1725                           
  1726                           ;mTouch.c: 370: mTouch_currentScan = 0;
  1727  0349  01CF               	clrf	_mTouch_currentScan
  1728                           
  1729                           ;mTouch.c: 426: mTouch_currentScan = 0;
  1730  034A  01CF               	clrf	_mTouch_currentScan
  1731  034B                     l23689:	
  1732                           
  1733                           ;mTouch.c: 432: {
  1734                           ;mTouch.c: 438: if (mTouch_ButtonStateMachine())
  1735  034B  2361  3181         	fcall	_mTouch_ButtonStateMachine
  1736  034D  3A00               	xorlw	0
  1737  034E  1903               	skipnz
  1738  034F  2B52               	goto	l23693
  1739                           
  1740                           ;mTouch.c: 443: {
  1741                           ;mTouch.c: 444: mTouch_UpdateBaseline();
  1742  0350  2285  3181         	fcall	_mTouch_UpdateBaseline
  1743  0352                     l23693:	
  1744                           
  1745                           ;mTouch.c: 445: }
  1746                           ;mTouch.c: 448: mTouch_currentScan++;
  1747  0352  0ACF               	incf	_mTouch_currentScan,f
  1748                           
  1749                           ;mTouch.c: 449: } while (mTouch_currentScan != 5);
  1750  0353  084F               	movf	_mTouch_currentScan,w
  1751  0354  3A05               	xorlw	5
  1752  0355  1D03               	skipz
  1753  0356  2B4B               	goto	l23689
  1754                           
  1755                           ;mTouch.c: 515: mTouch_ChangeMode();
  1756  0357  235B               	fcall	_mTouch_ChangeMode
  1757                           
  1758                           ;mTouch.c: 521: TMR0IF = 0; TMR0IE = 1;;
  1759  0358  110B               	bcf	11,2
  1760  0359  168B               	bsf	11,5
  1761  035A  0008               	return
  1762  035B                     __end_of_mTouch_Decode:	
  1763  035B                     __ptext597:	
  1764 ;; =============== function _Example_System_Init ends ============
  1765                           
  1766                           
  1767 ;; *************** function _mTouch_ChangeMode *****************
  1768 ;; Defined at:
  1769 ;;		line 470 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;		None               void
  1776 ;; Registers used:
  1777 ;;		wreg, status,2
  1778 ;; Tracked objects:
  1779 ;;		On entry : 1F/0
  1780 ;;		On exit  : 1F/1
  1781 ;;		Unchanged: FFFE0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1783 ;;      Params:         0       0       0       0
  1784 ;;      Locals:         0       0       0       0
  1785 ;;      Temps:          0       0       0       0
  1786 ;;      Totals:         0       0       0       0
  1787 ;;Total ram usage:        0 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    3
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_mTouch_Init
  1794 ;;		_mTouch_Decode
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797  035B                     _mTouch_ChangeMode:	
  1798  035B  301E               	movlw	30
  1799                           
  1800                           ;cas16f1933.h: 472: mTouch_currentAcqData = 0;
  1801                           
  1802                           ; Regs used in _mTouch_ChangeMode: [wreg+status,2]
  1803  035C  01FD               	clrf	_mTouch_currentAcqData
  1804                           
  1805                           ;cas16f1933.h: 491: mTouch_currentScan = 0;
  1806  035D  01CF               	clrf	_mTouch_currentScan
  1807                           
  1808                           ;cas16f1933.h: 509: mTouch_stateVars.sampleCounter = 30;
  1809  035E  0021               	movlb	1	; select bank1
  1810  035F  00A0               	movwf	_mTouch_stateVars^(0+128)
  1811  0360  0008               	return
  1812  0361                     __end_of_mTouch_ChangeMode:	
  1813  0361                     __ptext593:	
  1814 ;; =============== function _mTouch_UpdateBaseline ends ============
  1815                           
  1816                           
  1817 ;; *************** function _mTouch_ButtonStateMachine *****************
  1818 ;; Defined at:
  1819 ;;		line 528 in file "mTouch.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  delta           2    5[BANK0 ] unsigned int 
  1824 ;;  sensor          1    7[BANK0 ] PTR struct .
  1825 ;;		 -> mTouch_stateVars(26), 
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  1    wreg      unsigned char 
  1828 ;; Registers used:
  1829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1830 ;; Tracked objects:
  1831 ;;		On entry : 1F/0
  1832 ;;		On exit  : 1F/0
  1833 ;;		Unchanged: FFFE0/0
  1834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1835 ;;      Params:         0       0       0       0
  1836 ;;      Locals:         0       3       0       0
  1837 ;;      Temps:          0       2       0       0
  1838 ;;      Totals:         0       5       0       0
  1839 ;;Total ram usage:        5 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; Hardware stack levels required when called:    4
  1842 ;; This function calls:
  1843 ;;		___bmul
  1844 ;; This function is called by:
  1845 ;;		_mTouch_Decode
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848  0361                     _mTouch_ButtonStateMachine:	
  1849                           
  1850                           ;mTouch.c: 543: mTouch_SensorVariables* sensor = &mTouch_stateVars.sensor[mTouch_current
      +                          Scan];
  1851                           
  1852                           ; Regs used in _mTouch_ButtonStateMachine: [wreg-status,0+pclath+cstack]
  1853  0361  3005               	movlw	5
  1854  0362  00D6               	movwf	?___bmul
  1855  0363  084F               	movf	_mTouch_currentScan,w
  1856  0364  233A  3181         	fcall	___bmul
  1857  0366  3EA1               	addlw	(_mTouch_stateVars+1)& (0+255)
  1858  0367  00DD               	movwf	mTouch_ButtonStateMachine@sensor
  1859                           
  1860                           ;mTouch.c: 551: uint16_t delta = mTouch_sensorData[mTouch_currentScan] - mTouch_average[
      +                          mTouch_currentScan];
  1861  0368  354F               	lslf	_mTouch_currentScan,w
  1862  0369  3E20               	addlw	_mTouch_average& (0+255)
  1863  036A  0086               	movwf	6
  1864  036B  0187               	clrf	7
  1865  036C  354F               	lslf	_mTouch_currentScan,w
  1866  036D  3E2A               	addlw	_mTouch_sensorData& (0+255)
  1867  036E  0084               	movwf	4
  1868  036F  0185               	clrf	5
  1869  0370  3F40               	moviw [0]fsr1
  1870  0371  0200               	subwf	0,w
  1871  0372  00DB               	movwf	mTouch_ButtonStateMachine@delta
  1872  0373  3101               	addfsr 0,1
  1873  0374  3F41               	moviw [1]fsr1
  1874  0375  3B00               	subwfb	0,w
  1875  0376  00DC               	movwf	mTouch_ButtonStateMachine@delta+1
  1876                           
  1877                           ;mTouch.c: 553: if ((int16_t) delta < 0)
  1878  0377  1FDC               	btfss	mTouch_ButtonStateMachine@delta+1,7
  1879  0378  2BED               	goto	l23659
  1880                           
  1881                           ;mTouch.c: 554: {
  1882                           ;mTouch.c: 555: delta = 0;
  1883  0379  01DB               	clrf	mTouch_ButtonStateMachine@delta
  1884  037A  01DC               	clrf	mTouch_ButtonStateMachine@delta+1
  1885  037B  2BED               	goto	l23659
  1886  037C                     l23599:	
  1887                           
  1888                           ;mTouch.c: 620: {
  1889                           ;mTouch.c: 621: if (--((*sensor).timer) <= 0)
  1890  037C  240C  3181         	fcall	PL3	;call to abstracted procedure
  1891  037E  1D03               	skipz
  1892  037F  2B86               	goto	l9206
  1893                           
  1894                           ;mTouch.c: 622: {
  1895                           ;mTouch.c: 627: (*sensor).state = MTOUCH_RELEASED;
  1896  0380  085D               	movf	mTouch_ButtonStateMachine@sensor,w
  1897  0381  2430  3181         	fcall	PL7	;call to abstracted procedure
  1898                           
  1899                           ;mTouch.c: 629: mTouch_average[mTouch_currentScan] = mTouch_sensorData[mTouch_currentSca
      +                          n];
  1900                           
  1901                           ;mTouch.c: 632: (*sensor).debounce = 2;
  1902  0383  23FA  3181         	fcall	PL2	;call to abstracted procedure
  1903  0385  2BE9               	goto	L5
  1904  0386                     l9206:	
  1905                           ;mTouch.c: 635: }
  1906                           
  1907                           
  1908                           ;mTouch.c: 636: else
  1909                           ;mTouch.c: 637: {
  1910                           ;mTouch.c: 639: mTouch_state.areInitialized = 0;
  1911  0386  10D1               	bcf	_mTouch_state,1
  1912  0387  3400               	retlw	0
  1913  0388                     L6:	
  1914                           ;mTouch.c: 674: {
  1915                           ;mTouch.c: 686: if ((*sensor).debounce == 0)
  1916                           
  1917  0388  2452  3181         	fcall	PL14	;call to abstracted procedure
  1918  038A  1D03               	skipz
  1919  038B  2B9A               	goto	l23617
  1920                           
  1921                           ;mTouch.c: 687: {
  1922                           ;mTouch.c: 688: (*sensor).debounce = 2;
  1923  038C  085D               	movf	mTouch_ButtonStateMachine@sensor,w
  1924  038D  3E04               	addlw	4
  1925                           
  1926                           ;mTouch.c: 694: (*sensor).state = MTOUCH_PRESSED;
  1927  038E  2429  3181         	fcall	PL6	;call to abstracted procedure
  1928                           
  1929                           ;mTouch.c: 698: (*sensor).timer = 3000;
  1930  0390  2429  3181         	fcall	PL6	;call to abstracted procedure
  1931  0392  3E02               	addlw	2
  1932  0393  0086               	movwf	6
  1933  0394  30B8               	movlw	184
  1934  0395  3FC0               	movwi [0]fsr1
  1935  0396  300B               	movlw	11
  1936  0397  3FC1               	movwi [1]fsr1
  1937  0398                     l23615:	
  1938                           
  1939                           ;mTouch.c: 710: mTouch_state.buttonStateChange = 1;
  1940  0398  1551               	bsf	_mTouch_state,2
  1941                           
  1942                           ;mTouch.c: 714: }
  1943  0399  3400               	retlw	0
  1944  039A                     l23617:	
  1945                           
  1946                           ;mTouch.c: 715: else
  1947                           ;mTouch.c: 716: {
  1948                           ;mTouch.c: 717: (*sensor).debounce--;
  1949  039A  085D               	movf	mTouch_ButtonStateMachine@sensor,w
  1950  039B  2452               	fcall	PL14	;call to abstracted procedure
  1951  039C  00D9               	movwf	??_mTouch_ButtonStateMachine
  1952  039D  03D9               	decf	??_mTouch_ButtonStateMachine,f
  1953  039E  0801               	movf	1,w
  1954  039F  0659               	xorwf	??_mTouch_ButtonStateMachine,w
  1955  03A0  39FC               	andlw	-4
  1956  03A1  0659               	xorwf	??_mTouch_ButtonStateMachine,w
  1957  03A2                     L3:	
  1958  03A2  0081               	movwf	1
  1959  03A3                     l23603:	
  1960                           
  1961                           ;mTouch.c: 645: }
  1962                           ;mTouch.c: 647: return 0;
  1963  03A3  3400               	retlw	0
  1964  03A4                     l23607:	
  1965                           
  1966                           ;mTouch.c: 671: {
  1967                           ;mTouch.c: 673: if(delta > (int16_t)mTouch_pressThreshold[mTouch_currentScan])
  1968  03A4  2437  3181         	fcall	PL9	;call to abstracted procedure
  1969  03A6  00D9               	movwf	??_mTouch_ButtonStateMachine
  1970  03A7  3F01               	moviw [1]fsr0
  1971  03A8  00DA               	movwf	??_mTouch_ButtonStateMachine+1
  1972  03A9  085C               	movf	mTouch_ButtonStateMachine@delta+1,w
  1973  03AA  025A               	subwf	??_mTouch_ButtonStateMachine+1,w
  1974  03AB  1D03               	skipz
  1975  03AC  2BAF               	goto	u1735
  1976  03AD  085B               	movf	mTouch_ButtonStateMachine@delta,w
  1977  03AE  0259               	subwf	??_mTouch_ButtonStateMachine,w
  1978  03AF                     u1735:	
  1979                           
  1980                           ;mTouch.c: 732: else
  1981                           ;mTouch.c: 733: {
  1982                           ;mTouch.c: 735: (*sensor).debounce = 2;
  1983  03AF  085D               	movf	mTouch_ButtonStateMachine@sensor,w
  1984  03B0  1C03               	btfss	3,0
  1985  03B1  2B88               	goto	L6
  1986  03B2  3E04               	addlw	4
  1987  03B3  0086               	movwf	6
  1988  03B4  0187               	clrf	7
  1989  03B5  0801               	movf	1,w
  1990  03B6  39FC               	andlw	-4
  1991  03B7  3802               	iorlw	2
  1992  03B8  0081               	movwf	1
  1993                           
  1994                           ;mTouch.c: 743: return 1;
  1995  03B9  3401               	retlw	1
  1996  03BA                     l23629:	
  1997                           
  1998                           ;mTouch.c: 780: {
  1999                           ;mTouch.c: 785: if (--((*sensor).timer) <= 0)
  2000  03BA  240C  3181         	fcall	PL3	;call to abstracted procedure
  2001  03BC  1D03               	skipz
  2002  03BD  2BCA               	goto	l23641
  2003                           
  2004                           ;mTouch.c: 786: {
  2005                           ;mTouch.c: 790: (*sensor).state = MTOUCH_RELEASED;
  2006  03BE  085D               	movf	mTouch_ButtonStateMachine@sensor,w
  2007  03BF  2430  3181         	fcall	PL7	;call to abstracted procedure
  2008                           
  2009                           ;mTouch.c: 791: (*sensor).timeout = 1;
  2010  03C1  085D               	movf	mTouch_ButtonStateMachine@sensor,w
  2011  03C2  0086               	movwf	6
  2012  03C3  1581               	bsf	1,3
  2013                           
  2014                           ;mTouch.c: 793: mTouch_average[mTouch_currentScan] = mTouch_sensorData[mTouch_currentSca
      +                          n];
  2015                           
  2016                           ;mTouch.c: 796: (*sensor).debounce = 2;
  2017  03C4  23FA  3181         	fcall	PL2	;call to abstracted procedure
  2018  03C6  0801               	movf	1,w
  2019  03C7  39FC               	andlw	-4
  2020  03C8  3802               	iorlw	2
  2021  03C9  2BE4               	goto	L4
  2022  03CA                     l23641:	
  2023                           
  2024                           ;mTouch.c: 803: }
  2025                           ;mTouch.c: 810: if (delta < (int16_t)mTouch_releaseThreshold[mTouch_currentScan])
  2026  03CA  243E  3181         	fcall	PL10	;call to abstracted procedure
  2027  03CC  00D9               	movwf	??_mTouch_ButtonStateMachine
  2028  03CD  3F01               	moviw [1]fsr0
  2029  03CE  00DA               	movwf	??_mTouch_ButtonStateMachine+1
  2030  03CF  025C               	subwf	mTouch_ButtonStateMachine@delta+1,w
  2031  03D0  1D03               	skipz
  2032  03D1  2BD4               	goto	u1765
  2033  03D2  0859               	movf	??_mTouch_ButtonStateMachine,w
  2034  03D3  025B               	subwf	mTouch_ButtonStateMachine@delta,w
  2035  03D4                     u1765:	
  2036                           
  2037                           ;mTouch.c: 816: {
  2038                           ;mTouch.c: 819: if ((*sensor).debounce == 0)
  2039  03D4  085D               	movf	mTouch_ButtonStateMachine@sensor,w
  2040  03D5  1803               	skipnc
  2041  03D6  2BE6               	goto	L7
  2042  03D7  3E04               	addlw	4
  2043  03D8  2458  3181         	fcall	PL15	;call to abstracted procedure
  2044  03DA  1D03               	skipz
  2045  03DB  2B9A               	goto	l23617
  2046                           
  2047                           ;mTouch.c: 820: {
  2048                           ;mTouch.c: 821: (*sensor).debounce = 2;
  2049  03DC  085D               	movf	mTouch_ButtonStateMachine@sensor,w
  2050  03DD  3E04               	addlw	4
  2051                           
  2052                           ;mTouch.c: 827: (*sensor).state = MTOUCH_RELEASED;
  2053  03DE  2429  3181         	fcall	PL6	;call to abstracted procedure
  2054  03E0  0086               	movwf	6
  2055  03E1  0801               	movf	1,w
  2056  03E2  39FC               	andlw	-4
  2057  03E3  3801               	iorlw	1
  2058  03E4                     L4:	
  2059  03E4  0081               	movwf	1
  2060  03E5  2B98               	goto	l23615
  2061  03E6                     L7:	
  2062                           ;mTouch.c: 845: else
  2063                           ;mTouch.c: 846: {
  2064                           ;mTouch.c: 849: (*sensor).debounce = 2;
  2065                           
  2066  03E6  3E04               	addlw	4
  2067  03E7  0086               	movwf	6
  2068  03E8  0187               	clrf	7
  2069  03E9                     L5:	
  2070  03E9  0801               	movf	1,w
  2071  03EA  39FC               	andlw	-4
  2072  03EB  3802               	iorlw	2
  2073  03EC  2BA2               	goto	L3
  2074  03ED                     l23659:	
  2075  03ED  085D               	movf	mTouch_ButtonStateMachine@sensor,w
  2076  03EE  2458  3181         	fcall	PL15	;call to abstracted procedure
  2077                           
  2078                           ; Switch size 1, requested type "space"
  2079                           ; Number of cases is 3, Range of values is 0 to 2
  2080                           ; switch strategies available:
  2081                           ; Name         Instructions Cycles
  2082                           ; simple_byte           10     6 (average)
  2083                           ; direct_byte           12     6 (fixed)
  2084                           ; jumptable            260     6 (fixed)
  2085                           ; rangetable             7     4 (fixed)
  2086                           ; spacedrange           11     6 (fixed)
  2087                           ; locatedrange           3     3 (fixed)
  2088                           ;	Chosen strategy is simple_byte
  2089  03F0  1903               	skipnz
  2090  03F1  2B7C               	goto	l23599
  2091  03F2  3A01               	xorlw	1	; case 1
  2092  03F3  1903               	skipnz
  2093  03F4  2BA4               	goto	l23607
  2094  03F5  3A03               	xorlw	3	; case 2
  2095  03F6  1903               	skipnz
  2096  03F7  2BBA               	goto	l23629
  2097  03F8  2BA3               	goto	l23603
  2098  03F9  0008               	return
  2099  03FA                     __end_of_mTouch_ButtonStateMachine:	
  2100  03FA                     PL2:	
  2101  03FA  354F               	lslf	_mTouch_currentScan,w
  2102  03FB  3E2A               	addlw	_mTouch_sensorData& (0+255)
  2103  03FC  0086               	movwf	6
  2104  03FD  3F40               	moviw [0]fsr1
  2105  03FE  00D9               	movwf	??_mTouch_ButtonStateMachine
  2106  03FF  3F41               	moviw [1]fsr1
  2107  0400  00DA               	movwf	??_mTouch_ButtonStateMachine+1
  2108  0401  354F               	lslf	_mTouch_currentScan,w
  2109  0402  3E20               	addlw	_mTouch_average& (0+255)
  2110  0403  0086               	movwf	6
  2111  0404  0859               	movf	??_mTouch_ButtonStateMachine,w
  2112  0405  3FC0               	movwi [0]fsr1
  2113  0406  085A               	movf	??_mTouch_ButtonStateMachine+1,w
  2114  0407  3FC1               	movwi [1]fsr1
  2115  0408  085D               	movf	mTouch_ButtonStateMachine@sensor,w
  2116  0409  3E04               	addlw	4
  2117  040A  0086               	movwf	6
  2118  040B  0008               	return
  2119  040C                     PL3:	
  2120  040C  085D               	movf	mTouch_ButtonStateMachine@sensor,w
  2121  040D  3E02               	addlw	2
  2122  040E  0086               	movwf	6
  2123  040F  3001               	movlw	1
  2124  0410  0187               	clrf	7
  2125  0411  0281               	subwf	1,f
  2126  0412  3141               	addfsr 1,1
  2127  0413  3000               	movlw	0
  2128  0414  3B81               	subwfb	1,f
  2129  0415  317F               	addfsr 1,-1
  2130  0416  0016               	moviw fsr1++
  2131  0417  0401               	iorwf	1,w
  2132  0418  0008               	return
  2133  0419                     PL4:	
  2134  0419  3903               	andlw	3
  2135  041A  0020               	movlb	0	; select bank0
  2136  041B  00E2               	movwf	??_main
  2137  041C  3002               	movlw	2
  2138  041D  0262               	subwf	??_main,w
  2139  041E  0008               	return
  2140  041F                     PL5:	
  2141  041F  36DA               	lsrf	??_mTouch_UpdateBaseline+1,f
  2142  0420  0CD9               	rrf	??_mTouch_UpdateBaseline,f
  2143  0421  36DA               	lsrf	??_mTouch_UpdateBaseline+1,f
  2144  0422  0CD9               	rrf	??_mTouch_UpdateBaseline,f
  2145  0423  36DA               	lsrf	??_mTouch_UpdateBaseline+1,f
  2146  0424  0CD9               	rrf	??_mTouch_UpdateBaseline,f
  2147  0425  354F               	lslf	_mTouch_currentScan,w
  2148  0426  3E20               	addlw	_mTouch_average& (0+255)
  2149  0427  0086               	movwf	6
  2150  0428  0008               	return
  2151  0429                     PL6:	
  2152  0429  0086               	movwf	6
  2153  042A  0801               	movf	1,w
  2154  042B  39FC               	andlw	-4
  2155  042C  3802               	iorlw	2
  2156  042D  0081               	movwf	1
  2157  042E  085D               	movf	mTouch_ButtonStateMachine@sensor,w
  2158  042F  0008               	return
  2159  0430                     PL7:	
  2160  0430  0086               	movwf	6
  2161  0431  0187               	clrf	7
  2162  0432  0801               	movf	1,w
  2163  0433  39FC               	andlw	-4
  2164  0434  3801               	iorlw	1
  2165  0435  0081               	movwf	1
  2166  0436  0008               	return
  2167  0437                     PL9:	
  2168  0437  354F               	lslf	_mTouch_currentScan,w
  2169  0438  3E6A               	addlw	low (_mTouch_pressThreshold| (0+32768))
  2170  0439  0084               	movwf	4
  2171  043A  3080               	movlw	high (_mTouch_pressThreshold| (0+32768))
  2172  043B  0085               	movwf	5
  2173  043C  3F00               	moviw [0]fsr0
  2174  043D  0008               	return
  2175  043E                     PL10:	
  2176  043E  354F               	lslf	_mTouch_currentScan,w
  2177  043F  3E74               	addlw	low (_mTouch_releaseThreshold| (0+32768))
  2178  0440  0084               	movwf	4
  2179  0441  3080               	movlw	high (_mTouch_releaseThreshold| (0+32768))
  2180  0442  0085               	movwf	5
  2181  0443  3F00               	moviw [0]fsr0
  2182  0444  0008               	return
  2183  0445                     PL11:	
  2184  0445  3E20               	addlw	_mTouch_average& (0+255)
  2185  0446  0086               	movwf	6
  2186  0447  3F40               	moviw [0]fsr1
  2187  0448  00D9               	movwf	??_mTouch_UpdateBaseline
  2188  0449  3F41               	moviw [1]fsr1
  2189  044A  00DA               	movwf	??_mTouch_UpdateBaseline+1
  2190  044B  0008               	return
  2191  044C                     PL13:	
  2192  044C  3EA2               	addlw	(_mTouch_stateVars+2)& (0+255)
  2193  044D  0086               	movwf	6
  2194  044E  30FF               	movlw	255
  2195  044F  0187               	clrf	7
  2196  0450  0481               	iorwf	1,f
  2197  0451  0008               	return
  2198  0452                     PL14:	
  2199  0452  3E04               	addlw	4
  2200  0453  0086               	movwf	6
  2201  0454  0187               	clrf	7
  2202  0455  0801               	movf	1,w
  2203  0456  3903               	andlw	3
  2204  0457  0008               	return
  2205  0458                     PL15:	
  2206  0458  0086               	movwf	6
  2207  0459  0187               	clrf	7
  2208  045A  0801               	movf	1,w
  2209  045B  3903               	andlw	3
  2210  045C  0008               	return
  2211                           
  2212                           	psect	bitbssCOMMON
  2213  03D0                     __pbitbssCOMMON:	
  2214  03D0                     _flag_heat:	
  2215  03D0                     	ds	1
  2216  03D1                     _flag_led_enable:	
  2217  03D1                     	ds	1
  2218  03D2                     _flag_light:	
  2219  03D2                     	ds	1
  2220  03D3                     _flag_massage:	
  2221  03D3                     	ds	1
  2222  03D4                     _flag_pr_close:	
  2223  03D4                     	ds	1
  2224  03D5                     _flag_pr_open:	
  2225  03D5                     	ds	1
  2226  03D6                     _led_enable:	
  2227  03D6                     	ds	1
  2228                           
  2229                           	psect	bssCOMMON
  2230  007B                     __pbssCOMMON:	
  2231  007B                     _Key_LED:	
  2232  007B                     	ds	1
  2233  007C                     _LedPwmCount:	
  2234  007C                     	ds	1
  2235  007D                     _mTouch_currentAcqData:	
  2236  007D                     	ds	1
  2237                           
  2238                           	psect	bssBANK0
  2239  0020                     __pbssBANK0:	
  2240  0020                     _mTouch_average:	
  2241  0020                     	ds	10
  2242  002A                     _mTouch_sensorData:	
  2243  002A                     	ds	10
  2244  0034                     _heatIntensity:	
  2245  0034                     	ds	4
  2246  0038                     _heatPwmCount:	
  2247  0038                     	ds	4
  2248  003C                     _heatTimer:	
  2249  003C                     	ds	2
  2250  003E                     _ledTimer:	
  2251  003E                     	ds	2
  2252  0040                     _lightTimer:	
  2253  0040                     	ds	2
  2254  0042                     _mTouch_lastResult:	
  2255  0042                     	ds	2
  2256  0044                     _massageTimer:	
  2257  0044                     	ds	2
  2258  0046                     _prCloseDelay:	
  2259  0046                     	ds	2
  2260  0048                     _prOpenDelay:	
  2261  0048                     	ds	2
  2262  004A                     _secondTimer:	
  2263  004A                     	ds	2
  2264  004C                     _Key_state:	
  2265  004C                     	ds	1
  2266  004D                     _heatLedIntensity:	
  2267  004D                     	ds	1
  2268  004E                     _heatState:	
  2269  004E                     	ds	1
  2270  004F                     _mTouch_currentScan:	
  2271  004F                     	ds	1
  2272  0050                     _mTouch_delayCount:	
  2273  0050                     	ds	1
  2274  0051                     _mTouch_state:	
  2275  0051                     	ds	1
  2276  0052                     _massageIntensity:	
  2277  0052                     	ds	1
  2278  0053                     _massageLedIntensity:	
  2279  0053                     	ds	1
  2280  0054                     _massageState:	
  2281  0054                     	ds	1
  2282  0055                     _outputPwmCount:	
  2283  0055                     	ds	1
  2284                           
  2285                           	psect	dataBANK0
  2286  0063                     __pdataBANK0:	
  2287  0063                     _mTouch_jitter:	
  2288  0063                     	ds	1
  2289                           
  2290                           	psect	bssBANK1
  2291  00A0                     __pbssBANK1:	
  2292  00A0                     _mTouch_stateVars:	
  2293  00A0                     	ds	26
  2294  00BA                     _mTouch_acqData:	
  2295  00BA                     	ds	20
  2296                           
  2297                           	psect	clrtext
  2298  0769                     clear_ram:	
  2299                           ;	Called with FSR0 containing the base address, and
  2300                           ;	WREG with the size to clear
  2301                           
  2302  0769  0064               	clrwdt	;clear the watchdog before getting into this loop
  2303  076A                     clrloop:	
  2304  076A  0180               	clrf	0	;clear RAM location pointed to by FSR
  2305  076B  3101               	addfsr 0,1
  2306  076C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2307  076D  2F6A               	goto	clrloop	;have we reached the end yet?
  2308  076E  3400               	retlw	0	;all done for this memory range, return
  2309                           
  2310                           	psect	cstackCOMMON
  2311  0070                     __pcstackCOMMON:	
  2312  0070                     ?_mTouch_ChangeMode:	
  2313  0070                     ?_mTouch_UpdateBaseline:	
  2314                           ; 0 bytes @ 0x0
  2315                           
  2316  0070                     ?_mTouch_ScanA_0:	
  2317                           ; 0 bytes @ 0x0
  2318                           
  2319  0070                     ??_mTouch_ScanA_0:	
  2320                           ; 0 bytes @ 0x0
  2321                           
  2322  0070                     ?_mTouch_ScanA_1:	
  2323                           ; 0 bytes @ 0x0
  2324                           
  2325  0070                     ??_mTouch_ScanA_1:	
  2326                           ; 0 bytes @ 0x0
  2327                           
  2328  0070                     ?_mTouch_ScanA_2:	
  2329                           ; 0 bytes @ 0x0
  2330                           
  2331  0070                     ??_mTouch_ScanA_2:	
  2332                           ; 0 bytes @ 0x0
  2333                           
  2334  0070                     ?_mTouch_ScanA_3:	
  2335                           ; 0 bytes @ 0x0
  2336                           
  2337  0070                     ??_mTouch_ScanA_3:	
  2338                           ; 0 bytes @ 0x0
  2339                           
  2340  0070                     ?_mTouch_ScanA_4:	
  2341                           ; 0 bytes @ 0x0
  2342                           
  2343  0070                     ??_mTouch_ScanA_4:	
  2344                           ; 0 bytes @ 0x0
  2345                           
  2346  0070                     ?_mTouch_ScanB_0:	
  2347                           ; 0 bytes @ 0x0
  2348                           
  2349  0070                     ??_mTouch_ScanB_0:	
  2350                           ; 0 bytes @ 0x0
  2351                           
  2352  0070                     ?_mTouch_ScanB_1:	
  2353                           ; 0 bytes @ 0x0
  2354                           
  2355  0070                     ??_mTouch_ScanB_1:	
  2356                           ; 0 bytes @ 0x0
  2357                           
  2358  0070                     ?_mTouch_ScanB_2:	
  2359                           ; 0 bytes @ 0x0
  2360                           
  2361  0070                     ??_mTouch_ScanB_2:	
  2362                           ; 0 bytes @ 0x0
  2363                           
  2364  0070                     ?_mTouch_ScanB_3:	
  2365                           ; 0 bytes @ 0x0
  2366                           
  2367  0070                     ??_mTouch_ScanB_3:	
  2368                           ; 0 bytes @ 0x0
  2369                           
  2370  0070                     ?_mTouch_ScanB_4:	
  2371                           ; 0 bytes @ 0x0
  2372                           
  2373  0070                     ??_mTouch_ScanB_4:	
  2374                           ; 0 bytes @ 0x0
  2375                           
  2376  0070                     ?_mTouch_WaitForGoDone:	
  2377                           ; 0 bytes @ 0x0
  2378                           
  2379  0070                     ??_mTouch_WaitForGoDone:	
  2380                           ; 0 bytes @ 0x0
  2381                           
  2382  0070                     ?_mTouch_StoreScanA:	
  2383                           ; 0 bytes @ 0x0
  2384                           
  2385  0070                     ??_mTouch_StoreScanA:	
  2386                           ; 0 bytes @ 0x0
  2387                           
  2388  0070                     ?_mTouch_StoreScanB:	
  2389                           ; 0 bytes @ 0x0
  2390                           
  2391  0070                     ??_mTouch_StoreScanB:	
  2392                           ; 0 bytes @ 0x0
  2393                           
  2394  0070                     ?_mTouch_DecimationFilter:	
  2395                           ; 0 bytes @ 0x0
  2396                           
  2397  0070                     ??_mTouch_DecimationFilter:	
  2398                           ; 0 bytes @ 0x0
  2399                           
  2400  0070                     ?_Example_System_Init:	
  2401                           ; 0 bytes @ 0x0
  2402                           
  2403  0070                     ?_KeyExecute:	
  2404                           ; 0 bytes @ 0x0
  2405                           
  2406  0070                     ?_IchOutputs:	
  2407                           ; 0 bytes @ 0x0
  2408                           
  2409  0070                     ??_IchOutputs:	
  2410                           ; 0 bytes @ 0x0
  2411                           
  2412  0070                     ?_IchLeds:	
  2413                           ; 0 bytes @ 0x0
  2414                           
  2415  0070                     ??_IchLeds:	
  2416                           ; 0 bytes @ 0x0
  2417                           
  2418  0070                     ?_mTouch_Init:	
  2419                           ; 0 bytes @ 0x0
  2420                           
  2421  0070                     ?_mTouch_Decode:	
  2422                           ; 0 bytes @ 0x0
  2423                           
  2424  0070                     ?_mTouch_Scan:	
  2425                           ; 0 bytes @ 0x0
  2426                           
  2427  0070                     ?_main:	
  2428                           ; 0 bytes @ 0x0
  2429                           
  2430  0070                     ?_ISR:	
  2431                           ; 0 bytes @ 0x0
  2432                           
  2433  0070                     ?i1_mTouch_ChangeMode:	
  2434                           ; 0 bytes @ 0x0
  2435                           
  2436  0070                     ??i1_mTouch_ChangeMode:	
  2437                           ; 0 bytes @ 0x0
  2438                           
  2439  0070                     ?_mTouch_ButtonStateMachine:	
  2440                           ; 0 bytes @ 0x0
  2441                           
  2442                           
  2443                           ; 1 bytes @ 0x0
  2444  0070                     	ds	5
  2445  0075                     mTouch_DecimationFilter@result:	
  2446                           
  2447                           ; 2 bytes @ 0x5
  2448  0075                     	ds	2
  2449  0077                     ??_mTouch_Scan:	
  2450                           
  2451                           ; 0 bytes @ 0x7
  2452  0077                     	ds	2
  2453  0079                     ??_ISR:	
  2454                           
  2455                           ; 0 bytes @ 0x9
  2456  0079                     	ds	1
  2457                           
  2458                           	psect	cstackBANK0
  2459  0056                     __pcstackBANK0:	
  2460  0056                     ??_mTouch_ChangeMode:	
  2461  0056                     ??_Example_System_Init:	
  2462                           ; 0 bytes @ 0x0
  2463                           
  2464  0056                     ??_KeyExecute:	
  2465                           ; 0 bytes @ 0x0
  2466                           
  2467  0056                     ?___bmul:	
  2468                           ; 0 bytes @ 0x0
  2469                           
  2470  0056                     ___bmul@multiplicand:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473                           
  2474                           ; 1 bytes @ 0x0
  2475  0056                     	ds	1
  2476  0057                     ??___bmul:	
  2477  0057                     ___bmul@product:	
  2478                           ; 0 bytes @ 0x1
  2479                           
  2480                           
  2481                           ; 1 bytes @ 0x1
  2482  0057                     	ds	1
  2483  0058                     ___bmul@multiplier:	
  2484                           
  2485                           ; 1 bytes @ 0x2
  2486  0058                     	ds	1
  2487  0059                     ??_mTouch_ButtonStateMachine:	
  2488  0059                     ??_mTouch_UpdateBaseline:	
  2489                           ; 0 bytes @ 0x3
  2490                           
  2491  0059                     ??_mTouch_Init:	
  2492                           ; 0 bytes @ 0x3
  2493                           
  2494  0059                     mTouch_Init@acqData:	
  2495                           ; 0 bytes @ 0x3
  2496                           
  2497                           
  2498                           ; 1 bytes @ 0x3
  2499  0059                     	ds	1
  2500  005A                     mTouch_Init@sensorIndex:	
  2501                           
  2502                           ; 1 bytes @ 0x4
  2503  005A                     	ds	1
  2504  005B                     mTouch_ButtonStateMachine@delta:	
  2505                           
  2506                           ; 2 bytes @ 0x5
  2507  005B                     	ds	2
  2508  005D                     mTouch_ButtonStateMachine@sensor:	
  2509                           
  2510                           ; 1 bytes @ 0x7
  2511  005D                     	ds	3
  2512  0060                     mTouch_UpdateBaseline@reading:	
  2513                           
  2514                           ; 2 bytes @ 0xA
  2515  0060                     	ds	2
  2516  0062                     ??_mTouch_Decode:	
  2517  0062                     ??_main:	
  2518                           ; 0 bytes @ 0xC
  2519                           
  2520                           
  2521                           ; 0 bytes @ 0xC
  2522  0062                     	ds	1
  2523                           
  2524                           	psect	intentry
  2525  0004                     __pintentry:	
  2526 ;; =============== function _KeyExecute ends ============
  2527                           
  2528                           
  2529 ;; *************** function _ISR *****************
  2530 ;; Defined at:
  2531 ;;		line 219 in file "main.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;		None               void
  2538 ;; Registers used:
  2539 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 1F/0
  2543 ;;		Unchanged: FFE00/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2545 ;;      Params:         0       0       0       0
  2546 ;;      Locals:         0       0       0       0
  2547 ;;      Temps:          1       0       0       0
  2548 ;;      Totals:         1       0       0       0
  2549 ;;Total ram usage:        1 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    2
  2552 ;; This function calls:
  2553 ;;		_IchLeds
  2554 ;;		_IchOutputs
  2555 ;;		_mTouch_Scan
  2556 ;; This function is called by:
  2557 ;;		Interrupt level 1
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560  0004                     _ISR:	
  2561                           
  2562                           ; Regs used in _ISR: [wreg+fsr1l-status,0+pclath+cstack]
  2563  0004  3180               	pagesel	$
  2564  0005  0020               	movlb	0	; select bank0
  2565  0006  087F               	movf	127,w
  2566  0007  00F9               	movwf	??_ISR
  2567                           
  2568                           ;main.c: 220: if (TMR2IF)
  2569  0008  1891               	btfsc	17,1
  2570                           
  2571                           ;main.c: 221: {
  2572                           ;main.c: 223: TMR2IF = 0;
  2573  0009  1091               	bcf	17,1
  2574                           
  2575                           ;main.c: 224: }
  2576                           ;main.c: 226: if (T0IF)
  2577  000A  1D0B               	btfss	11,2
  2578  000B  2862               	goto	i1l20340
  2579                           
  2580                           ;main.c: 227: {
  2581                           ;main.c: 228: IchLeds();
  2582  000C  3185  25CF  3180   	fcall	_IchLeds
  2583                           
  2584                           ;main.c: 229: IchOutputs();
  2585  000F  3185  255B  3180   	fcall	_IchOutputs
  2586                           
  2587                           ;main.c: 230: if(prOpenDelay){
  2588  0012  0020               	movlb	0	; select bank0
  2589  0013  0849               	movf	_prOpenDelay+1,w
  2590  0014  0448               	iorwf	_prOpenDelay,w
  2591  0015  1903               	skipnz
  2592  0016  281B               	goto	i1l20327
  2593                           
  2594                           ;main.c: 231: prOpenDelay--;
  2595  0017  3001               	movlw	1
  2596  0018  02C8               	subwf	_prOpenDelay,f
  2597  0019  3000               	movlw	0
  2598  001A  3BC9               	subwfb	_prOpenDelay+1,f
  2599  001B                     i1l20327:	
  2600                           
  2601                           ;main.c: 232: }
  2602                           ;main.c: 233: if(prCloseDelay){
  2603  001B  0847               	movf	_prCloseDelay+1,w
  2604  001C  0446               	iorwf	_prCloseDelay,w
  2605  001D  1903               	skipnz
  2606  001E  2823               	goto	i1l20328
  2607                           
  2608                           ;main.c: 234: prCloseDelay--;
  2609  001F  3001               	movlw	1
  2610  0020  02C6               	subwf	_prCloseDelay,f
  2611  0021  3000               	movlw	0
  2612  0022  3BC7               	subwfb	_prCloseDelay+1,f
  2613  0023                     i1l20328:	
  2614                           
  2615                           ;main.c: 235: }
  2616                           ;main.c: 237: if(secondTimer){
  2617  0023  084B               	movf	_secondTimer+1,w
  2618  0024  044A               	iorwf	_secondTimer,w
  2619  0025  1903               	skipnz
  2620  0026  282C               	goto	i1l23487
  2621                           
  2622                           ;main.c: 238: secondTimer--;
  2623  0027  3001               	movlw	1
  2624  0028  02CA               	subwf	_secondTimer,f
  2625  0029  3000               	movlw	0
  2626  002A  3BCB               	subwfb	_secondTimer+1,f
  2627                           
  2628                           ;main.c: 239: }else{
  2629  002B  285C               	goto	i1l20330
  2630  002C                     i1l23487:	
  2631                           
  2632                           ;main.c: 242: secondTimer = 10050;
  2633  002C  3042               	movlw	66
  2634  002D  00CA               	movwf	_secondTimer
  2635  002E  3027               	movlw	39
  2636  002F  00CB               	movwf	_secondTimer+1
  2637                           
  2638                           ;main.c: 244: if(ledTimer){
  2639  0030  083F               	movf	_ledTimer+1,w
  2640  0031  043E               	iorwf	_ledTimer,w
  2641  0032  1903               	skipnz
  2642  0033  283C               	goto	i1l23495
  2643                           
  2644                           ;main.c: 245: ledTimer--;
  2645  0034  3001               	movlw	1
  2646  0035  02BE               	subwf	_ledTimer,f
  2647  0036  3000               	movlw	0
  2648  0037  3BBF               	subwfb	_ledTimer+1,f
  2649                           
  2650                           ;main.c: 246: if(!ledTimer){
  2651  0038  083F               	movf	_ledTimer+1,w
  2652  0039  043E               	iorwf	_ledTimer,w
  2653  003A  1903               	btfsc	3,2
  2654                           
  2655                           ;main.c: 247: led_enable = 0;
  2656  003B  137A               	bcf	_led_enable/(0+8),_led_enable& (0+7)
  2657  003C                     i1l23495:	
  2658                           
  2659                           ;main.c: 248: }
  2660                           ;main.c: 249: }
  2661                           ;main.c: 251: if(heatTimer){
  2662  003C  083D               	movf	_heatTimer+1,w
  2663  003D  043C               	iorwf	_heatTimer,w
  2664  003E  1903               	skipnz
  2665  003F  2845               	goto	i1l23499
  2666                           
  2667                           ;main.c: 252: heatTimer--;
  2668  0040  3001               	movlw	1
  2669  0041  02BC               	subwf	_heatTimer,f
  2670  0042  3000               	movlw	0
  2671  0043  3BBD               	subwfb	_heatTimer+1,f
  2672                           
  2673                           ;main.c: 253: }else{
  2674  0044  2847               	goto	i1l23501
  2675  0045                     i1l23499:	
  2676                           
  2677                           ;main.c: 254: heatState = Key_LED.oneBit.Heat = 0;
  2678  0045  117B               	bcf	_Key_LED,2
  2679  0046  01CE               	clrf	_heatState
  2680  0047                     i1l23501:	
  2681                           
  2682                           ;main.c: 255: }
  2683                           ;main.c: 257: if(massageTimer){
  2684  0047  0845               	movf	_massageTimer+1,w
  2685  0048  0444               	iorwf	_massageTimer,w
  2686  0049  1903               	skipnz
  2687  004A  2850               	goto	i1l23505
  2688                           
  2689                           ;main.c: 258: massageTimer--;
  2690  004B  3001               	movlw	1
  2691  004C  02C4               	subwf	_massageTimer,f
  2692  004D  3000               	movlw	0
  2693  004E  3BC5               	subwfb	_massageTimer+1,f
  2694                           
  2695                           ;main.c: 259: }else{
  2696  004F  2852               	goto	i1l23507
  2697  0050                     i1l23505:	
  2698                           
  2699                           ;main.c: 260: massageState = Key_LED.oneBit.Massage = 0;
  2700  0050  11FB               	bcf	_Key_LED,3
  2701  0051  01D4               	clrf	_massageState
  2702  0052                     i1l23507:	
  2703                           
  2704                           ;main.c: 261: }
  2705                           ;main.c: 266: if(lightTimer){
  2706  0052  0841               	movf	_lightTimer+1,w
  2707  0053  0440               	iorwf	_lightTimer,w
  2708  0054  1903               	skipnz
  2709  0055  285B               	goto	i1l20337
  2710                           
  2711                           ;main.c: 267: lightTimer--;
  2712  0056  3001               	movlw	1
  2713  0057  02C0               	subwf	_lightTimer,f
  2714  0058  3000               	movlw	0
  2715  0059  3BC1               	subwfb	_lightTimer+1,f
  2716                           
  2717                           ;main.c: 268: }else{
  2718  005A  285C               	goto	i1l20330
  2719  005B                     i1l20337:	
  2720                           
  2721                           ;main.c: 269: Key_LED.oneBit.Light = 0;
  2722  005B  127B               	bcf	_Key_LED,4
  2723  005C                     i1l20330:	
  2724                           
  2725                           ;main.c: 270: }
  2726                           ;main.c: 271: }
  2727                           ;main.c: 306: if ((TMR0IF && TMR0IE))
  2728  005C  190B               	btfsc	11,2
  2729  005D  1E8B               	btfss	11,5
  2730  005E  2861               	goto	i1l23515
  2731                           
  2732                           ;main.c: 307: {
  2733                           ;main.c: 308: mTouch_Scan();
  2734  005F  3184  245D         	fcall	_mTouch_Scan
  2735  0061                     i1l23515:	
  2736                           
  2737                           ;main.c: 310: }
  2738                           ;main.c: 317: T0IF = 0;
  2739  0061  110B               	bcf	11,2
  2740  0062                     i1l20340:	
  2741  0062  0879               	movf	??_ISR,w
  2742  0063  0020               	movlb	0	; select bank0
  2743  0064  00FF               	movwf	127
  2744  0065  0009               	retfie
  2745  0066                     __end_of_ISR:	
  2746                           
  2747                           	psect	text600
  2748  045D                     __ptext600:	
  2749 ;; =============== function _ISR ends ============
  2750                           
  2751                           
  2752 ;; *************** function _mTouch_Scan *****************
  2753 ;; Defined at:
  2754 ;;		line 188 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;		None
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;		None               void
  2761 ;; Registers used:
  2762 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 1F/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: FFE00/0
  2767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2768 ;;      Params:         0       0       0       0
  2769 ;;      Locals:         0       0       0       0
  2770 ;;      Temps:          2       0       0       0
  2771 ;;      Totals:         2       0       0       0
  2772 ;;Total ram usage:        2 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    1
  2775 ;; This function calls:
  2776 ;;		_mTouch_ScanA_4
  2777 ;;		_mTouch_ScanA_3
  2778 ;;		_mTouch_ScanA_2
  2779 ;;		_mTouch_ScanA_1
  2780 ;;		_mTouch_ScanA_0
  2781 ;;		_mTouch_WaitForGoDone
  2782 ;;		_mTouch_StoreScanA
  2783 ;;		_mTouch_ScanB_4
  2784 ;;		_mTouch_ScanB_3
  2785 ;;		_mTouch_ScanB_2
  2786 ;;		_mTouch_ScanB_1
  2787 ;;		_mTouch_ScanB_0
  2788 ;;		_mTouch_StoreScanB
  2789 ;;		_mTouch_DecimationFilter
  2790 ;;		i1_mTouch_ChangeMode
  2791 ;; This function is called by:
  2792 ;;		_ISR
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795  045D                     _mTouch_Scan:	
  2796  045D                     mTouch_Scan:	
  2797                           ; Regs used in _mTouch_Scan: [wreg+fsr1l-status,0+pclath+cstack]
  2798                           
  2799                           
  2800                           ;cas16f1933.h: 220: mTouch_currentAcqData = &mTouch_acqData[mTouch_currentScan];
  2801                           
  2802                           ;#
  2803  045D  254E               	fcall	PL8	;call to abstracted procedure
  2804                           
  2805                           ;cas16f1933.h: 232: mTouch_ScanA[mTouch_currentScan]();
  2806  045E  084F               	movf	_mTouch_currentScan,w
  2807  045F  3E7E               	addlw	low (_mTouch_ScanA| (0+32768))
  2808  0460  3180               	movlp	high __stringtab
  2809  0461  000A               	callw
  2810  0462  3181  2101  3184   	fcall	i1fptable
  2811                           
  2812                           ;cas16f1933.h: 238: mTouch_WaitForGoDone();
  2813  0465  24AD  3184         	fcall	_mTouch_WaitForGoDone
  2814                           
  2815                           ;cas16f1933.h: 239: mTouch_StoreScanA();
  2816  0467  24B7               	fcall	_mTouch_StoreScanA
  2817                           
  2818                           ;cas16f1933.h: 245: mTouch_ScanB[mTouch_currentScan]();
  2819  0468  084F               	movf	_mTouch_currentScan,w
  2820  0469  3E83               	addlw	low (_mTouch_ScanB| (0+32768))
  2821  046A  3180               	movlp	high __stringtab
  2822  046B  000A               	callw
  2823  046C  3181  2101  3184   	fcall	i1fptable
  2824                           
  2825                           ;cas16f1933.h: 251: mTouch_WaitForGoDone();
  2826  046F  24AD  3184         	fcall	_mTouch_WaitForGoDone
  2827                           
  2828                           ;cas16f1933.h: 252: mTouch_StoreScanB();
  2829  0471  24C3  3184         	fcall	_mTouch_StoreScanB
  2830                           
  2831                           ;cas16f1933.h: 261: mTouch_DecimationFilter();
  2832  0473  24D1  3184         	fcall	_mTouch_DecimationFilter
  2833                           
  2834                           ;cas16f1933.h: 278: mTouch_currentScan++;
  2835  0475  0ACF               	incf	_mTouch_currentScan,f
  2836                           
  2837                           ;cas16f1933.h: 282: if (mTouch_currentScan == 5)
  2838  0476  084F               	movf	_mTouch_currentScan,w
  2839  0477  3A05               	xorlw	5
  2840  0478  1D03               	skipz
  2841  0479  2CA1               	goto	i1l23373
  2842                           
  2843                           ;cas16f1933.h: 283: {
  2844                           ;cas16f1933.h: 289: mTouch_currentScan = 0;
  2845  047A  01CF               	clrf	_mTouch_currentScan
  2846                           
  2847                           ;cas16f1933.h: 311: if (--mTouch_stateVars.sampleCounter == 0)
  2848  047B  0021               	movlb	1	; select bank1
  2849  047C  0BA0               	decfsz	_mTouch_stateVars^(0+128),f
  2850  047D  2CA1               	goto	i1l23373
  2851                           
  2852                           ;cas16f1933.h: 312: {
  2853                           ;cas16f1933.h: 313: mTouch_stateVars.sampleCounter = 30;
  2854  047E  301E               	movlw	30
  2855  047F  00A0               	movwf	_mTouch_stateVars^(0+128)
  2856  0480                     i1l23361:	
  2857                           
  2858                           ;cas16f1933.h: 318: {
  2859                           ;cas16f1933.h: 319: mTouch_currentAcqData = &mTouch_acqData[mTouch_currentScan];
  2860  0480  254E  3184         	fcall	PL8	;call to abstracted procedure
  2861                           
  2862                           ;cas16f1933.h: 320: mTouch_sensorData[mTouch_currentScan] = (uint16_t)(((uint24_t)((*mTo
      +                          uch_currentAcqData).accumulator.v) & 0xFFFFF) >> 0);
  2863  0482  0086               	movwf	6
  2864  0483  0187               	clrf	7
  2865  0484  3F40               	moviw [0]fsr1
  2866  0485  00F7               	movwf	??_mTouch_Scan
  2867  0486  3F41               	moviw [1]fsr1
  2868  0487  00F8               	movwf	??_mTouch_Scan+1
  2869  0488  354F               	lslf	_mTouch_currentScan,w
  2870  0489  3E2A               	addlw	_mTouch_sensorData& (0+255)
  2871  048A  0086               	movwf	6
  2872  048B  0877               	movf	??_mTouch_Scan,w
  2873  048C  3FC0               	movwi [0]fsr1
  2874  048D  0878               	movf	??_mTouch_Scan+1,w
  2875  048E  3FC1               	movwi [1]fsr1
  2876                           
  2877                           ;cas16f1933.h: 321: (*mTouch_currentAcqData).accumulator.v &= 0xF00000;
  2878  048F  087D               	movf	_mTouch_currentAcqData,w
  2879  0490  0086               	movwf	6
  2880  0491  3000               	movlw	0
  2881  0492  0581               	andwf	1,f
  2882  0493  3141               	addfsr 1,1
  2883  0494  0581               	andwf	1,f
  2884  0495  3141               	addfsr 1,1
  2885  0496  30F0               	movlw	240
  2886  0497  0581               	andwf	1,f
  2887  0498  317E               	addfsr 1,-2
  2888                           
  2889                           ;cas16f1933.h: 323: mTouch_currentScan++;
  2890  0499  0ACF               	incf	_mTouch_currentScan,f
  2891                           
  2892                           ;cas16f1933.h: 324: } while (mTouch_currentScan != 5);
  2893  049A  084F               	movf	_mTouch_currentScan,w
  2894  049B  3A05               	xorlw	5
  2895  049C  1D03               	skipz
  2896  049D  2C80               	goto	i1l23361
  2897                           
  2898                           ;cas16f1933.h: 333: mTouch_ChangeMode();
  2899  049E  2548               	fcall	i1_mTouch_ChangeMode
  2900                           
  2901                           ;cas16f1933.h: 335: mTouch_state.dataReady = 1;
  2902  049F  0020               	movlb	0	; select bank0
  2903  04A0  1451               	bsf	_mTouch_state,0
  2904  04A1                     i1l23373:	
  2905  04A1  0020               	banksel	_mTouch_jitter	;#
  2906  04A2  1003               	bcf	3,0	;#
  2907  04A3  0C63               	rrf	_mTouch_jitter,w	;#
  2908  04A4  1803               	btfsc	3,0	;#
  2909  04A5  3AB4               	xorlw	180	;#
  2910  04A6  00E3               	movwf	_mTouch_jitter	;#
  2911  04A7  393F               	andlw	63	;#
  2912  04A8  0020               	banksel	21	;#
  2913  04A9  0195               	clrf	21	;#
  2914  04AA  0795               	addwf	21,f	;#
  2915                           
  2916                           ;cas16f1933.h: 362: TMR0IF = 0;
  2917  04AB  110B               	bcf	11,2
  2918  04AC  0008               	return
  2919  04AD                     __end_of_mTouch_Scan:	
  2920  04AD                     __ptext615:	
  2921 ;; =============== function _mTouch_StoreScanA ends ============
  2922                           
  2923                           
  2924 ;; *************** function _mTouch_WaitForGoDone *****************
  2925 ;; Defined at:
  2926 ;;		line 434 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;		None
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;		None               void
  2933 ;; Registers used:
  2934 ;;		wreg
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 1E/0
  2938 ;;		Unchanged: FFFE0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2940 ;;      Params:         0       0       0       0
  2941 ;;      Locals:         0       0       0       0
  2942 ;;      Temps:          0       0       0       0
  2943 ;;      Totals:         0       0       0       0
  2944 ;;Total ram usage:        0 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_mTouch_Scan
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952  04AD                     _mTouch_WaitForGoDone:	
  2953                           
  2954                           ;cas16f1933.h: 435: mTouch_delayCount = 0xFF;
  2955                           
  2956                           ; Regs used in _mTouch_WaitForGoDone: [wreg]
  2957  04AD  30FF               	movlw	255
  2958  04AE  0020               	movlb	0	; select bank0
  2959  04AF  00D0               	movwf	_mTouch_delayCount
  2960  04B0                     i1l11110:	
  2961                           ;cas16f1933.h: 436: while (GO_nDONE && --mTouch_delayCount);
  2962                           
  2963  04B0  0021               	movlb	1	; select bank1
  2964  04B1  1C9D               	btfss	29,1
  2965  04B2  0008               	return
  2966  04B3  0020               	movlb	0	; select bank0
  2967  04B4  0BD0               	decfsz	_mTouch_delayCount,f
  2968  04B5  2CB0               	goto	i1l11110
  2969  04B6  0008               	return
  2970  04B7                     __end_of_mTouch_WaitForGoDone:	
  2971  04B7                     __ptext614:	
  2972 ;; =============== function _mTouch_StoreScanB ends ============
  2973                           
  2974                           
  2975 ;; *************** function _mTouch_StoreScanA *****************
  2976 ;; Defined at:
  2977 ;;		line 440 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;		None
  2982 ;; Return value:  Size  Location     Type
  2983 ;;		None               void
  2984 ;; Registers used:
  2985 ;;		wreg
  2986 ;; Tracked objects:
  2987 ;;		On entry : 1E/0
  2988 ;;		On exit  : 1F/0
  2989 ;;		Unchanged: FFFE0/0
  2990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2991 ;;      Params:         0       0       0       0
  2992 ;;      Locals:         0       0       0       0
  2993 ;;      Temps:          0       0       0       0
  2994 ;;      Totals:         0       0       0       0
  2995 ;;Total ram usage:        0 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_mTouch_Scan
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003  04B7                     _mTouch_StoreScanA:	
  3004                           
  3005                           ;cas16f1933.h: 444: mTouch_lastResult = (uint16_t) (ADRESH << 8) + ADRESL;
  3006                           
  3007                           ; Regs used in _mTouch_StoreScanA: [wreg]
  3008  04B7  0021               	movlb	1	; select bank1
  3009  04B8  081C               	movf	28,w	;volatile
  3010  04B9  0020               	movlb	0	; select bank0
  3011  04BA  00C3               	movwf	_mTouch_lastResult+1
  3012  04BB  01C2               	clrf	_mTouch_lastResult
  3013  04BC  0021               	movlb	1	; select bank1
  3014  04BD  081B               	movf	27,w	;volatile
  3015  04BE  0020               	movlb	0	; select bank0
  3016  04BF  07C2               	addwf	_mTouch_lastResult,f
  3017  04C0  1803               	skipnc
  3018  04C1  0AC3               	incf	_mTouch_lastResult+1,f
  3019  04C2  0008               	return
  3020  04C3                     __end_of_mTouch_StoreScanA:	
  3021  04C3                     __ptext613:	
  3022 ;; =============== function _mTouch_DecimationFilter ends ============
  3023                           
  3024                           
  3025 ;; *************** function _mTouch_StoreScanB *****************
  3026 ;; Defined at:
  3027 ;;		line 453 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;		None
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;		None
  3032 ;; Return value:  Size  Location     Type
  3033 ;;		None               void
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0
  3036 ;; Tracked objects:
  3037 ;;		On entry : 1E/0
  3038 ;;		On exit  : 1F/0
  3039 ;;		Unchanged: FFFE0/0
  3040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3041 ;;      Params:         0       0       0       0
  3042 ;;      Locals:         0       0       0       0
  3043 ;;      Temps:          1       0       0       0
  3044 ;;      Totals:         1       0       0       0
  3045 ;;Total ram usage:        1 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_mTouch_Scan
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053  04C3                     _mTouch_StoreScanB:	
  3054                           
  3055                           ;cas16f1933.h: 457: mTouch_lastResult = (uint16_t)((ADRESH | 0x04) << 8) + ADRESL - mTou
      +                          ch_lastResult;
  3056                           
  3057                           ; Regs used in _mTouch_StoreScanB: [wreg+status,2+status,0]
  3058  04C3  3004               	movlw	4
  3059  04C4  0021               	movlb	1	; select bank1
  3060  04C5  041C               	iorwf	28,w	;volatile
  3061  04C6  00F0               	movwf	??_mTouch_StoreScanB
  3062  04C7  0020               	movlb	0	; select bank0
  3063  04C8  0842               	movf	_mTouch_lastResult,w
  3064  04C9  0021               	movlb	1	; select bank1
  3065  04CA  021B               	subwf	27,w	;volatile
  3066  04CB  0020               	movlb	0	; select bank0
  3067  04CC  00C2               	movwf	_mTouch_lastResult
  3068  04CD  0843               	movf	_mTouch_lastResult+1,w
  3069  04CE  3B70               	subwfb	??_mTouch_StoreScanB,w
  3070  04CF  00C3               	movwf	_mTouch_lastResult+1
  3071  04D0  0008               	return
  3072  04D1                     __end_of_mTouch_StoreScanB:	
  3073  04D1                     __ptext612:	
  3074 ;; =============== function _mTouch_ScanA_4 ends ============
  3075                           
  3076                           
  3077 ;; *************** function _mTouch_DecimationFilter *****************
  3078 ;; Defined at:
  3079 ;;		line 373 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  result          2    5[COMMON] unsigned int 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;		None               void
  3086 ;; Registers used:
  3087 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3088 ;; Tracked objects:
  3089 ;;		On entry : 1F/0
  3090 ;;		On exit  : 1F/0
  3091 ;;		Unchanged: FFFE0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3093 ;;      Params:         0       0       0       0
  3094 ;;      Locals:         2       0       0       0
  3095 ;;      Temps:          5       0       0       0
  3096 ;;      Totals:         7       0       0       0
  3097 ;;Total ram usage:        7 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; This function calls:
  3100 ;;		Nothing
  3101 ;; This function is called by:
  3102 ;;		_mTouch_Scan
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105  04D1                     _mTouch_DecimationFilter:	
  3106                           
  3107                           ;cas16f1933.h: 376: uint16_t result = (uint16_t)((*mTouch_currentAcqData).result.v >> 4);
  3108                           
  3109                           ; Regs used in _mTouch_DecimationFilter: [wreg+fsr1l-status,0]
  3110  04D1  2555  3184         	fcall	PL12	;call to abstracted procedure
  3111  04D3  00F5               	movwf	mTouch_DecimationFilter@result
  3112  04D4  3F41               	moviw [1]fsr1
  3113  04D5  00F6               	movwf	mTouch_DecimationFilter@result+1
  3114  04D6  300F               	movlw	15
  3115  04D7  0EF5               	swapf	mTouch_DecimationFilter@result,f
  3116  04D8  0EF6               	swapf	mTouch_DecimationFilter@result+1,f
  3117  04D9  05F5               	andwf	mTouch_DecimationFilter@result,f
  3118  04DA  0876               	movf	mTouch_DecimationFilter@result+1,w
  3119  04DB  39F0               	andlw	240
  3120  04DC  04F5               	iorwf	mTouch_DecimationFilter@result,f
  3121  04DD  300F               	movlw	15
  3122  04DE  05F6               	andwf	mTouch_DecimationFilter@result+1,f
  3123                           
  3124                           ;cas16f1933.h: 394: if ((uint16_t)(mTouch_lastResult) > (uint16_t)(result + 5))
  3125  04DF  0875               	movf	mTouch_DecimationFilter@result,w
  3126  04E0  3E05               	addlw	5
  3127  04E1  00F0               	movwf	??_mTouch_DecimationFilter
  3128  04E2  3000               	movlw	0
  3129  04E3  3D76               	addwfc	mTouch_DecimationFilter@result+1,w
  3130  04E4  00F1               	movwf	??_mTouch_DecimationFilter+1
  3131  04E5  0843               	movf	_mTouch_lastResult+1,w
  3132  04E6  0271               	subwf	??_mTouch_DecimationFilter+1,w
  3133  04E7  1D03               	skipz
  3134  04E8  2CEB               	goto	u150_25
  3135  04E9  0842               	movf	_mTouch_lastResult,w
  3136  04EA  0270               	subwf	??_mTouch_DecimationFilter,w
  3137  04EB                     u150_25:	
  3138  04EB  1803               	skipnc
  3139  04EC  2CF2               	goto	i1l23413
  3140                           
  3141                           ;cas16f1933.h: 395: {
  3142                           ;cas16f1933.h: 396: result += 5;
  3143  04ED  3005               	movlw	5
  3144  04EE  07F5               	addwf	mTouch_DecimationFilter@result,f
  3145  04EF  1803               	skipnc
  3146  04F0  0AF6               	incf	mTouch_DecimationFilter@result+1,f
  3147                           
  3148                           ;cas16f1933.h: 397: }
  3149  04F1  2D0F               	goto	i1l23423
  3150  04F2                     i1l23413:	
  3151                           
  3152                           ;cas16f1933.h: 398: else if (result > 5)
  3153  04F2  3000               	movlw	0
  3154  04F3  0276               	subwf	mTouch_DecimationFilter@result+1,w
  3155  04F4  3006               	movlw	6
  3156  04F5  1903               	skipnz
  3157  04F6  0275               	subwf	mTouch_DecimationFilter@result,w
  3158  04F7  1C03               	skipc
  3159  04F8  2D0B               	goto	i1l23419
  3160                           
  3161                           ;cas16f1933.h: 399: {
  3162                           ;cas16f1933.h: 400: if ((uint16_t)(mTouch_lastResult) < result - 5)
  3163  04F9  0875               	movf	mTouch_DecimationFilter@result,w
  3164  04FA  3EFB               	addlw	251
  3165  04FB  00F0               	movwf	??_mTouch_DecimationFilter
  3166  04FC  30FF               	movlw	255
  3167  04FD  3D76               	addwfc	mTouch_DecimationFilter@result+1,w
  3168  04FE  00F1               	movwf	??_mTouch_DecimationFilter+1
  3169  04FF  0243               	subwf	_mTouch_lastResult+1,w
  3170  0500  1D03               	skipz
  3171  0501  2D04               	goto	u152_25
  3172  0502  0870               	movf	??_mTouch_DecimationFilter,w
  3173  0503  0242               	subwf	_mTouch_lastResult,w
  3174  0504                     u152_25:	
  3175  0504  1803               	skipnc
  3176  0505  2D0B               	goto	i1l23419
  3177                           
  3178                           ;cas16f1933.h: 401: {
  3179                           ;cas16f1933.h: 402: result -= 5;
  3180  0506  3005               	movlw	5
  3181  0507  02F5               	subwf	mTouch_DecimationFilter@result,f
  3182  0508  3000               	movlw	0
  3183  0509  3BF6               	subwfb	mTouch_DecimationFilter@result+1,f
  3184                           
  3185                           ;cas16f1933.h: 403: } else {
  3186  050A  2D0F               	goto	i1l23423
  3187  050B                     i1l23419:	
  3188                           
  3189                           ;cas16f1933.h: 404: result = mTouch_lastResult;
  3190  050B  0843               	movf	_mTouch_lastResult+1,w
  3191  050C  00F6               	movwf	mTouch_DecimationFilter@result+1
  3192  050D  0842               	movf	_mTouch_lastResult,w
  3193  050E  00F5               	movwf	mTouch_DecimationFilter@result
  3194  050F                     i1l23423:	
  3195                           
  3196                           ;cas16f1933.h: 410: }
  3197                           ;cas16f1933.h: 419: (*mTouch_currentAcqData).result.v &= 0x000F;
  3198  050F  087D               	movf	_mTouch_currentAcqData,w
  3199  0510  3E02               	addlw	2
  3200  0511  0086               	movwf	6
  3201  0512  300F               	movlw	15
  3202  0513  0187               	clrf	7
  3203  0514  0581               	andwf	1,f
  3204  0515  3141               	addfsr 1,1
  3205  0516  0181               	clrf	1
  3206                           
  3207                           ;cas16f1933.h: 420: (*mTouch_currentAcqData).result.v |= (uint16_t)(result << 4);
  3208  0517  0876               	movf	mTouch_DecimationFilter@result+1,w
  3209  0518  00F1               	movwf	??_mTouch_DecimationFilter+1
  3210  0519  0875               	movf	mTouch_DecimationFilter@result,w
  3211  051A  00F0               	movwf	??_mTouch_DecimationFilter
  3212  051B  30F0               	movlw	240
  3213  051C  0EF0               	swapf	??_mTouch_DecimationFilter,f
  3214  051D  0EF1               	swapf	??_mTouch_DecimationFilter+1,f
  3215  051E  05F1               	andwf	??_mTouch_DecimationFilter+1,f
  3216  051F  0870               	movf	??_mTouch_DecimationFilter,w
  3217  0520  390F               	andlw	15
  3218  0521  04F1               	iorwf	??_mTouch_DecimationFilter+1,f
  3219  0522  30F0               	movlw	240
  3220  0523  05F0               	andwf	??_mTouch_DecimationFilter,f
  3221  0524  087D               	movf	_mTouch_currentAcqData,w
  3222  0525  3E02               	addlw	2
  3223  0526  0086               	movwf	6
  3224  0527  0187               	clrf	7
  3225  0528  0870               	movf	??_mTouch_DecimationFilter,w
  3226  0529  0481               	iorwf	1,f
  3227  052A  3141               	addfsr 1,1
  3228  052B  0871               	movf	??_mTouch_DecimationFilter+1,w
  3229  052C  0481               	iorwf	1,f
  3230                           
  3231                           ;cas16f1933.h: 427: (*mTouch_currentAcqData).accumulator.v += (uint16_t)((*mTouch_curren
      +                          tAcqData).result.v >> 4);
  3232  052D  2555  3184         	fcall	PL12	;call to abstracted procedure
  3233  052F  00F0               	movwf	??_mTouch_DecimationFilter
  3234  0530  3F41               	moviw [1]fsr1
  3235  0531  00F1               	movwf	??_mTouch_DecimationFilter+1
  3236  0532  3004               	movlw	4
  3237  0533                     u153_25:	
  3238  0533  36F1               	lsrf	??_mTouch_DecimationFilter+1,f
  3239  0534  0CF0               	rrf	??_mTouch_DecimationFilter,f
  3240  0535  0B89               	decfsz	9,f
  3241  0536  2D33               	goto	u153_25
  3242  0537  0870               	movf	??_mTouch_DecimationFilter,w
  3243  0538  00F2               	movwf	??_mTouch_DecimationFilter+2
  3244  0539  0871               	movf	??_mTouch_DecimationFilter+1,w
  3245  053A  00F3               	movwf	??_mTouch_DecimationFilter+3
  3246  053B  01F4               	clrf	??_mTouch_DecimationFilter+4
  3247  053C  087D               	movf	_mTouch_currentAcqData,w
  3248  053D  0086               	movwf	6
  3249  053E  0187               	clrf	7
  3250  053F  0872               	movf	??_mTouch_DecimationFilter+2,w
  3251  0540  0781               	addwf	1,f
  3252  0541  3141               	addfsr 1,1
  3253  0542  0873               	movf	??_mTouch_DecimationFilter+3,w
  3254  0543  3D81               	addwfc	1,f
  3255  0544  3141               	addfsr 1,1
  3256  0545  0874               	movf	??_mTouch_DecimationFilter+4,w
  3257  0546  3D81               	addwfc	1,f
  3258  0547  0008               	return
  3259  0548                     __end_of_mTouch_DecimationFilter:	
  3260  0548                     __ptext601:	
  3261 ;; =============== function _mTouch_Scan ends ============
  3262                           
  3263                           
  3264 ;; *************** function i1_mTouch_ChangeMode *****************
  3265 ;; Defined at:
  3266 ;;		line 470 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;		None
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;		None
  3271 ;; Return value:  Size  Location     Type
  3272 ;;		None               void
  3273 ;; Registers used:
  3274 ;;		wreg, status,2
  3275 ;; Tracked objects:
  3276 ;;		On entry : 1F/0
  3277 ;;		On exit  : 1F/1
  3278 ;;		Unchanged: FFFE0/0
  3279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3280 ;;      Params:         0       0       0       0
  3281 ;;      Locals:         0       0       0       0
  3282 ;;      Temps:          0       0       0       0
  3283 ;;      Totals:         0       0       0       0
  3284 ;;Total ram usage:        0 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_mTouch_Scan
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292  0548                     i1_mTouch_ChangeMode:	
  3293  0548  301E               	movlw	30
  3294                           
  3295                           ;cas16f1933.h: 472: mTouch_currentAcqData = 0;
  3296                           
  3297                           ; Regs used in i1_mTouch_ChangeMode: [wreg+status,2]
  3298  0549  01FD               	clrf	_mTouch_currentAcqData
  3299                           
  3300                           ;cas16f1933.h: 491: mTouch_currentScan = 0;
  3301  054A  01CF               	clrf	_mTouch_currentScan
  3302                           
  3303                           ;cas16f1933.h: 509: mTouch_stateVars.sampleCounter = 30;
  3304  054B  0021               	movlb	1	; select bank1
  3305  054C  00A0               	movwf	_mTouch_stateVars^(0+128)
  3306  054D  0008               	return
  3307  054E                     __end_ofi1_mTouch_ChangeMode:	
  3308  054E                     PL8:	
  3309  054E  0020               	movlb	0	; select bank0
  3310  054F  084F               	movf	_mTouch_currentScan,w
  3311  0550  0709               	addwf	9,w
  3312  0551  0709               	addwf	9,w
  3313  0552  3EBA               	addlw	_mTouch_acqData& (0+255)
  3314  0553  00FD               	movwf	_mTouch_currentAcqData
  3315  0554  0008               	return
  3316  0555                     PL12:	
  3317  0555  087D               	movf	_mTouch_currentAcqData,w
  3318  0556  3E02               	addlw	2
  3319  0557  0086               	movwf	6
  3320  0558  0187               	clrf	7
  3321  0559  3F40               	moviw [0]fsr1
  3322  055A  0008               	return
  3323                           
  3324                           	psect	text602
  3325  061F                     __ptext602:	
  3326 ;; =============== function i1_mTouch_ChangeMode ends ============
  3327                           
  3328                           
  3329 ;; *************** function _mTouch_ScanB_3 *****************
  3330 ;; Defined at:
  3331 ;;		line 523 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;		None               void
  3338 ;; Registers used:
  3339 ;;		None
  3340 ;; Tracked objects:
  3341 ;;		On entry : 1F/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: FFE00/0
  3344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3345 ;;      Params:         0       0       0       0
  3346 ;;      Locals:         0       0       0       0
  3347 ;;      Temps:          0       0       0       0
  3348 ;;      Totals:         0       0       0       0
  3349 ;;Total ram usage:        0 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_mTouch_Scan
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357  061F                     _mTouch_ScanB_3:	
  3358                           
  3359                           ; Regs used in _mTouch_ScanB_3: []
  3360  061F  0022               	banksel	269	;#
  3361  0620  100D               	bcf	13,0	;#
  3362  0621  0021               	banksel	157	;#
  3363  0622  3031               	movlw	49	;#
  3364  0623  009D               	movwf	29	;#
  3365  0624  300D               	movlw	13	;#
  3366  0625  0086               	movwf	6	;#
  3367  0626  3001               	movlw	1	;#
  3368  0627  0087               	movwf	7	;#
  3369  0628  308D               	movlw	141	;#
  3370  0629  0084               	movwf	4	;#
  3371  062A  3000               	movlw	0	;#
  3372  062B  0085               	movwf	5	;#
  3373  062C  0020               	banksel	_mTouch_delayCount	;#
  3374  062D  3005               	movlw	5	;#
  3375  062E  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  3376  062F  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3377  0630  2E1E               	goto	($+-1)	;#
  3378  0631  0021               	banksel	157	;#
  3379  0632  3029               	movlw	41	;#
  3380  0633  1480               	bsf	0,1	;#
  3381  0634  009D               	movwf	29	;#
  3382  0635  0020               	banksel	_mTouch_delayCount	;#
  3383  0636  3005               	movlw	5	;#
  3384  0637  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  3385  0638  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3386  0639  2E1E               	goto	($+-1)	;#
  3387  063A  0021               	banksel	157	;#
  3388  063B  149D               	bsf	29,1	;#
  3389  063C  0000               	nop	;#
  3390  063D  1081               	bcf	1,1	;#
  3391  063E  1080               	bcf	0,1	;#
  3392  063F  0008               	return
  3393  0640                     __end_of_mTouch_ScanB_3:	
  3394                           
  3395                           	psect	text603
  3396  0640                     __ptext603:	
  3397 ;; =============== function _mTouch_ScanB_3 ends ============
  3398                           
  3399                           
  3400 ;; *************** function _mTouch_ScanB_2 *****************
  3401 ;; Defined at:
  3402 ;;		line 520 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;		None
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;		None
  3407 ;; Return value:  Size  Location     Type
  3408 ;;		None               void
  3409 ;; Registers used:
  3410 ;;		None
  3411 ;; Tracked objects:
  3412 ;;		On entry : 1F/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: FFE00/0
  3415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3416 ;;      Params:         0       0       0       0
  3417 ;;      Locals:         0       0       0       0
  3418 ;;      Temps:          0       0       0       0
  3419 ;;      Totals:         0       0       0       0
  3420 ;;Total ram usage:        0 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; This function calls:
  3423 ;;		Nothing
  3424 ;; This function is called by:
  3425 ;;		_mTouch_Scan
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428  0640                     _mTouch_ScanB_2:	
  3429                           
  3430                           ; Regs used in _mTouch_ScanB_2: []
  3431  0640  0022               	banksel	269	;#
  3432  0641  118D               	bcf	13,3	;#
  3433  0642  0021               	banksel	157	;#
  3434  0643  3025               	movlw	37	;#
  3435  0644  009D               	movwf	29	;#
  3436  0645  300D               	movlw	13	;#
  3437  0646  0086               	movwf	6	;#
  3438  0647  3001               	movlw	1	;#
  3439  0648  0087               	movwf	7	;#
  3440  0649  308D               	movlw	141	;#
  3441  064A  0084               	movwf	4	;#
  3442  064B  3000               	movlw	0	;#
  3443  064C  0085               	movwf	5	;#
  3444  064D  0020               	banksel	_mTouch_delayCount	;#
  3445  064E  3005               	movlw	5	;#
  3446  064F  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  3447  0650  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3448  0651  2E3F               	goto	($+-1)	;#
  3449  0652  0021               	banksel	157	;#
  3450  0653  3031               	movlw	49	;#
  3451  0654  1400               	bsf	0,0	;#
  3452  0655  009D               	movwf	29	;#
  3453  0656  0020               	banksel	_mTouch_delayCount	;#
  3454  0657  3005               	movlw	5	;#
  3455  0658  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  3456  0659  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3457  065A  2E3F               	goto	($+-1)	;#
  3458  065B  0021               	banksel	157	;#
  3459  065C  149D               	bsf	29,1	;#
  3460  065D  0000               	nop	;#
  3461  065E  1001               	bcf	1,0	;#
  3462  065F  1000               	bcf	0,0	;#
  3463  0660  0008               	return
  3464  0661                     __end_of_mTouch_ScanB_2:	
  3465                           
  3466                           	psect	text604
  3467  0661                     __ptext604:	
  3468 ;; =============== function _mTouch_ScanB_2 ends ============
  3469                           
  3470                           
  3471 ;; *************** function _mTouch_ScanB_1 *****************
  3472 ;; Defined at:
  3473 ;;		line 517 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;		None               void
  3480 ;; Registers used:
  3481 ;;		None
  3482 ;; Tracked objects:
  3483 ;;		On entry : 1F/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: FFE00/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3487 ;;      Params:         0       0       0       0
  3488 ;;      Locals:         0       0       0       0
  3489 ;;      Temps:          0       0       0       0
  3490 ;;      Totals:         0       0       0       0
  3491 ;;Total ram usage:        0 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_mTouch_Scan
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499  0661                     _mTouch_ScanB_1:	
  3500                           
  3501                           ; Regs used in _mTouch_ScanB_1: []
  3502  0661  0022               	banksel	269	;#
  3503  0662  120D               	bcf	13,4	;#
  3504  0663  0021               	banksel	157	;#
  3505  0664  302D               	movlw	45	;#
  3506  0665  009D               	movwf	29	;#
  3507  0666  300D               	movlw	13	;#
  3508  0667  0086               	movwf	6	;#
  3509  0668  3001               	movlw	1	;#
  3510  0669  0087               	movwf	7	;#
  3511  066A  308D               	movlw	141	;#
  3512  066B  0084               	movwf	4	;#
  3513  066C  3000               	movlw	0	;#
  3514  066D  0085               	movwf	5	;#
  3515  066E  0020               	banksel	_mTouch_delayCount	;#
  3516  066F  3005               	movlw	5	;#
  3517  0670  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  3518  0671  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3519  0672  2E60               	goto	($+-1)	;#
  3520  0673  0021               	banksel	157	;#
  3521  0674  3025               	movlw	37	;#
  3522  0675  1580               	bsf	0,3	;#
  3523  0676  009D               	movwf	29	;#
  3524  0677  0020               	banksel	_mTouch_delayCount	;#
  3525  0678  3005               	movlw	5	;#
  3526  0679  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  3527  067A  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3528  067B  2E60               	goto	($+-1)	;#
  3529  067C  0021               	banksel	157	;#
  3530  067D  149D               	bsf	29,1	;#
  3531  067E  0000               	nop	;#
  3532  067F  1181               	bcf	1,3	;#
  3533  0680  1180               	bcf	0,3	;#
  3534  0681  0008               	return
  3535  0682                     __end_of_mTouch_ScanB_1:	
  3536                           
  3537                           	psect	text605
  3538  0682                     __ptext605:	
  3539 ;; =============== function _mTouch_ScanB_1 ends ============
  3540                           
  3541                           
  3542 ;; *************** function _mTouch_ScanB_0 *****************
  3543 ;; Defined at:
  3544 ;;		line 514 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;		None               void
  3551 ;; Registers used:
  3552 ;;		None
  3553 ;; Tracked objects:
  3554 ;;		On entry : 1F/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: FFE00/0
  3557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3558 ;;      Params:         0       0       0       0
  3559 ;;      Locals:         0       0       0       0
  3560 ;;      Temps:          0       0       0       0
  3561 ;;      Totals:         0       0       0       0
  3562 ;;Total ram usage:        0 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_mTouch_Scan
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570  0682                     _mTouch_ScanB_0:	
  3571                           
  3572                           ; Regs used in _mTouch_ScanB_0: []
  3573  0682  0022               	banksel	269	;#
  3574  0683  110D               	bcf	13,2	;#
  3575  0684  0021               	banksel	157	;#
  3576  0685  3021               	movlw	33	;#
  3577  0686  009D               	movwf	29	;#
  3578  0687  300D               	movlw	13	;#
  3579  0688  0086               	movwf	6	;#
  3580  0689  3001               	movlw	1	;#
  3581  068A  0087               	movwf	7	;#
  3582  068B  308D               	movlw	141	;#
  3583  068C  0084               	movwf	4	;#
  3584  068D  3000               	movlw	0	;#
  3585  068E  0085               	movwf	5	;#
  3586  068F  0020               	banksel	_mTouch_delayCount	;#
  3587  0690  3005               	movlw	5	;#
  3588  0691  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  3589  0692  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3590  0693  2E81               	goto	($+-1)	;#
  3591  0694  0021               	banksel	157	;#
  3592  0695  302D               	movlw	45	;#
  3593  0696  1600               	bsf	0,4	;#
  3594  0697  009D               	movwf	29	;#
  3595  0698  0020               	banksel	_mTouch_delayCount	;#
  3596  0699  3005               	movlw	5	;#
  3597  069A  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  3598  069B  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3599  069C  2E81               	goto	($+-1)	;#
  3600  069D  0021               	banksel	157	;#
  3601  069E  149D               	bsf	29,1	;#
  3602  069F  0000               	nop	;#
  3603  06A0  1201               	bcf	1,4	;#
  3604  06A1  1200               	bcf	0,4	;#
  3605  06A2  0008               	return
  3606  06A3                     __end_of_mTouch_ScanB_0:	
  3607                           
  3608                           	psect	text606
  3609  06A3                     __ptext606:	
  3610 ;; =============== function _mTouch_ScanB_0 ends ============
  3611                           
  3612                           
  3613 ;; *************** function _mTouch_ScanB_4 *****************
  3614 ;; Defined at:
  3615 ;;		line 526 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;		None
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;		None
  3620 ;; Return value:  Size  Location     Type
  3621 ;;		None               void
  3622 ;; Registers used:
  3623 ;;		None
  3624 ;; Tracked objects:
  3625 ;;		On entry : 1F/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: FFE00/0
  3628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3629 ;;      Params:         0       0       0       0
  3630 ;;      Locals:         0       0       0       0
  3631 ;;      Temps:          0       0       0       0
  3632 ;;      Totals:         0       0       0       0
  3633 ;;Total ram usage:        0 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; This function calls:
  3636 ;;		Nothing
  3637 ;; This function is called by:
  3638 ;;		_mTouch_Scan
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641  06A3                     _mTouch_ScanB_4:	
  3642                           
  3643                           ; Regs used in _mTouch_ScanB_4: []
  3644  06A3  0022               	banksel	269	;#
  3645  06A4  108D               	bcf	13,1	;#
  3646  06A5  0021               	banksel	157	;#
  3647  06A6  3029               	movlw	41	;#
  3648  06A7  009D               	movwf	29	;#
  3649  06A8  300D               	movlw	13	;#
  3650  06A9  0086               	movwf	6	;#
  3651  06AA  3001               	movlw	1	;#
  3652  06AB  0087               	movwf	7	;#
  3653  06AC  308D               	movlw	141	;#
  3654  06AD  0084               	movwf	4	;#
  3655  06AE  3000               	movlw	0	;#
  3656  06AF  0085               	movwf	5	;#
  3657  06B0  0020               	banksel	_mTouch_delayCount	;#
  3658  06B1  3005               	movlw	5	;#
  3659  06B2  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  3660  06B3  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3661  06B4  2EA2               	goto	($+-1)	;#
  3662  06B5  0021               	banksel	157	;#
  3663  06B6  3021               	movlw	33	;#
  3664  06B7  1500               	bsf	0,2	;#
  3665  06B8  009D               	movwf	29	;#
  3666  06B9  0020               	banksel	_mTouch_delayCount	;#
  3667  06BA  3005               	movlw	5	;#
  3668  06BB  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  3669  06BC  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3670  06BD  2EA2               	goto	($+-1)	;#
  3671  06BE  0021               	banksel	157	;#
  3672  06BF  149D               	bsf	29,1	;#
  3673  06C0  0000               	nop	;#
  3674  06C1  1101               	bcf	1,2	;#
  3675  06C2  1100               	bcf	0,2	;#
  3676  06C3  0008               	return
  3677  06C4                     __end_of_mTouch_ScanB_4:	
  3678                           
  3679                           	psect	text607
  3680  06C4                     __ptext607:	
  3681 ;; =============== function _mTouch_ScanB_4 ends ============
  3682                           
  3683                           
  3684 ;; *************** function _mTouch_ScanA_3 *****************
  3685 ;; Defined at:
  3686 ;;		line 523 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;		None
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;		None
  3691 ;; Return value:  Size  Location     Type
  3692 ;;		None               void
  3693 ;; Registers used:
  3694 ;;		None
  3695 ;; Tracked objects:
  3696 ;;		On entry : 1F/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: FFE00/0
  3699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3700 ;;      Params:         0       0       0       0
  3701 ;;      Locals:         0       0       0       0
  3702 ;;      Temps:          0       0       0       0
  3703 ;;      Totals:         0       0       0       0
  3704 ;;Total ram usage:        0 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_mTouch_Scan
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712  06C4                     _mTouch_ScanA_3:	
  3713                           
  3714                           ; Regs used in _mTouch_ScanA_3: []
  3715  06C4  0022               	banksel	269	;#
  3716  06C5  140D               	bsf	13,0	;#
  3717  06C6  0021               	banksel	157	;#
  3718  06C7  3031               	movlw	49	;#
  3719  06C8  009D               	movwf	29	;#
  3720  06C9  300D               	movlw	13	;#
  3721  06CA  0086               	movwf	6	;#
  3722  06CB  3001               	movlw	1	;#
  3723  06CC  0087               	movwf	7	;#
  3724  06CD  308D               	movlw	141	;#
  3725  06CE  0084               	movwf	4	;#
  3726  06CF  3000               	movlw	0	;#
  3727  06D0  0085               	movwf	5	;#
  3728  06D1  0020               	banksel	_mTouch_delayCount	;#
  3729  06D2  3005               	movlw	5	;#
  3730  06D3  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  3731  06D4  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3732  06D5  2EC3               	goto	($+-1)	;#
  3733  06D6  0021               	banksel	157	;#
  3734  06D7  3029               	movlw	41	;#
  3735  06D8  1480               	bsf	0,1	;#
  3736  06D9  009D               	movwf	29	;#
  3737  06DA  0020               	banksel	_mTouch_delayCount	;#
  3738  06DB  3005               	movlw	5	;#
  3739  06DC  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  3740  06DD  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3741  06DE  2EC3               	goto	($+-1)	;#
  3742  06DF  0021               	banksel	157	;#
  3743  06E0  149D               	bsf	29,1	;#
  3744  06E1  0000               	nop	;#
  3745  06E2  1481               	bsf	1,1	;#
  3746  06E3  1080               	bcf	0,1	;#
  3747  06E4  0008               	return
  3748  06E5                     __end_of_mTouch_ScanA_3:	
  3749                           
  3750                           	psect	text608
  3751  06E5                     __ptext608:	
  3752 ;; =============== function _mTouch_ScanA_3 ends ============
  3753                           
  3754                           
  3755 ;; *************** function _mTouch_ScanA_2 *****************
  3756 ;; Defined at:
  3757 ;;		line 520 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;		None
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;		None
  3762 ;; Return value:  Size  Location     Type
  3763 ;;		None               void
  3764 ;; Registers used:
  3765 ;;		None
  3766 ;; Tracked objects:
  3767 ;;		On entry : 1F/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: FFE00/0
  3770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3771 ;;      Params:         0       0       0       0
  3772 ;;      Locals:         0       0       0       0
  3773 ;;      Temps:          0       0       0       0
  3774 ;;      Totals:         0       0       0       0
  3775 ;;Total ram usage:        0 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; This function calls:
  3778 ;;		Nothing
  3779 ;; This function is called by:
  3780 ;;		_mTouch_Scan
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783  06E5                     _mTouch_ScanA_2:	
  3784                           
  3785                           ; Regs used in _mTouch_ScanA_2: []
  3786  06E5  0022               	banksel	269	;#
  3787  06E6  158D               	bsf	13,3	;#
  3788  06E7  0021               	banksel	157	;#
  3789  06E8  3025               	movlw	37	;#
  3790  06E9  009D               	movwf	29	;#
  3791  06EA  300D               	movlw	13	;#
  3792  06EB  0086               	movwf	6	;#
  3793  06EC  3001               	movlw	1	;#
  3794  06ED  0087               	movwf	7	;#
  3795  06EE  308D               	movlw	141	;#
  3796  06EF  0084               	movwf	4	;#
  3797  06F0  3000               	movlw	0	;#
  3798  06F1  0085               	movwf	5	;#
  3799  06F2  0020               	banksel	_mTouch_delayCount	;#
  3800  06F3  3005               	movlw	5	;#
  3801  06F4  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  3802  06F5  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3803  06F6  2EE4               	goto	($+-1)	;#
  3804  06F7  0021               	banksel	157	;#
  3805  06F8  3031               	movlw	49	;#
  3806  06F9  1400               	bsf	0,0	;#
  3807  06FA  009D               	movwf	29	;#
  3808  06FB  0020               	banksel	_mTouch_delayCount	;#
  3809  06FC  3005               	movlw	5	;#
  3810  06FD  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  3811  06FE  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3812  06FF  2EE4               	goto	($+-1)	;#
  3813  0700  0021               	banksel	157	;#
  3814  0701  149D               	bsf	29,1	;#
  3815  0702  0000               	nop	;#
  3816  0703  1401               	bsf	1,0	;#
  3817  0704  1000               	bcf	0,0	;#
  3818  0705  0008               	return
  3819  0706                     __end_of_mTouch_ScanA_2:	
  3820                           
  3821                           	psect	text609
  3822  0706                     __ptext609:	
  3823 ;; =============== function _mTouch_ScanA_2 ends ============
  3824                           
  3825                           
  3826 ;; *************** function _mTouch_ScanA_1 *****************
  3827 ;; Defined at:
  3828 ;;		line 517 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;		None               void
  3835 ;; Registers used:
  3836 ;;		None
  3837 ;; Tracked objects:
  3838 ;;		On entry : 1F/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: FFE00/0
  3841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3842 ;;      Params:         0       0       0       0
  3843 ;;      Locals:         0       0       0       0
  3844 ;;      Temps:          0       0       0       0
  3845 ;;      Totals:         0       0       0       0
  3846 ;;Total ram usage:        0 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_mTouch_Scan
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854  0706                     _mTouch_ScanA_1:	
  3855                           
  3856                           ; Regs used in _mTouch_ScanA_1: []
  3857  0706  0022               	banksel	269	;#
  3858  0707  160D               	bsf	13,4	;#
  3859  0708  0021               	banksel	157	;#
  3860  0709  302D               	movlw	45	;#
  3861  070A  009D               	movwf	29	;#
  3862  070B  300D               	movlw	13	;#
  3863  070C  0086               	movwf	6	;#
  3864  070D  3001               	movlw	1	;#
  3865  070E  0087               	movwf	7	;#
  3866  070F  308D               	movlw	141	;#
  3867  0710  0084               	movwf	4	;#
  3868  0711  3000               	movlw	0	;#
  3869  0712  0085               	movwf	5	;#
  3870  0713  0020               	banksel	_mTouch_delayCount	;#
  3871  0714  3005               	movlw	5	;#
  3872  0715  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  3873  0716  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3874  0717  2F05               	goto	($+-1)	;#
  3875  0718  0021               	banksel	157	;#
  3876  0719  3025               	movlw	37	;#
  3877  071A  1580               	bsf	0,3	;#
  3878  071B  009D               	movwf	29	;#
  3879  071C  0020               	banksel	_mTouch_delayCount	;#
  3880  071D  3005               	movlw	5	;#
  3881  071E  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  3882  071F  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3883  0720  2F05               	goto	($+-1)	;#
  3884  0721  0021               	banksel	157	;#
  3885  0722  149D               	bsf	29,1	;#
  3886  0723  0000               	nop	;#
  3887  0724  1581               	bsf	1,3	;#
  3888  0725  1180               	bcf	0,3	;#
  3889  0726  0008               	return
  3890  0727                     __end_of_mTouch_ScanA_1:	
  3891                           
  3892                           	psect	text610
  3893  0727                     __ptext610:	
  3894 ;; =============== function _mTouch_ScanA_1 ends ============
  3895                           
  3896                           
  3897 ;; *************** function _mTouch_ScanA_0 *****************
  3898 ;; Defined at:
  3899 ;;		line 514 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;		None
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;		None
  3904 ;; Return value:  Size  Location     Type
  3905 ;;		None               void
  3906 ;; Registers used:
  3907 ;;		None
  3908 ;; Tracked objects:
  3909 ;;		On entry : 1F/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: FFE00/0
  3912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3913 ;;      Params:         0       0       0       0
  3914 ;;      Locals:         0       0       0       0
  3915 ;;      Temps:          0       0       0       0
  3916 ;;      Totals:         0       0       0       0
  3917 ;;Total ram usage:        0 bytes
  3918 ;; Hardware stack levels used:    1
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_mTouch_Scan
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925  0727                     _mTouch_ScanA_0:	
  3926                           
  3927                           ; Regs used in _mTouch_ScanA_0: []
  3928  0727  0022               	banksel	269	;#
  3929  0728  150D               	bsf	13,2	;#
  3930  0729  0021               	banksel	157	;#
  3931  072A  3021               	movlw	33	;#
  3932  072B  009D               	movwf	29	;#
  3933  072C  300D               	movlw	13	;#
  3934  072D  0086               	movwf	6	;#
  3935  072E  3001               	movlw	1	;#
  3936  072F  0087               	movwf	7	;#
  3937  0730  308D               	movlw	141	;#
  3938  0731  0084               	movwf	4	;#
  3939  0732  3000               	movlw	0	;#
  3940  0733  0085               	movwf	5	;#
  3941  0734  0020               	banksel	_mTouch_delayCount	;#
  3942  0735  3005               	movlw	5	;#
  3943  0736  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  3944  0737  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3945  0738  2F26               	goto	($+-1)	;#
  3946  0739  0021               	banksel	157	;#
  3947  073A  302D               	movlw	45	;#
  3948  073B  1600               	bsf	0,4	;#
  3949  073C  009D               	movwf	29	;#
  3950  073D  0020               	banksel	_mTouch_delayCount	;#
  3951  073E  3005               	movlw	5	;#
  3952  073F  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  3953  0740  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3954  0741  2F26               	goto	($+-1)	;#
  3955  0742  0021               	banksel	157	;#
  3956  0743  149D               	bsf	29,1	;#
  3957  0744  0000               	nop	;#
  3958  0745  1601               	bsf	1,4	;#
  3959  0746  1200               	bcf	0,4	;#
  3960  0747  0008               	return
  3961  0748                     __end_of_mTouch_ScanA_0:	
  3962                           
  3963                           	psect	text611
  3964  0748                     __ptext611:	
  3965 ;; =============== function _mTouch_ScanA_0 ends ============
  3966                           
  3967                           
  3968 ;; *************** function _mTouch_ScanA_4 *****************
  3969 ;; Defined at:
  3970 ;;		line 526 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;		None
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;		None
  3975 ;; Return value:  Size  Location     Type
  3976 ;;		None               void
  3977 ;; Registers used:
  3978 ;;		None
  3979 ;; Tracked objects:
  3980 ;;		On entry : 1F/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: FFE00/0
  3983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3984 ;;      Params:         0       0       0       0
  3985 ;;      Locals:         0       0       0       0
  3986 ;;      Temps:          0       0       0       0
  3987 ;;      Totals:         0       0       0       0
  3988 ;;Total ram usage:        0 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; This function calls:
  3991 ;;		Nothing
  3992 ;; This function is called by:
  3993 ;;		_mTouch_Scan
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996  0748                     _mTouch_ScanA_4:	
  3997                           
  3998                           ; Regs used in _mTouch_ScanA_4: []
  3999  0748  0022               	banksel	269	;#
  4000  0749  148D               	bsf	13,1	;#
  4001  074A  0021               	banksel	157	;#
  4002  074B  3029               	movlw	41	;#
  4003  074C  009D               	movwf	29	;#
  4004  074D  300D               	movlw	13	;#
  4005  074E  0086               	movwf	6	;#
  4006  074F  3001               	movlw	1	;#
  4007  0750  0087               	movwf	7	;#
  4008  0751  308D               	movlw	141	;#
  4009  0752  0084               	movwf	4	;#
  4010  0753  3000               	movlw	0	;#
  4011  0754  0085               	movwf	5	;#
  4012  0755  0020               	banksel	_mTouch_delayCount	;#
  4013  0756  3005               	movlw	5	;#
  4014  0757  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  4015  0758  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  4016  0759  2F47               	goto	($+-1)	;#
  4017  075A  0021               	banksel	157	;#
  4018  075B  3021               	movlw	33	;#
  4019  075C  1500               	bsf	0,2	;#
  4020  075D  009D               	movwf	29	;#
  4021  075E  0020               	banksel	_mTouch_delayCount	;#
  4022  075F  3005               	movlw	5	;#
  4023  0760  00D0               	movwf	_mTouch_delayCount& (0+127)	;#
  4024  0761  0BD0               	decfsz	_mTouch_delayCount& (0+127),f	;#
  4025  0762  2F47               	goto	($+-1)	;#
  4026  0763  0021               	banksel	157	;#
  4027  0764  149D               	bsf	29,1	;#
  4028  0765  0000               	nop	;#
  4029  0766  1501               	bsf	1,2	;#
  4030  0767  1100               	bcf	0,2	;#
  4031  0768  0008               	return
  4032  0769                     __end_of_mTouch_ScanA_4:	
  4033                           
  4034                           	psect	text616
  4035  05CF                     __ptext616:	
  4036 ;; =============== function _mTouch_WaitForGoDone ends ============
  4037                           
  4038                           
  4039 ;; *************** function _IchLeds *****************
  4040 ;; Defined at:
  4041 ;;		line 199 in file "ICH-LR-HR.C"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;		None
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;		None               void
  4048 ;; Registers used:
  4049 ;;		wreg, status,2, status,0
  4050 ;; Tracked objects:
  4051 ;;		On entry : 1F/0
  4052 ;;		On exit  : 1D/0
  4053 ;;		Unchanged: FFE00/0
  4054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4055 ;;      Params:         0       0       0       0
  4056 ;;      Locals:         0       0       0       0
  4057 ;;      Temps:          0       0       0       0
  4058 ;;      Totals:         0       0       0       0
  4059 ;;Total ram usage:        0 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; This function calls:
  4062 ;;		Nothing
  4063 ;; This function is called by:
  4064 ;;		_ISR
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067  05CF                     _IchLeds:	
  4068  05CF  3014               	movlw	20
  4069                           
  4070                           ;ICH-LR-HR.C: 200: LedPwmCount++;
  4071                           
  4072                           ; Regs used in _IchLeds: [wreg+status,2+status,0]
  4073  05D0  0AFC               	incf	_LedPwmCount,f
  4074                           
  4075                           ;ICH-LR-HR.C: 201: if(LedPwmCount>=20){
  4076  05D1  027C               	subwf	_LedPwmCount,w
  4077  05D2  1803               	btfsc	3,0
  4078                           
  4079                           ;ICH-LR-HR.C: 202: LedPwmCount=0;
  4080  05D3  01FC               	clrf	_LedPwmCount
  4081                           
  4082                           ;ICH-LR-HR.C: 203: }
  4083                           ;ICH-LR-HR.C: 205: if ((LedPwmCount <= 1) && led_enable){
  4084  05D4  3002               	movlw	2
  4085  05D5  027C               	subwf	_LedPwmCount,w
  4086  05D6  1C03               	btfss	3,0
  4087  05D7  1F7A               	btfss	_led_enable/(0+8),_led_enable& (0+7)
  4088  05D8  2DF8               	goto	i1l1918
  4089                           
  4090                           ;ICH-LR-HR.C: 206: LATB7 = LATC4 = LATC6 = LATC5 = LATC3 = 1;
  4091  05D9  0022               	movlb	2	; select bank2
  4092  05DA  158E               	bsf	14,3
  4093  05DB  1D8E               	btfss	14,3
  4094  05DC  2DE0               	goto	u128_20
  4095  05DD  0022               	movlb	2	; select bank2
  4096  05DE  168E               	bsf	14,5
  4097  05DF  2DE2               	goto	u129_24
  4098  05E0                     u128_20:	
  4099  05E0  0022               	movlb	2	; select bank2
  4100  05E1  128E               	bcf	14,5
  4101  05E2                     u129_24:	
  4102  05E2  1E8E               	btfss	14,5
  4103  05E3  2DE7               	goto	u129_20
  4104  05E4  0022               	movlb	2	; select bank2
  4105  05E5  170E               	bsf	14,6
  4106  05E6  2DE9               	goto	u130_24
  4107  05E7                     u129_20:	
  4108  05E7  0022               	movlb	2	; select bank2
  4109  05E8  130E               	bcf	14,6
  4110  05E9                     u130_24:	
  4111  05E9  1F0E               	btfss	14,6
  4112  05EA  2DEE               	goto	u130_20
  4113  05EB  0022               	movlb	2	; select bank2
  4114  05EC  160E               	bsf	14,4
  4115  05ED  2DF0               	goto	u131_24
  4116  05EE                     u130_20:	
  4117  05EE  0022               	movlb	2	; select bank2
  4118  05EF  120E               	bcf	14,4
  4119  05F0                     u131_24:	
  4120  05F0  1E0E               	btfss	14,4
  4121  05F1  2DF5               	goto	u131_20
  4122  05F2  0022               	movlb	2	; select bank2
  4123  05F3  178D               	bsf	13,7
  4124  05F4  0008               	return
  4125  05F5                     u131_20:	
  4126  05F5  0022               	movlb	2	; select bank2
  4127  05F6  138D               	bcf	13,7
  4128                           
  4129                           ;ICH-LR-HR.C: 207: }
  4130  05F7  0008               	return
  4131  05F8                     i1l1918:	
  4132                           
  4133                           ;ICH-LR-HR.C: 208: else{
  4134                           ;ICH-LR-HR.C: 209: if (!Key_LED.oneBit.PROpen || !led_enable){
  4135  05F8  1C7B               	btfss	_Key_LED,0
  4136  05F9  2DFC               	goto	i1l1922
  4137  05FA  1B7A               	btfsc	_led_enable/(0+8),_led_enable& (0+7)
  4138  05FB  2DFE               	goto	i1l1920
  4139  05FC                     i1l1922:	
  4140                           
  4141                           ;ICH-LR-HR.C: 210: LATB7 = 0;
  4142  05FC  0022               	movlb	2	; select bank2
  4143  05FD  138D               	bcf	13,7
  4144  05FE                     i1l1920:	
  4145                           
  4146                           ;ICH-LR-HR.C: 211: }
  4147                           ;ICH-LR-HR.C: 212: if (!Key_LED.oneBit.PRClose || !led_enable){
  4148  05FE  1CFB               	btfss	_Key_LED,1
  4149  05FF  2E02               	goto	i1l1925
  4150  0600  1B7A               	btfsc	_led_enable/(0+8),_led_enable& (0+7)
  4151  0601  2E04               	goto	i1l1923
  4152  0602                     i1l1925:	
  4153                           
  4154                           ;ICH-LR-HR.C: 213: LATC4 = 0;
  4155  0602  0022               	movlb	2	; select bank2
  4156  0603  120E               	bcf	14,4
  4157  0604                     i1l1923:	
  4158                           
  4159                           ;ICH-LR-HR.C: 214: }
  4160                           ;ICH-LR-HR.C: 215: if (!Key_LED.oneBit.Heat || !led_enable || (LedPwmCount > heatLedInte
      +                          nsity)){
  4161  0604  197B               	btfsc	_Key_LED,2
  4162  0605  1F7A               	btfss	_led_enable/(0+8),_led_enable& (0+7)
  4163  0606  2E0C               	goto	i1l1928
  4164  0607  087C               	movf	_LedPwmCount,w
  4165  0608  0020               	movlb	0	; select bank0
  4166  0609  024D               	subwf	_heatLedIntensity,w
  4167  060A  1803               	skipnc
  4168  060B  2E0E               	goto	i1l1926
  4169  060C                     i1l1928:	
  4170                           
  4171                           ;ICH-LR-HR.C: 216: LATC6 = 0;
  4172  060C  0022               	movlb	2	; select bank2
  4173  060D  130E               	bcf	14,6
  4174  060E                     i1l1926:	
  4175                           
  4176                           ;ICH-LR-HR.C: 217: }
  4177                           ;ICH-LR-HR.C: 218: if (!Key_LED.oneBit.Massage || !led_enable || (LedPwmCount > massageL
      +                          edIntensity)){
  4178  060E  19FB               	btfsc	_Key_LED,3
  4179  060F  1F7A               	btfss	_led_enable/(0+8),_led_enable& (0+7)
  4180  0610  2E16               	goto	i1l1931
  4181  0611  087C               	movf	_LedPwmCount,w
  4182  0612  0020               	movlb	0	; select bank0
  4183  0613  0253               	subwf	_massageLedIntensity,w
  4184  0614  1803               	skipnc
  4185  0615  2E18               	goto	i1l1929
  4186  0616                     i1l1931:	
  4187                           
  4188                           ;ICH-LR-HR.C: 219: LATC5 = 0;
  4189  0616  0022               	movlb	2	; select bank2
  4190  0617  128E               	bcf	14,5
  4191  0618                     i1l1929:	
  4192                           
  4193                           ;ICH-LR-HR.C: 220: }
  4194                           ;ICH-LR-HR.C: 221: if (!Key_LED.oneBit.Light || !led_enable){
  4195  0618  1E7B               	btfss	_Key_LED,4
  4196  0619  2E1C               	goto	i1l1934
  4197  061A  1B7A               	btfsc	_led_enable/(0+8),_led_enable& (0+7)
  4198  061B  0008               	return
  4199  061C                     i1l1934:	
  4200                           
  4201                           ;ICH-LR-HR.C: 222: LATC3 = 0;
  4202  061C  0022               	movlb	2	; select bank2
  4203  061D  118E               	bcf	14,3
  4204  061E  0008               	return
  4205  061F                     __end_of_IchLeds:	
  4206                           
  4207                           	psect	text617
  4208  055B                     __ptext617:	
  4209 ;; =============== function _IchLeds ends ============
  4210                           
  4211                           
  4212 ;; *************** function _IchOutputs *****************
  4213 ;; Defined at:
  4214 ;;		line 133 in file "ICH-LR-HR.C"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;		None
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;		None
  4219 ;; Return value:  Size  Location     Type
  4220 ;;		None               void
  4221 ;; Registers used:
  4222 ;;		wreg, status,2, status,0
  4223 ;; Tracked objects:
  4224 ;;		On entry : 1D/0
  4225 ;;		On exit  : 1F/2
  4226 ;;		Unchanged: FFFE0/0
  4227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4228 ;;      Params:         0       0       0       0
  4229 ;;      Locals:         0       0       0       0
  4230 ;;      Temps:          0       0       0       0
  4231 ;;      Totals:         0       0       0       0
  4232 ;;Total ram usage:        0 bytes
  4233 ;; Hardware stack levels used:    1
  4234 ;; This function calls:
  4235 ;;		Nothing
  4236 ;; This function is called by:
  4237 ;;		_ISR
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240  055B                     _IchOutputs:	
  4241                           
  4242                           ;ICH-LR-HR.C: 135: heatPwmCount++;
  4243                           
  4244                           ; Regs used in _IchOutputs: [wreg+status,2+status,0]
  4245  055B  0020               	movlb	0	; select bank0
  4246  055C  0AB8               	incf	_heatPwmCount,f
  4247  055D  1903               	skipnz
  4248  055E  0AB9               	incf	_heatPwmCount+1,f
  4249  055F  1903               	skipnz
  4250  0560  0ABA               	incf	_heatPwmCount+2,f
  4251  0561  1903               	skipnz
  4252  0562  0ABB               	incf	_heatPwmCount+3,f
  4253                           
  4254                           ;ICH-LR-HR.C: 136: if(heatPwmCount >= 20){
  4255  0563  3000               	movlw	0
  4256  0564  023B               	subwf	_heatPwmCount+3,w
  4257  0565  1D03               	skipz
  4258  0566  2D71               	goto	u112_25
  4259  0567  3000               	movlw	0
  4260  0568  023A               	subwf	_heatPwmCount+2,w
  4261  0569  1D03               	skipz
  4262  056A  2D71               	goto	u112_25
  4263  056B  3000               	movlw	0
  4264  056C  0239               	subwf	_heatPwmCount+1,w
  4265  056D  1D03               	skipz
  4266  056E  2D71               	goto	u112_25
  4267  056F  3014               	movlw	20
  4268  0570  0238               	subwf	_heatPwmCount,w
  4269  0571                     u112_25:	
  4270  0571  1C03               	skipc
  4271  0572  2D77               	goto	i1l23265
  4272                           
  4273                           ;ICH-LR-HR.C: 137: heatPwmCount = 0;
  4274  0573  01B8               	clrf	_heatPwmCount
  4275  0574  01B9               	clrf	_heatPwmCount+1
  4276  0575  01BA               	clrf	_heatPwmCount+2
  4277  0576  01BB               	clrf	_heatPwmCount+3
  4278  0577                     i1l23265:	
  4279  0577  3014               	movlw	20
  4280                           
  4281                           ;ICH-LR-HR.C: 138: }
  4282                           ;ICH-LR-HR.C: 140: outputPwmCount++;
  4283  0578  0AD5               	incf	_outputPwmCount,f
  4284                           
  4285                           ;ICH-LR-HR.C: 141: if (outputPwmCount >= 20){
  4286  0579  0255               	subwf	_outputPwmCount,w
  4287  057A  1803               	btfsc	3,0
  4288                           
  4289                           ;ICH-LR-HR.C: 142: outputPwmCount = 0;
  4290  057B  01D5               	clrf	_outputPwmCount
  4291                           
  4292                           ;ICH-LR-HR.C: 143: }
  4293                           ;ICH-LR-HR.C: 147: if(Key_LED.oneBit.Massage && (outputPwmCount <= massageIntensity)){
  4294  057C  1DFB               	btfss	_Key_LED,3
  4295  057D  2D85               	goto	i1l1900
  4296  057E  0855               	movf	_outputPwmCount,w
  4297  057F  0252               	subwf	_massageIntensity,w
  4298  0580  1C03               	skipc
  4299  0581  2D85               	goto	i1l1900
  4300                           
  4301                           ;ICH-LR-HR.C: 148: LATC1 = 1;
  4302  0582  0022               	movlb	2	; select bank2
  4303  0583  148E               	bsf	14,1
  4304                           
  4305                           ;ICH-LR-HR.C: 149: }else{
  4306  0584  2D87               	goto	i1l1901
  4307  0585                     i1l1900:	
  4308                           
  4309                           ;ICH-LR-HR.C: 150: LATC1 = 0;
  4310  0585  0022               	movlb	2	; select bank2
  4311  0586  108E               	bcf	14,1
  4312  0587                     i1l1901:	
  4313                           
  4314                           ;ICH-LR-HR.C: 151: }
  4315                           ;ICH-LR-HR.C: 155: if(Key_LED.oneBit.Heat && !(LATA7 || LATA6) && (heatPwmCount <= heatI
      +                          ntensity)){
  4316  0587  197B               	btfsc	_Key_LED,2
  4317  0588  1B8C               	btfsc	12,7
  4318  0589  2DA0               	goto	i1l1902
  4319  058A  1B0C               	btfsc	12,6
  4320  058B  2DA0               	goto	i1l1902
  4321  058C  0020               	movlb	0	; select bank0
  4322  058D  083B               	movf	_heatPwmCount+3,w
  4323  058E  0237               	subwf	_heatIntensity+3,w
  4324  058F  1D03               	skipz
  4325  0590  2D9B               	goto	u119_25
  4326  0591  083A               	movf	_heatPwmCount+2,w
  4327  0592  0236               	subwf	_heatIntensity+2,w
  4328  0593  1D03               	skipz
  4329  0594  2D9B               	goto	u119_25
  4330  0595  0839               	movf	_heatPwmCount+1,w
  4331  0596  0235               	subwf	_heatIntensity+1,w
  4332  0597  1D03               	skipz
  4333  0598  2D9B               	goto	u119_25
  4334  0599  0838               	movf	_heatPwmCount,w
  4335  059A  0234               	subwf	_heatIntensity,w
  4336  059B                     u119_25:	
  4337  059B  1C03               	skipc
  4338  059C  2DA0               	goto	i1l1902
  4339                           
  4340                           ;ICH-LR-HR.C: 156: LATC0 = 1;
  4341  059D  0022               	movlb	2	; select bank2
  4342  059E  140E               	bsf	14,0
  4343                           
  4344                           ;ICH-LR-HR.C: 157: }else{
  4345  059F  2DA2               	goto	i1l1903
  4346  05A0                     i1l1902:	
  4347                           
  4348                           ;ICH-LR-HR.C: 158: LATC0 = 0;
  4349  05A0  0022               	movlb	2	; select bank2
  4350  05A1  100E               	bcf	14,0
  4351  05A2                     i1l1903:	
  4352                           
  4353                           ;ICH-LR-HR.C: 159: }
  4354                           ;ICH-LR-HR.C: 162: if (Key_LED.oneBit.PROpen){
  4355  05A2  1C7B               	btfss	_Key_LED,0
  4356  05A3  2DB2               	goto	i1l1905
  4357                           
  4358                           ;ICH-LR-HR.C: 163: LATA6 = 0;
  4359  05A4  130C               	bcf	12,6
  4360                           
  4361                           ;ICH-LR-HR.C: 164: if(!prOpenDelay){
  4362  05A5  0020               	movlb	0	; select bank0
  4363  05A6  0849               	movf	_prOpenDelay+1,w
  4364  05A7  0448               	iorwf	_prOpenDelay,w
  4365  05A8  1D03               	skipz
  4366  05A9  2DB2               	goto	i1l1905
  4367                           
  4368                           ;ICH-LR-HR.C: 165: LATA7 = 1;
  4369  05AA  0022               	movlb	2	; select bank2
  4370  05AB  30E8               	movlw	232
  4371  05AC  178C               	bsf	12,7
  4372                           
  4373                           ;ICH-LR-HR.C: 166: prCloseDelay = 10050/8;
  4374  05AD  0020               	movlb	0	; select bank0
  4375  05AE  00C6               	movwf	_prCloseDelay
  4376  05AF  3004               	movlw	4
  4377  05B0  00C7               	movwf	_prCloseDelay+1
  4378                           
  4379                           ;ICH-LR-HR.C: 167: }else{
  4380  05B1  2DB4               	goto	i1l1907
  4381  05B2                     i1l1905:	
  4382                           
  4383                           ;ICH-LR-HR.C: 168: LATA7 = 0;
  4384  05B2  0022               	movlb	2	; select bank2
  4385  05B3  138C               	bcf	12,7
  4386  05B4                     i1l1907:	
  4387                           
  4388                           ;ICH-LR-HR.C: 172: }
  4389                           ;ICH-LR-HR.C: 175: if (Key_LED.oneBit.PRClose){
  4390  05B4  1CFB               	btfss	_Key_LED,1
  4391  05B5  2DC5               	goto	i1l1909
  4392                           
  4393                           ;ICH-LR-HR.C: 176: LATA7 = 0;
  4394  05B6  0022               	movlb	2	; select bank2
  4395  05B7  138C               	bcf	12,7
  4396                           
  4397                           ;ICH-LR-HR.C: 177: if(!prCloseDelay){
  4398  05B8  0020               	movlb	0	; select bank0
  4399  05B9  0847               	movf	_prCloseDelay+1,w
  4400  05BA  0446               	iorwf	_prCloseDelay,w
  4401  05BB  1D03               	skipz
  4402  05BC  2DC5               	goto	i1l1909
  4403                           
  4404                           ;ICH-LR-HR.C: 178: LATA6 = 1;
  4405  05BD  0022               	movlb	2	; select bank2
  4406  05BE  30E8               	movlw	232
  4407  05BF  170C               	bsf	12,6
  4408                           
  4409                           ;ICH-LR-HR.C: 179: prOpenDelay = 10050/8;
  4410  05C0  0020               	movlb	0	; select bank0
  4411  05C1  00C8               	movwf	_prOpenDelay
  4412  05C2  3004               	movlw	4
  4413  05C3  00C9               	movwf	_prOpenDelay+1
  4414                           
  4415                           ;ICH-LR-HR.C: 180: }else{
  4416  05C4  2DC7               	goto	i1l1911
  4417  05C5                     i1l1909:	
  4418                           
  4419                           ;ICH-LR-HR.C: 181: LATA6 = 0;
  4420  05C5  0022               	movlb	2	; select bank2
  4421  05C6  130C               	bcf	12,6
  4422  05C7                     i1l1911:	
  4423                           
  4424                           ;ICH-LR-HR.C: 186: }
  4425                           ;ICH-LR-HR.C: 191: if (Key_LED.oneBit.Light){
  4426  05C7  1E7B               	btfss	_Key_LED,4
  4427  05C8  2DCC               	goto	i1l1912
  4428                           
  4429                           ;ICH-LR-HR.C: 192: LATC2 = 1;
  4430  05C9  0022               	movlb	2	; select bank2
  4431  05CA  150E               	bsf	14,2
  4432                           
  4433                           ;ICH-LR-HR.C: 193: }else{
  4434  05CB  0008               	return
  4435  05CC                     i1l1912:	
  4436                           
  4437                           ;ICH-LR-HR.C: 194: LATC2 = 0;
  4438  05CC  0022               	movlb	2	; select bank2
  4439  05CD  110E               	bcf	14,2
  4440  05CE  0008               	return
  4441  05CF                     __end_of_IchOutputs:	
  4442                           
  4443 ;; =============== function _IchOutputs ends ============
  4444  0014                     
  4445                           	psect	functab
  4446  0100                     __pfunctab:	
  4447  0100                     fptable:	
  4448  0100  2900               	goto	fptable	;no entries
  4449  0101                     i1fptable:	
  4450  0101  3181               	movlp	high i1fptable
  4451  0102  0782               	addwf	2,f
  4452  0103                     i1fpbase:	
  4453  0103  2903               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
  4454  0104                     fp__mTouch_ScanA_4:	
  4455  0104  3187  2F48         	ljmp	_mTouch_ScanA_4
  4456  0106                     fp__mTouch_ScanA_0:	
  4457  0106  3187  2F27         	ljmp	_mTouch_ScanA_0
  4458  0108                     fp__mTouch_ScanA_1:	
  4459  0108  3187  2F06         	ljmp	_mTouch_ScanA_1
  4460  010A                     fp__mTouch_ScanA_2:	
  4461  010A  3186  2EE5         	ljmp	_mTouch_ScanA_2
  4462  010C                     fp__mTouch_ScanA_3:	
  4463  010C  3186  2EC4         	ljmp	_mTouch_ScanA_3
  4464  010E                     fp__mTouch_ScanB_4:	
  4465  010E  3186  2EA3         	ljmp	_mTouch_ScanB_4
  4466  0110                     fp__mTouch_ScanB_0:	
  4467  0110  3186  2E82         	ljmp	_mTouch_ScanB_0
  4468  0112                     fp__mTouch_ScanB_1:	
  4469  0112  3186  2E61         	ljmp	_mTouch_ScanB_1
  4470  0114                     fp__mTouch_ScanB_2:	
  4471  0114  3186  2E40         	ljmp	_mTouch_ScanB_2
  4472  0116                     fp__mTouch_ScanB_3:	
  4473  0116  3186  2E1F         	ljmp	_mTouch_ScanB_3
  4474  007E                     btemp	set	126	;btemp
  4475  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Mar 08 14:19:24 2021

                                 pc 0002                      ___bmul@product 0057  
        __size_of_mTouch_StoreScanA 000C          __size_of_mTouch_StoreScanB 000E  
              _mTouch_WaitForGoDone 04AD                                 LATB 010D  
                               TMR0 0015                                 _ISR 0004  
                               wreg 0009                   _mTouch_sensorData 002A  
                              INDF0 0000                                INDF1 0001  
                              FSR0H 0005                                FSR1H 0007  
                              FSR0L 0004                                FSR1L 0006  
                              ?_ISR 0070                                l1862 0178  
                              l1863 0180                                l1880 01BA  
                              l1872 01B9                                l1864 0192  
                              l1881 01E2                                l1865 0187  
                              l1890 01E3                                l1891 01F7  
                              l1867 0189                                l1868 0190  
                              TRISB 008D                                l9200 0000  
                              l9206 0386                                l9224 02C6  
                              l9194 0000                                _T0IF 005A  
                              u1735 03AF                                u1815 02F8  
                              u1765 03D4                                u1795 02B1  
                              _main 0130                                fsr0h 0005  
                              fsr1h 0007                                fsr0l 0004  
                              indf0 0000                                indf1 0001  
                              fsr1l 0006                                btemp 007E  
                              start 0066                     __end_of_IchLeds 061F  
             ??i1_mTouch_ChangeMode 0070          ?_mTouch_ButtonStateMachine 0070  
                 ___bmul@multiplier 0058                          _IchOutputs 055B  
                             ADCON0 009D                               ??_ISR 0079  
             ?_mTouch_WaitForGoDone 0070                               l11124 0000  
                             l20311 0158                               l20313 0161  
                             l20322 0000                               l20315 016A  
                             l20307 0146                               l22012 0000  
                             l20309 014F                               l23213 0000  
                             l23221 01B1                               l23205 0000  
                             l23231 0000                               l23215 01A6  
                             l23207 0000                               l23241 01CF  
                             l23233 0000                               l23217 01AA  
                             l23209 0000                               l23243 01D2  
                             l23227 0000                               l23331 0000  
                             l23253 0000                               l23237 0000  
                             l23229 0000                               l23181 0000  
                             l23255 0000                               l23239 01CB  
                             l23247 01D7                               l23183 0000  
                             l23257 01F9                               l23329 0000  
                             l23179 0000                               l23451 0000  
                             l23603 03A3                               l23461 0000  
                             l23453 0000                               l23525 0000  
                             l23517 0000                               l23621 0000  
                             l23613 0000                               l23701 0000  
                             l23471 0000                               l23463 0000  
                             l23455 0000                               l23527 0000  
                             l23519 033C                               l23615 0398  
                             l23607 03A4                               l23711 0000  
                             l23703 0000                               l23465 0000  
                             l23457 0000                               l23449 0000  
                             l23561 0000                               l23553 0000  
                             l23633 0000                               l23641 03CA  
                             l23617 039A                               l23713 013A  
                             l23705 0000                               l23467 0000  
                             l23459 0000                               l23571 0000  
                             l23563 0000                               l23635 0000  
                             l23731 0159                               l23723 0147  
                             l23707 0000                               l23469 0000  
                             l23581 0000                               l23573 0000  
                             l23565 0000                               l23637 0000  
                             l23629 03BA                               l23717 0000  
                             l23709 0000                               l23583 0000  
                             l23575 0000                               l23567 0000  
                             l23559 022C                               l23591 0000  
                             l23735 0162                               l23727 0150  
                             l23719 0000                               l23585 0000  
                             l23577 0000                               l23569 0000  
                             l23593 0000                               l23681 0000  
                             l23665 0000                               l23587 0000  
                             l23579 0000                               l23659 03ED  
                             l23595 0000                               l23683 0000  
                             l23675 0000                               l23667 0000  
                             l23739 016B                               l23589 0000  
                             l23693 0352                               l23685 0000  
                             l23599 037C                               l23695 0000  
                             l23687 0000                               l23689 034B  
                             l23699 0000                               STATUS 0003  
                             ?_main 0070                               _T2CON 001C  
                             _LATC0 0870                               _LATC1 0871  
                             _LATC2 0872                               _LATA6 0866  
                             _LATC3 0873                               _LATA7 0867  
                             _LATC4 0874                               _LATC5 0875  
                             _LATB7 086F                               _LATC6 0876  
                             _PORTA 000C                               _PORTB 000D  
                             _PORTC 000E                               _PORTE 0010  
                             _TRISA 008C                               _TRISB 008D  
                             _TRISC 008E                               _TRISE 0090  
                             fpbase 0000                      __pbitbssCOMMON 03D0  
                        _KeyExecute 016E                               wtemp0 007E  
          ?_mTouch_DecimationFilter 0070                     _flag_led_enable 03D1  
                      __end_of_main 016E                              ??_main 0062  
              __size_of_mTouch_Init 005C                              _ADRESH 009C  
                            _ADRESL 009B                __size_of_mTouch_Scan 0050  
                            _ANSELA 018C                              _ANSELB 018D  
                            u112_25 0571                              i1l1900 0585  
                            i1l1901 0587                              i1l1902 05A0  
                            i1l1911 05C7                              i1l1903 05A2  
                            i1l1912 05CC                              i1l1920 05FE  
                            u130_20 05EE                              i1l1905 05B2  
                            i1l1922 05FC                              i1l1907 05B4  
                            i1l1931 0616                              i1l1923 0604  
                            u130_24 05E9                              i1l1909 05C5  
                            i1l1925 0602                              i1l1934 061C  
                            i1l1926 060E                              i1l1918 05F8  
                            i1l1928 060C                              u131_20 05F5  
                            i1l1929 0618                              u131_24 05F0  
                            u150_25 04EB             _mTouch_releaseThreshold 0074  
                            u119_25 059B                              u128_20 05E0  
                            u152_25 0504                              u129_20 05E7  
                            u129_24 05E2                              u153_25 0533  
                       _LedPwmCount 007C                           ??_IchLeds 0070  
                            _OSCCON 0099                              _TMR0IE 005D  
                            _TMR0IF 005A                              _TMR2IE 0489  
                            _TMR2IF 0089                              ___bmul 033A  
                       ?_IchOutputs 0070              ??_mTouch_WaitForGoDone 0070  
                            clrloop 076A                              fptable 0100  
    __size_of_mTouch_UpdateBaseline 00B5       __end_of_mTouch_UpdateBaseline 033A  
                            fptotal 0000                         ?_KeyExecute 0070  
                  _massageIntensity 0052                 ___bmul@multiplicand 0056  
                    __pcstackCOMMON 0070                        __pidataBANK0 0000  
       __end_of_Example_System_Init 0229                 __size_of_IchOutputs 0074  
            mTouch_Init@sensorIndex 005A                          __pbssBANK0 0020  
                        __pbssBANK1 00A0               __end_of_mTouch_Decode 035B  
                        __pmaintext 0130         ??_mTouch_ButtonStateMachine 0059  
                           ?___bmul 0056                          __pintentry 0004  
                        _flag_light 03D2                 __size_of_KeyExecute 00A3  
                           i1l11110 04B0                             i1l11121 0000  
                           i1l11130 0000                             i1l11107 0000  
                           i1l11131 0000                             i1l11124 0000  
                           i1l11141 0000                             i1l11118 0000  
                           i1l11142 0000                             i1l11134 0000  
                           i1l11150 0000                             i1l11127 0000  
                           i1l11143 0000                             i1l11135 0000  
                           i1l11151 0000                             i1l11128 0000  
                           i1l11144 0000                             i1l11136 0000  
                           i1l11152 0000                             i1l11129 0000  
                           i1l11145 0000                             i1l11137 0000  
                           i1l11170 0000                             i1l11138 0000  
                           i1l11162 0000                             i1l11155 0000  
                           i1l11171 0000                             i1l11163 0000  
                           i1l11156 0000                             i1l11172 0000  
                           i1l11148 0000                             i1l11164 0000  
                           i1l11180 0000                             i1l11157 0000  
                           i1l11173 0000                             i1l11149 0000  
                           i1l11165 0000                             i1l11158 0000  
                           i1l11190 0000                             i1l11166 0000  
                           i1l11183 0000                             i1l11159 0000  
                           i1l11191 0000                             i1l11184 0000  
                           i1l11192 0000                             i1l11176 0000  
                           i1l11185 0000                             i1l11169 0000  
                           i1l11193 0000                             i1l11177 0000  
                           i1l11186 0000                             i1l11194 0000  
                           i1l11178 0000                             i1l11098 0000  
                           i1l20330 005C                             i1l11187 0000  
                           i1l11179 0000                             i1l20340 0062  
                           i1l20327 001B                             i1l20328 0023  
                           i1l20337 005B                             i1l23303 0000  
                           i1l23305 0000                             i1l23401 0000  
                           i1l23403 0000                             i1l23261 0000  
                           i1l23413 04F2                             i1l23405 0000  
                           i1l23341 0000                             i1l23333 0000  
                           i1l23501 0047                             i1l23423 050F  
                           i1l23407 0000                             i1l23431 0000  
                           i1l23351 0000                             i1l23343 0000  
                           i1l23335 0000                             i1l23265 0577  
                           i1l23425 0000                             i1l23409 0000  
                           i1l23433 0000                             i1l23441 0000  
                           i1l23361 0480                             i1l23353 0000  
                           i1l23345 0000                             i1l23337 0000  
                           i1l23505 0050                             i1l23291 0000  
                           i1l23267 0000                             i1l23259 0000  
                           i1l23427 0000                             i1l23419 050B  
                           i1l23435 0000                             i1l23443 0000  
                           i1l23371 0000                             i1l23363 0000  
                           i1l23347 0000                             i1l23339 0000  
                           i1l23515 0061                             i1l23507 0052  
                           i1l23445 0000                             i1l23429 0000  
                           i1l23437 0000                             i1l23381 0000  
                           i1l23365 0000                             i1l23357 0000  
                           i1l23373 04A1                             i1l23349 0000  
                           i1l23295 0000                             i1l23287 0000  
                           i1l23447 0000                             i1l23439 0000  
                           i1l23551 0000                             i1l23391 0000  
                           i1l23383 0000                             i1l23375 0000  
                           i1l23367 0000                             i1l23359 0000  
                           i1l23393 0000                             i1l23385 0000  
                           i1l23377 0000                             i1l23473 0000  
                           i1l23299 0000                             i1l23387 0000  
                           i1l23379 0000                             i1l23491 0000  
                           i1l23397 0000                             i1l23549 0000  
                           i1l23389 0000                             i1l23495 003C  
                           i1l23487 002C                             i1l23479 0000  
                           i1l23499 0045                  mTouch_Init@acqData 0059  
                        _led_enable 03D6                        _heatPwmCount 0038  
                        __stringtab 0069                             _IchLeds 05CF  
       __end_ofi1_mTouch_ChangeMode 054E                             i1fpbase 0103  
                    _outputPwmCount 0055                             _Key_LED 007B  
           __size_of_mTouch_ScanA_0 0021             __size_of_mTouch_ScanA_1 0021  
           __size_of_mTouch_ScanA_2 0021             __size_of_mTouch_ScanA_3 0021  
           __size_of_mTouch_ScanA_4 0021             __size_of_mTouch_ScanB_0 0021  
           __size_of_mTouch_ScanB_1 0021             __size_of_mTouch_ScanB_2 0021  
           __size_of_mTouch_ScanB_3 0021             __size_of_mTouch_ScanB_4 0021  
                 fp__mTouch_ScanA_0 0106                   fp__mTouch_ScanA_1 0108  
                 fp__mTouch_ScanA_2 010A                   fp__mTouch_ScanA_3 010C  
                 fp__mTouch_ScanB_0 0110                   fp__mTouch_ScanA_4 0104  
                 fp__mTouch_ScanB_1 0112                   fp__mTouch_ScanB_2 0114  
                 fp__mTouch_ScanB_3 0116                   fp__mTouch_ScanB_4 010E  
                      _mTouch_ScanA 007E                        _mTouch_ScanB 0083  
                      _flag_massage 03D3                        _flag_pr_open 03D5  
                   __size_of___bmul 000C                          _lightTimer 0040  
                      _mTouch_state 0051                        __size_of_ISR 0062  
  __size_of_mTouch_DecimationFilter 0077           _mTouch_ButtonStateMachine 0361  
              end_of_initialization 012E        mTouch_UpdateBaseline@reading 0060  
                      ??_IchOutputs 0070                          mTouch_Scan 045D  
                     ??_mTouch_Init 0059                       ??_mTouch_Scan 0077  
                  _heatLedIntensity 004D                  __end_of_IchOutputs 05CF  
                      ??_KeyExecute 0056                    _mTouch_stateVars 00A0  
             _mTouch_currentAcqData 007D                      __end_of___bmul 0346  
     __size_of_mTouch_WaitForGoDone 000A                  __end_of_KeyExecute 0211  
               start_initialization 0118                         __end_of_ISR 0066  
             _mTouch_UpdateBaseline 0285                           _Key_state 004C  
               __end_of_mTouch_Init 0285                 __end_of_mTouch_Scan 04AD  
                    _mTouch_ScanA_0 0727                      _mTouch_ScanA_1 0706  
                    _mTouch_ScanA_2 06E5                      _mTouch_ScanA_3 06C4  
                    _mTouch_ScanB_0 0682                      _mTouch_ScanA_4 0748  
                    _mTouch_ScanB_1 0661                      _mTouch_ScanB_2 0640  
                    _mTouch_ScanB_3 061F                      _mTouch_ScanB_4 06A3  
                 _mTouch_ChangeMode 035B                            ??___bmul 0057  
                    _mTouch_acqData 00BA                  ?_mTouch_ChangeMode 0070  
                       __pdataBANK0 0063                      _mTouch_average 0020  
           _mTouch_DecimationFilter 04D1                 ??_mTouch_ChangeMode 0056  
                       __pbssCOMMON 007B                       __pcstackBANK0 0056  
                      _prCloseDelay 0046                        _massageTimer 0044  
                      _massageState 0054              __end_of_mTouch_ScanA_0 0748  
            __end_of_mTouch_ScanA_1 0727              __end_of_mTouch_ScanA_2 0706  
            __end_of_mTouch_ScanA_3 06E5              __end_of_mTouch_ScanA_4 0769  
            __end_of_mTouch_ScanB_0 06A3              __end_of_mTouch_ScanB_1 0682  
            __end_of_mTouch_ScanB_2 0661              __end_of_mTouch_ScanB_3 0640  
            __end_of_mTouch_ScanB_4 06C4                            ?_IchLeds 0070  
__size_of_mTouch_ButtonStateMachine 0099        __size_of_Example_System_Init 0018  
         __end_of_mTouch_ChangeMode 0361                           __pfunctab 0100  
                         _heatTimer 003C                           _heatState 004E  
                         _flag_heat 03D0                           __ptext600 045D  
                         __ptext601 0548                           __ptext610 0727  
                         __ptext602 061F                           __ptext611 0748  
                         __ptext603 0640                           __ptext612 04D1  
                         __ptext604 0661                           __ptext613 04C3  
                         __ptext605 0682                           __ptext614 04B7  
                         __ptext606 06A3                           __ptext615 04AD  
                         __ptext607 06C4                           __ptext616 05CF  
                         __ptext608 06E5                           __ptext617 055B  
                         __ptext609 0706                           __ptext591 0346  
                         __ptext592 0285                           __ptext593 0361  
                         __ptext594 0229                           __ptext595 033A  
                         __ptext596 0211                           __ptext597 035B  
                         __ptext598 016E                           __pstrings 0069  
            __size_of_mTouch_Decode 0015              ?_mTouch_UpdateBaseline 0070  
                       _mTouch_Init 0229                         _mTouch_Scan 045D  
                   ?_mTouch_ScanA_0 0070                     ?_mTouch_ScanA_1 0070  
                   ?_mTouch_ScanA_2 0070                     ?_mTouch_ScanA_3 0070  
                   ?_mTouch_ScanB_0 0070                     ?_mTouch_ScanA_4 0070  
                   ?_mTouch_ScanB_1 0070                     ?_mTouch_ScanB_2 0070  
                   ?_mTouch_ScanB_3 0070                     ?_mTouch_ScanB_4 0070  
             _mTouch_pressThreshold 006A                 _massageLedIntensity 0053  
 __end_of_mTouch_ButtonStateMachine 03FA                       _heatIntensity 0034  
      __size_ofi1_mTouch_ChangeMode 0006                            _GO_nDONE 04E9  
         ??_mTouch_DecimationFilter 0070       mTouch_DecimationFilter@result 0075  
                        _ADCON1bits 009E                            i1fptable 0101  
                          i1fptotal 0014                    __size_of_IchLeds 0050  
                     _mTouch_Decode 0346          __size_of_mTouch_ChangeMode 0006  
                     _flag_pr_close 03D4                       _mTouch_jitter 0063  
                 _mTouch_StoreScanA 04B7                   _mTouch_StoreScanB 04C3  
                ?_mTouch_StoreScanA 0070                  ?_mTouch_StoreScanB 0070  
                          _ledTimer 003E                 ??_mTouch_StoreScanA 0070  
               ??_mTouch_StoreScanB 0070        __end_of_mTouch_WaitForGoDone 04B7  
   __end_of_mTouch_DecimationFilter 0548                      ?_mTouch_Decode 0070  
                     __size_of_main 003E                         _prOpenDelay 0048  
                          clear_ram 0769           __end_of_mTouch_StoreScanA 04C3  
         __end_of_mTouch_StoreScanB 04D1                   _mTouch_delayCount 0050  
                       _secondTimer 004A                 _Example_System_Init 0211  
                        _INTCONbits 000B     mTouch_ButtonStateMachine@sensor 005D  
                          intlevel1 0100                ?_Example_System_Init 0070  
                _mTouch_currentScan 004F      mTouch_ButtonStateMachine@delta 005B  
           ??_mTouch_UpdateBaseline 0059                          _OPTION_REG 0095  
                 _mTouch_lastResult 0042                    ??_mTouch_ScanA_0 0070  
                      ?_mTouch_Init 0070                    ??_mTouch_ScanA_1 0070  
                  ??_mTouch_ScanA_2 0070                    ??_mTouch_ScanA_3 0070  
                  ??_mTouch_ScanB_0 0070                    ??_mTouch_ScanA_4 0070  
                  ??_mTouch_ScanB_1 0070                    ??_mTouch_ScanB_2 0070  
                  ??_mTouch_ScanB_3 0070                    ??_mTouch_ScanB_4 0070  
                      ?_mTouch_Scan 0070                 i1_mTouch_ChangeMode 0548  
                   ??_mTouch_Decode 0062               ??_Example_System_Init 0056  
              ?i1_mTouch_ChangeMode 0070  
