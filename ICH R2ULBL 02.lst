

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Wed Sep 06 13:53:18 2017

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F1933
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text581,local,class=CODE,delta=2
    18                           	psect	text582,local,class=CODE,delta=2
    19                           	psect	text584,local,class=CODE,delta=2
    20                           	psect	text585,local,class=CODE,delta=2
    21                           	psect	text586,local,class=CODE,delta=2
    22                           	psect	text587,local,class=CODE,delta=2
    23                           	psect	text588,local,class=CODE,delta=2
    24                           	psect	text589,local,class=CODE,delta=2
    25                           	psect	text590,local,class=CODE,delta=2
    26                           	psect	text591,local,class=CODE,delta=2
    27                           	psect	text592,local,class=CODE,delta=2
    28                           	psect	text593,local,class=CODE,delta=2
    29                           	psect	text598,local,class=CODE,delta=2
    30                           	psect	functab,global,reloc=256,class=CODE,delta=2
    31                           	psect	pa_nodes,global,class=CODE,delta=2
    32                           	dabs	1,0x7E,2
    33  000A                     	;#
    34                           
    35                           	psect	config
    36  8007  C80C               	dw	51212	;#
    37  8008  DBFF               	dw	56319	;#
    38  0000                     	;#
    39  0001                     	;#
    40  0002                     	;#
    41  0003                     	;#
    42  0004                     	;#
    43  0005                     	;#
    44  0006                     	;#
    45  0007                     	;#
    46  0008                     	;#
    47  0009                     	;#
    48  000A                     	;#
    49  000B                     	;#
    50  000C                     	;#
    51  000D                     	;#
    52  000E                     	;#
    53  0010                     	;#
    54  0011                     	;#
    55  0012                     	;#
    56  0013                     	;#
    57  0015                     	;#
    58  0016                     	;#
    59  0017                     	;#
    60  0018                     	;#
    61  0019                     	;#
    62  001A                     	;#
    63  001B                     	;#
    64  001C                     	;#
    65  001E                     	;#
    66  001F                     	;#
    67  008C                     	;#
    68  008D                     	;#
    69  008E                     	;#
    70  0090                     	;#
    71  0091                     	;#
    72  0092                     	;#
    73  0093                     	;#
    74  0095                     	;#
    75  0096                     	;#
    76  0097                     	;#
    77  0098                     	;#
    78  0099                     	;#
    79  009A                     	;#
    80  009B                     	;#
    81  009C                     	;#
    82  009D                     	;#
    83  009E                     	;#
    84  010C                     	;#
    85  010D                     	;#
    86  010E                     	;#
    87  0110                     	;#
    88  0111                     	;#
    89  0112                     	;#
    90  0113                     	;#
    91  0114                     	;#
    92  0115                     	;#
    93  0116                     	;#
    94  0117                     	;#
    95  0118                     	;#
    96  0119                     	;#
    97  011A                     	;#
    98  011B                     	;#
    99  011D                     	;#
   100  018C                     	;#
   101  018D                     	;#
   102  0191                     	;#
   103  0192                     	;#
   104  0193                     	;#
   105  0193                     	;#
   106  0194                     	;#
   107  0195                     	;#
   108  0196                     	;#
   109  0199                     	;#
   110  019A                     	;#
   111  019B                     	;#
   112  019B                     	;#
   113  019C                     	;#
   114  019D                     	;#
   115  019E                     	;#
   116  019F                     	;#
   117  020D                     	;#
   118  0210                     	;#
   119  0211                     	;#
   120  0212                     	;#
   121  0213                     	;#
   122  0214                     	;#
   123  0215                     	;#
   124  0215                     	;#
   125  0216                     	;#
   126  0217                     	;#
   127  0291                     	;#
   128  0292                     	;#
   129  0293                     	;#
   130  0294                     	;#
   131  0295                     	;#
   132  0295                     	;#
   133  0296                     	;#
   134  0298                     	;#
   135  0299                     	;#
   136  029A                     	;#
   137  029B                     	;#
   138  029C                     	;#
   139  029C                     	;#
   140  029D                     	;#
   141  029E                     	;#
   142  029F                     	;#
   143  0311                     	;#
   144  0312                     	;#
   145  0313                     	;#
   146  0314                     	;#
   147  0315                     	;#
   148  0315                     	;#
   149  0316                     	;#
   150  0318                     	;#
   151  0319                     	;#
   152  031A                     	;#
   153  031C                     	;#
   154  031D                     	;#
   155  031E                     	;#
   156  0394                     	;#
   157  0395                     	;#
   158  0396                     	;#
   159  0415                     	;#
   160  0416                     	;#
   161  0417                     	;#
   162  041C                     	;#
   163  041D                     	;#
   164  041E                     	;#
   165  0791                     	;#
   166  0792                     	;#
   167  0793                     	;#
   168  0794                     	;#
   169  0795                     	;#
   170  0798                     	;#
   171  0799                     	;#
   172  07A0                     	;#
   173  07A1                     	;#
   174  07A3                     	;#
   175  07A4                     	;#
   176  07A6                     	;#
   177  07A7                     	;#
   178  07A9                     	;#
   179  07AA                     	;#
   180  0FE4                     	;#
   181  0FE5                     	;#
   182  0FE6                     	;#
   183  0FE7                     	;#
   184  0FE8                     	;#
   185  0FE9                     	;#
   186  0FEA                     	;#
   187  0FEB                     	;#
   188  0FED                     	;#
   189  0FEE                     	;#
   190  0FEF                     	;#
   191                           
   192                           	psect	idataBANK0
   193  0000                     __pidataBANK0:	
   194                           
   195                           	psect	strings
   196  001F                     __pstrings:	
   197  001F                     __stringtab:	
   198  001F  3400               	retlw	0
   199  0020                     _mTouch_pressThreshold:	
   200  0020  342C               	retlw	44
   201  0021  3401               	retlw	1
   202  0022  342C               	retlw	44
   203  0023  3401               	retlw	1
   204  0024  342C               	retlw	44
   205  0025  3401               	retlw	1
   206  0026  342C               	retlw	44
   207  0027  3401               	retlw	1
   208  0028  342C               	retlw	44
   209  0029  3401               	retlw	1
   210  002A                     _mTouch_releaseThreshold:	
   211  002A  34B4               	retlw	180
   212  002B  3400               	retlw	0
   213  002C  34B4               	retlw	180
   214  002D  3400               	retlw	0
   215  002E  34B4               	retlw	180
   216  002F  3400               	retlw	0
   217  0030  34B4               	retlw	180
   218  0031  3400               	retlw	0
   219  0032  34B4               	retlw	180
   220  0033  3400               	retlw	0
   221  0034                     _mTouch_ScanA:	
   222  0034  3403               	retlw	(fp__mTouch_ScanA_0-i1fpbase)& (0+255)
   223  0035  3405               	retlw	(fp__mTouch_ScanA_1-i1fpbase)& (0+255)
   224  0036  3407               	retlw	(fp__mTouch_ScanA_2-i1fpbase)& (0+255)
   225  0037  3409               	retlw	(fp__mTouch_ScanA_3-i1fpbase)& (0+255)
   226  0038  3401               	retlw	(fp__mTouch_ScanA_4-i1fpbase)& (0+255)
   227  0039                     _mTouch_ScanB:	
   228  0039  340D               	retlw	(fp__mTouch_ScanB_0-i1fpbase)& (0+255)
   229  003A  340F               	retlw	(fp__mTouch_ScanB_1-i1fpbase)& (0+255)
   230  003B  3411               	retlw	(fp__mTouch_ScanB_2-i1fpbase)& (0+255)
   231  003C  3413               	retlw	(fp__mTouch_ScanB_3-i1fpbase)& (0+255)
   232  003D  340B               	retlw	(fp__mTouch_ScanB_4-i1fpbase)& (0+255)
   233  000B                     _INTCONbits	set	11
   234  000C                     _PORTA	set	12
   235  000D                     _PORTB	set	13
   236  000E                     _PORTC	set	14
   237  0010                     _PORTE	set	16
   238  001C                     _T2CON	set	28
   239  005A                     _T0IF	set	90
   240  005D                     _TMR0IE	set	93
   241  005A                     _TMR0IF	set	90
   242  0089                     _TMR2IF	set	137
   243  009E                     _ADCON1bits	set	158
   244  009C                     _ADRESH	set	156
   245  009B                     _ADRESL	set	155
   246  0095                     _OPTION_REG	set	149
   247  0099                     _OSCCON	set	153
   248  008C                     _TRISA	set	140
   249  008D                     _TRISB	set	141
   250  008E                     _TRISC	set	142
   251  0090                     _TRISE	set	144
   252  04E9                     _GO_nDONE	set	1257
   253  0489                     _TMR2IE	set	1161
   254  0866                     _LATA6	set	2150
   255  0867                     _LATA7	set	2151
   256  086F                     _LATB7	set	2159
   257  0870                     _LATC0	set	2160
   258  0871                     _LATC1	set	2161
   259  0872                     _LATC2	set	2162
   260  0873                     _LATC3	set	2163
   261  0874                     _LATC4	set	2164
   262  0875                     _LATC5	set	2165
   263  0876                     _LATC6	set	2166
   264  018C                     _ANSELA	set	396
   265  018D                     _ANSELB	set	397
   266                           
   267                           	psect	cinit
   268  0118                     start_initialization:	
   269  0118  3020               	movlw	low __pbssBANK0
   270                           
   271                           ; Clear objects allocated to BITCOMMON
   272  0119  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   273                           
   274                           ; Clear objects allocated to COMMON
   275  011A  01FB               	clrf	__pbssCOMMON& (0+127)
   276  011B  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   277  011C  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   278                           
   279                           ; Clear objects allocated to BANK0
   280  011D  0084               	movwf	4
   281  011E  3000               	movlw	high __pbssBANK0
   282  011F  0085               	movwf	5
   283  0120  3038               	movlw	56
   284  0121  3187  2786  3181   	fcall	clear_ram
   285                           
   286                           ; Clear objects allocated to BANK1
   287  0124  30A0               	movlw	low __pbssBANK1
   288  0125  0084               	movwf	4
   289  0126  3000               	movlw	high __pbssBANK1
   290  0127  0085               	movwf	5
   291  0128  3014               	movlw	20
   292  0129  3187  2786  3181   	fcall	clear_ram
   293                           
   294                           ;initializer for _mTouch_jitter
   295  012C  3055               	movlw	85
   296  012D  00E5               	movwf	__pdataBANK0& (0+127)
   297  012E                     end_of_initialization:	
   298                           ;End of C runtime variable initialization code
   299                           
   300  012E  0020               	movlb	0
   301  012F  2930               	ljmp	_main	;jump to C main() function
   302  0130                     __pmaintext:	
   303 ;;Data sizes: Strings 0, constant 30, data 1, bss 79, persistent 0 stack 0
   304 ;;Auto spaces:   Size  Autos    Used
   305 ;; COMMON          14     10      14
   306 ;; BANK0           80     13      70
   307 ;; BANK1           80      0      20
   308 ;; BANK2           80      0       0
   309 ;;
   310 ;; Pointer list with targets:
   311 ;; mTouch_currentAcqData	PTR struct . size(1) Largest target is 20
   312 ;;		 -> NULL(NULL[0]), mTouch_acqData(BANK1[20]), 
   313 ;;
   314 ;; mTouch_ScanB	const PTR FTN()void [5] size(1) Largest target is 0
   315 ;;		 -> mTouch_ScanB_4(), mTouch_ScanB_3(), mTouch_ScanB_2(), mTouch_ScanB_1(), 
   316 ;;		 -> mTouch_ScanB_0(), 
   317 ;;
   318 ;; mTouch_ScanA	const PTR FTN()void [5] size(1) Largest target is 0
   319 ;;		 -> mTouch_ScanA_4(), mTouch_ScanA_3(), mTouch_ScanA_2(), mTouch_ScanA_1(), 
   320 ;;		 -> mTouch_ScanA_0(), 
   321 ;;
   322 ;; mTouch_ButtonStateMachine@sensor	PTR struct . size(1) Largest target is 26
   323 ;;		 -> mTouch_stateVars(BANK0[26]), 
   324 ;;
   325 ;; mTouch_Init@acqData	PTR struct . size(1) Largest target is 20
   326 ;;		 -> mTouch_acqData(BANK1[20]), 
   327 ;;
   328 ;;
   329 ;; Critical Paths under _main in COMMON
   330 ;;
   331 ;;   None.
   332 ;;
   333 ;; Critical Paths under _ISR in COMMON
   334 ;;
   335 ;;   _ISR->_mTouch_Scan
   336 ;;   _mTouch_Scan->_mTouch_DecimationFilter
   337 ;;
   338 ;; Critical Paths under _main in BANK0
   339 ;;
   340 ;;   _mTouch_Decode->_mTouch_UpdateBaseline
   341 ;;   _mTouch_UpdateBaseline->___bmul
   342 ;;   _mTouch_ButtonStateMachine->___bmul
   343 ;;   _mTouch_Init->___bmul
   344 ;;
   345 ;; Critical Paths under _ISR in BANK0
   346 ;;
   347 ;;   None.
   348 ;;
   349 ;; Critical Paths under _main in BANK1
   350 ;;
   351 ;;   None.
   352 ;;
   353 ;; Critical Paths under _ISR in BANK1
   354 ;;
   355 ;;   None.
   356 ;;
   357 ;; Critical Paths under _main in BANK2
   358 ;;
   359 ;;   None.
   360 ;;
   361 ;; Critical Paths under _ISR in BANK2
   362 ;;
   363 ;;   None.
   364 ;;
   365 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   366 ;;
   367 ;;
   368 ;;Call Graph Tables:
   369 ;;
   370 ;; ---------------------------------------------------------------------------------
   371 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   372 ;; ---------------------------------------------------------------------------------
   373 ;; (0) _main                                                 1     1      0    1120
   374 ;;                                             12 BANK0      1     1      0
   375 ;;                _Example_System_Init
   376 ;;                        _mTouch_Init
   377 ;;                      _mTouch_Decode
   378 ;;                        _key_execute
   379 ;; ---------------------------------------------------------------------------------
   380 ;; (1) _mTouch_Decode                                        0     0      0     738
   381 ;;          _mTouch_ButtonStateMachine
   382 ;;              _mTouch_UpdateBaseline
   383 ;;                  _mTouch_ChangeMode
   384 ;; ---------------------------------------------------------------------------------
   385 ;; (2) _mTouch_UpdateBaseline                                9     9      0     159
   386 ;;                                              3 BANK0      9     9      0
   387 ;;                             ___bmul
   388 ;; ---------------------------------------------------------------------------------
   389 ;; (2) _mTouch_ButtonStateMachine                            5     5      0     579
   390 ;;                                              3 BANK0      5     5      0
   391 ;;                             ___bmul
   392 ;; ---------------------------------------------------------------------------------
   393 ;; (1) _mTouch_Init                                          2     2      0     337
   394 ;;                                              3 BANK0      2     2      0
   395 ;;                             ___bmul
   396 ;;                  _mTouch_ChangeMode
   397 ;; ---------------------------------------------------------------------------------
   398 ;; (3) ___bmul                                               3     2      1      92
   399 ;;                                              0 BANK0      3     2      1
   400 ;; ---------------------------------------------------------------------------------
   401 ;; (2) _mTouch_ChangeMode                                    0     0      0       0
   402 ;; ---------------------------------------------------------------------------------
   403 ;; (1) _key_execute                                          7     7      0      45
   404 ;;                                              0 BANK0      7     7      0
   405 ;; ---------------------------------------------------------------------------------
   406 ;; (1) _Example_System_Init                                  0     0      0       0
   407 ;; ---------------------------------------------------------------------------------
   408 ;; Estimated maximum stack depth 3
   409 ;; ---------------------------------------------------------------------------------
   410 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   411 ;; ---------------------------------------------------------------------------------
   412 ;; (4) _ISR                                                  1     1      0      94
   413 ;;                                              9 COMMON     1     1      0
   414 ;;                         _ICH_Timers
   415 ;;                        _ICH_Outputs
   416 ;;                        _mTouch_Scan
   417 ;; ---------------------------------------------------------------------------------
   418 ;; (5) _mTouch_Scan                                          2     2      0      94
   419 ;;                                              7 COMMON     2     2      0
   420 ;;                     _mTouch_ScanA_4
   421 ;;                     _mTouch_ScanA_3
   422 ;;                     _mTouch_ScanA_2
   423 ;;                     _mTouch_ScanA_1
   424 ;;                     _mTouch_ScanA_0
   425 ;;               _mTouch_WaitForGoDone
   426 ;;                  _mTouch_StoreScanA
   427 ;;                     _mTouch_ScanB_4
   428 ;;                     _mTouch_ScanB_3
   429 ;;                     _mTouch_ScanB_2
   430 ;;                     _mTouch_ScanB_1
   431 ;;                     _mTouch_ScanB_0
   432 ;;                  _mTouch_StoreScanB
   433 ;;            _mTouch_DecimationFilter
   434 ;;                i1_mTouch_ChangeMode
   435 ;; ---------------------------------------------------------------------------------
   436 ;; (5) _ICH_Outputs                                          0     0      0       0
   437 ;; ---------------------------------------------------------------------------------
   438 ;; (6) i1_mTouch_ChangeMode                                  0     0      0       0
   439 ;; ---------------------------------------------------------------------------------
   440 ;; (6) _mTouch_ScanB_4                                       0     0      0       0
   441 ;; ---------------------------------------------------------------------------------
   442 ;; (6) _mTouch_ScanA_4                                       0     0      0       0
   443 ;; ---------------------------------------------------------------------------------
   444 ;; (6) _mTouch_ScanB_3                                       0     0      0       0
   445 ;; ---------------------------------------------------------------------------------
   446 ;; (6) _mTouch_ScanA_3                                       0     0      0       0
   447 ;; ---------------------------------------------------------------------------------
   448 ;; (6) _mTouch_ScanB_2                                       0     0      0       0
   449 ;; ---------------------------------------------------------------------------------
   450 ;; (6) _mTouch_ScanA_2                                       0     0      0       0
   451 ;; ---------------------------------------------------------------------------------
   452 ;; (6) _mTouch_ScanB_1                                       0     0      0       0
   453 ;; ---------------------------------------------------------------------------------
   454 ;; (6) _mTouch_ScanA_1                                       0     0      0       0
   455 ;; ---------------------------------------------------------------------------------
   456 ;; (6) _mTouch_ScanB_0                                       0     0      0       0
   457 ;; ---------------------------------------------------------------------------------
   458 ;; (6) _mTouch_ScanA_0                                       0     0      0       0
   459 ;; ---------------------------------------------------------------------------------
   460 ;; (6) _mTouch_DecimationFilter                              7     7      0      94
   461 ;;                                              0 COMMON     7     7      0
   462 ;; ---------------------------------------------------------------------------------
   463 ;; (6) _mTouch_StoreScanB                                    1     1      0       0
   464 ;;                                              0 COMMON     1     1      0
   465 ;; ---------------------------------------------------------------------------------
   466 ;; (6) _mTouch_StoreScanA                                    0     0      0       0
   467 ;; ---------------------------------------------------------------------------------
   468 ;; (6) _mTouch_WaitForGoDone                                 0     0      0       0
   469 ;; ---------------------------------------------------------------------------------
   470 ;; (5) _ICH_Timers                                           0     0      0       0
   471 ;; ---------------------------------------------------------------------------------
   472 ;; Estimated maximum stack depth 6
   473 ;; ---------------------------------------------------------------------------------
   474 ;; Call Graph Graphs:
   475 ;; _main (ROOT)
   476 ;;   _Example_System_Init
   477 ;;   _mTouch_Init
   478 ;;     ___bmul
   479 ;;     _mTouch_ChangeMode
   480 ;;   _mTouch_Decode
   481 ;;     _mTouch_ButtonStateMachine
   482 ;;       ___bmul
   483 ;;     _mTouch_UpdateBaseline
   484 ;;       ___bmul
   485 ;;     _mTouch_ChangeMode
   486 ;;   _key_execute
   487 ;;
   488 ;; _ISR (ROOT)
   489 ;;   _ICH_Timers
   490 ;;   _ICH_Outputs
   491 ;;   _mTouch_Scan
   492 ;;     _mTouch_ScanA_4
   493 ;;     _mTouch_ScanA_3
   494 ;;     _mTouch_ScanA_2
   495 ;;     _mTouch_ScanA_1
   496 ;;     _mTouch_ScanA_0
   497 ;;     _mTouch_WaitForGoDone
   498 ;;     _mTouch_StoreScanA
   499 ;;     _mTouch_ScanB_4
   500 ;;     _mTouch_ScanB_3
   501 ;;     _mTouch_ScanB_2
   502 ;;     _mTouch_ScanB_1
   503 ;;     _mTouch_ScanB_0
   504 ;;     _mTouch_StoreScanB
   505 ;;     _mTouch_DecimationFilter
   506 ;;     i1_mTouch_ChangeMode
   507 ;;
   508 ;; Address spaces:
   509 ;;Name               Size   Autos  Total    Cost      Usage
   510 ;;BIGRAM              F0      0       0       0        0.0%
   511 ;;EEDATA             100      0       0       0        0.0%
   512 ;;NULL                 0      0       0       0        0.0%
   513 ;;CODE                 0      0       0       0        0.0%
   514 ;;BITCOMMON            E      0       1       1        7.1%
   515 ;;BITSFR0              0      0       0       1        0.0%
   516 ;;SFR0                 0      0       0       1        0.0%
   517 ;;COMMON               E      A       E       2      100.0%
   518 ;;BITSFR1              0      0       0       2        0.0%
   519 ;;SFR1                 0      0       0       2        0.0%
   520 ;;BITSFR2              0      0       0       3        0.0%
   521 ;;SFR2                 0      0       0       3        0.0%
   522 ;;STACK                0      0       9       3        0.0%
   523 ;;BITSFR3              0      0       0       4        0.0%
   524 ;;SFR3                 0      0       0       4        0.0%
   525 ;;ABS                  0      0      68       4        0.0%
   526 ;;BITBANK0            50      0       0       5        0.0%
   527 ;;BITSFR4              0      0       0       5        0.0%
   528 ;;SFR4                 0      0       0       5        0.0%
   529 ;;BANK0               50      D      46       6       87.5%
   530 ;;BITSFR5              0      0       0       6        0.0%
   531 ;;SFR5                 0      0       0       6        0.0%
   532 ;;BITBANK1            50      0       0       7        0.0%
   533 ;;BITSFR6              0      0       0       7        0.0%
   534 ;;SFR6                 0      0       0       7        0.0%
   535 ;;BANK1               50      0      14       8       25.0%
   536 ;;BITSFR7              0      0       0       8        0.0%
   537 ;;SFR7                 0      0       0       8        0.0%
   538 ;;BITBANK2            50      0       0       9        0.0%
   539 ;;BITSFR8              0      0       0       9        0.0%
   540 ;;SFR8                 0      0       0       9        0.0%
   541 ;;BANK2               50      0       0      10        0.0%
   542 ;;BITSFR9              0      0       0      10        0.0%
   543 ;;SFR9                 0      0       0      10        0.0%
   544 ;;BITSFR10             0      0       0      11        0.0%
   545 ;;SFR10                0      0       0      11        0.0%
   546 ;;DATA                 0      0      71      11        0.0%
   547 ;;BITSFR11             0      0       0      12        0.0%
   548 ;;SFR11                0      0       0      12        0.0%
   549 ;;BITSFR12             0      0       0      13        0.0%
   550 ;;SFR12                0      0       0      13        0.0%
   551 ;;BITSFR13             0      0       0      14        0.0%
   552 ;;SFR13                0      0       0      14        0.0%
   553 ;;BITSFR14             0      0       0      15        0.0%
   554 ;;SFR14                0      0       0      15        0.0%
   555 ;;BITSFR15             0      0       0      16        0.0%
   556 ;;SFR15                0      0       0      16        0.0%
   557 ;;BITSFR16             0      0       0      17        0.0%
   558 ;;SFR16                0      0       0      17        0.0%
   559 ;;BITSFR17             0      0       0      18        0.0%
   560 ;;SFR17                0      0       0      18        0.0%
   561 ;;BITSFR18             0      0       0      19        0.0%
   562 ;;SFR18                0      0       0      19        0.0%
   563 ;;BITSFR19             0      0       0      20        0.0%
   564 ;;SFR19                0      0       0      20        0.0%
   565 ;;BITSFR20             0      0       0      21        0.0%
   566 ;;SFR20                0      0       0      21        0.0%
   567 ;;BITSFR21             0      0       0      22        0.0%
   568 ;;SFR21                0      0       0      22        0.0%
   569 ;;BITSFR22             0      0       0      23        0.0%
   570 ;;SFR22                0      0       0      23        0.0%
   571 ;;BITSFR23             0      0       0      24        0.0%
   572 ;;SFR23                0      0       0      24        0.0%
   573 ;;BITSFR24             0      0       0      25        0.0%
   574 ;;SFR24                0      0       0      25        0.0%
   575 ;;BITSFR25             0      0       0      26        0.0%
   576 ;;SFR25                0      0       0      26        0.0%
   577 ;;BITSFR26             0      0       0      27        0.0%
   578 ;;SFR26                0      0       0      27        0.0%
   579 ;;BITSFR27             0      0       0      28        0.0%
   580 ;;SFR27                0      0       0      28        0.0%
   581 ;;BITSFR28             0      0       0      29        0.0%
   582 ;;SFR28                0      0       0      29        0.0%
   583 ;;BITSFR29             0      0       0      30        0.0%
   584 ;;SFR29                0      0       0      30        0.0%
   585 ;;BITSFR30             0      0       0      31        0.0%
   586 ;;SFR30                0      0       0      31        0.0%
   587 ;;BITSFR31             0      0       0      32        0.0%
   588 ;;SFR31                0      0       0      32        0.0%
   589                           
   590                           
   591 ;; *************** function _main *****************
   592 ;; Defined at:
   593 ;;		line 84 in file "S:\Eng Paul Li\Sourcecode\ICH R2ULBL 02 Ver B\main.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;		None               void
   600 ;; Registers used:
   601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 17F/0
   604 ;;		On exit  : 1F/0
   605 ;;		Unchanged: FFE00/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   607 ;;      Params:         0       0       0       0
   608 ;;      Locals:         0       0       0       0
   609 ;;      Temps:          0       1       0       0
   610 ;;      Totals:         0       1       0       0
   611 ;;Total ram usage:        1 bytes
   612 ;; Hardware stack levels required when called:    6
   613 ;; This function calls:
   614 ;;		_Example_System_Init
   615 ;;		_mTouch_Init
   616 ;;		_mTouch_Decode
   617 ;;		_key_execute
   618 ;; This function is called by:
   619 ;;		Startup code after reset
   620 ;; This function uses a non-reentrant model
   621 ;;
   622  0130                     _main:	
   623                           
   624                           ;main.c: 85: Example_System_Init();
   625                           
   626                           ; Regs used in _main: [wreg-status,0+pclath+cstack]
   627  0130  2172  3181         	fcall	_Example_System_Init
   628                           
   629                           ;main.c: 96: mTouch_Init();
   630  0132  225F  3181         	fcall	_mTouch_Init
   631                           
   632                           ;main.c: 101: INTCONbits.GIE = 1;
   633  0134  178B               	bsf	11,7	;volatile
   634                           
   635                           ;main.c: 103: key = Key_state.allBits = 0;
   636  0135  0020               	movlb	0	; select bank0
   637  0136  01B9               	clrf	_Key_state
   638                           
   639                           ;main.c: 104: LED_enable = 1;
   640  0137  147A               	bsf	_LED_enable/(0+8),_LED_enable& (0+7)
   641  0138                     l23575:	
   642                           
   643                           ;main.c: 107: {
   644                           ;main.c: 109: if ((mTouch_state.dataReady))
   645  0138  1C3D               	btfss	_mTouch_state,0
   646  0139  296F               	goto	l23601
   647                           
   648                           ;main.c: 110: {
   649                           ;main.c: 111: mTouch_state.dataReady = 0; mTouch_Decode();
   650  013A  103D               	bcf	_mTouch_state,0
   651  013B  237D  3181         	fcall	_mTouch_Decode
   652                           
   653                           ;main.c: 145: if (mTouch_stateVars.sensor[4].state < MTOUCH_PRESSED)
   654  013D  0853               	movf	_mTouch_stateVars+21,w
   655  013E  3903               	andlw	3
   656  013F  00E4               	movwf	??_main
   657  0140  3002               	movlw	2
   658  0141  0264               	subwf	??_main,w
   659  0142  1803               	skipnc
   660  0143  2946               	goto	l1873
   661                           
   662                           ;main.c: 146: {
   663                           ;main.c: 147: Key_state.oneBit.Light = 0;
   664  0144  1239               	bcf	_Key_state,4
   665                           
   666                           ;main.c: 148: }
   667  0145  2947               	goto	l23585
   668  0146                     l1873:	
   669                           
   670                           ;main.c: 149: else Key_state.oneBit.Light = 1;
   671  0146  1639               	bsf	_Key_state,4
   672  0147                     l23585:	
   673                           
   674                           ;main.c: 150: if (mTouch_stateVars.sensor[3].state < MTOUCH_PRESSED)
   675  0147  084E               	movf	_mTouch_stateVars+16,w
   676  0148  3903               	andlw	3
   677  0149  00E4               	movwf	??_main
   678  014A  3002               	movlw	2
   679  014B  0264               	subwf	??_main,w
   680  014C  1803               	skipnc
   681  014D  2950               	goto	l1875
   682                           
   683                           ;main.c: 151: {
   684                           ;main.c: 152: Key_state.oneBit.HRClose = 0;
   685  014E  11B9               	bcf	_Key_state,3
   686                           
   687                           ;main.c: 153: }
   688  014F  2951               	goto	l23589
   689  0150                     l1875:	
   690                           
   691                           ;main.c: 154: else Key_state.oneBit.HRClose = 1;
   692  0150  15B9               	bsf	_Key_state,3
   693  0151                     l23589:	
   694                           
   695                           ;main.c: 155: if (mTouch_stateVars.sensor[2].state < MTOUCH_PRESSED)
   696  0151  0849               	movf	_mTouch_stateVars+11,w
   697  0152  3903               	andlw	3
   698  0153  00E4               	movwf	??_main
   699  0154  3002               	movlw	2
   700  0155  0264               	subwf	??_main,w
   701  0156  1803               	skipnc
   702  0157  295A               	goto	l1877
   703                           
   704                           ;main.c: 156: {
   705                           ;main.c: 157: Key_state.oneBit.HROpen = 0;
   706  0158  1139               	bcf	_Key_state,2
   707                           
   708                           ;main.c: 158: }
   709  0159  295B               	goto	l23593
   710  015A                     l1877:	
   711                           
   712                           ;main.c: 159: else Key_state.oneBit.HROpen = 1;
   713  015A  1539               	bsf	_Key_state,2
   714  015B                     l23593:	
   715                           
   716                           ;main.c: 160: if (mTouch_stateVars.sensor[1].state < MTOUCH_PRESSED)
   717  015B  0844               	movf	_mTouch_stateVars+6,w
   718  015C  3903               	andlw	3
   719  015D  00E4               	movwf	??_main
   720  015E  3002               	movlw	2
   721  015F  0264               	subwf	??_main,w
   722  0160  1803               	skipnc
   723  0161  2964               	goto	l1879
   724                           
   725                           ;main.c: 161: {
   726                           ;main.c: 162: Key_state.oneBit.LRClose = 0;
   727  0162  10B9               	bcf	_Key_state,1
   728                           
   729                           ;main.c: 163: }
   730  0163  2965               	goto	l23597
   731  0164                     l1879:	
   732                           
   733                           ;main.c: 164: else Key_state.oneBit.LRClose = 1;
   734  0164  14B9               	bsf	_Key_state,1
   735  0165                     l23597:	
   736                           
   737                           ;main.c: 165: if (mTouch_stateVars.sensor[0].state < MTOUCH_PRESSED)
   738  0165  083F               	movf	_mTouch_stateVars+1,w
   739  0166  3903               	andlw	3
   740  0167  00E4               	movwf	??_main
   741  0168  3002               	movlw	2
   742  0169  0264               	subwf	??_main,w
   743  016A  1803               	skipnc
   744  016B  296E               	goto	l1881
   745                           
   746                           ;main.c: 166: {
   747                           ;main.c: 167: Key_state.oneBit.LROpen = 0;
   748  016C  1039               	bcf	_Key_state,0
   749                           
   750                           ;main.c: 168: }
   751  016D  296F               	goto	l23601
   752  016E                     l1881:	
   753                           
   754                           ;main.c: 169: else Key_state.oneBit.LROpen = 1;
   755  016E  1439               	bsf	_Key_state,0
   756  016F                     l23601:	
   757                           
   758                           ;main.c: 170: }
   759                           ;main.c: 172: key_execute();
   760  016F  218A  3181         	fcall	_key_execute
   761  0171  2938               	goto	l23575
   762  0172                     __end_of_main:	
   763  0172                     __ptext579:	
   764 ;; =============== function _key_execute ends ============
   765                           
   766                           
   767 ;; *************** function _Example_System_Init *****************
   768 ;; Defined at:
   769 ;;		line 188 in file "S:\Eng Paul Li\Sourcecode\ICH R2ULBL 02 Ver B\main.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;		None
   772 ;; Auto vars:     Size  Location     Type
   773 ;;		None
   774 ;; Return value:  Size  Location     Type
   775 ;;		None               void
   776 ;; Registers used:
   777 ;;		wreg, status,2
   778 ;; Tracked objects:
   779 ;;		On entry : 17F/0
   780 ;;		On exit  : 17F/1
   781 ;;		Unchanged: FFE80/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   783 ;;      Params:         0       0       0       0
   784 ;;      Locals:         0       0       0       0
   785 ;;      Temps:          0       0       0       0
   786 ;;      Totals:         0       0       0       0
   787 ;;Total ram usage:        0 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    3
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796  0172                     _Example_System_Init:	
   797                           
   798                           ;main.c: 199: OSCCON = 0b01111000;
   799                           
   800                           ; Regs used in _Example_System_Init: [wreg+status,2]
   801  0172  3078               	movlw	120
   802  0173  0021               	movlb	1	; select bank1
   803  0174  0099               	movwf	25	;volatile
   804                           
   805                           ;main.c: 205: ANSELA = 0b00000000;
   806  0175  0023               	movlb	3	; select bank3
   807  0176  018C               	clrf	12	;volatile
   808                           
   809                           ;main.c: 206: ANSELB = 0b00000000;
   810  0177  018D               	clrf	13	;volatile
   811                           
   812                           ;main.c: 213: PORTA = 0b00000000;
   813  0178  0020               	movlb	0	; select bank0
   814  0179  018C               	clrf	12	;volatile
   815                           
   816                           ;main.c: 214: PORTB = 0b00000000;
   817  017A  018D               	clrf	13	;volatile
   818                           
   819                           ;main.c: 215: PORTC = 0b00000000;
   820  017B  018E               	clrf	14	;volatile
   821                           
   822                           ;main.c: 219: PORTE = 0b00000000;
   823  017C  0190               	clrf	16	;volatile
   824                           
   825                           ;main.c: 220: TRISA = 0b00000000;
   826  017D  0021               	movlb	1	; select bank1
   827  017E  018C               	clrf	12	;volatile
   828                           
   829                           ;main.c: 221: TRISB = 0b00000000;
   830  017F  018D               	clrf	13	;volatile
   831                           
   832                           ;main.c: 222: TRISC = 0b00000000;
   833  0180  018E               	clrf	14	;volatile
   834                           
   835                           ;main.c: 226: TRISE = 0b00000000;
   836  0181  0190               	clrf	16	;volatile
   837                           
   838                           ;main.c: 232: OPTION_REG = 0b10000000;
   839  0182  3080               	movlw	128
   840  0183  0095               	movwf	21	;volatile
   841                           
   842                           ;main.c: 234: T2CON = 0b01111111;
   843  0184  307F               	movlw	127
   844  0185  0020               	movlb	0	; select bank0
   845  0186  009C               	movwf	28	;volatile
   846                           
   847                           ;main.c: 235: TMR2IE = 1;
   848  0187  0021               	movlb	1	; select bank1
   849  0188  1491               	bsf	17,1
   850  0189  0008               	return
   851  018A                     __end_of_Example_System_Init:	
   852  018A                     __ptext578:	
   853 ;; =============== function _mTouch_ChangeMode ends ============
   854                           
   855                           
   856 ;; *************** function _key_execute *****************
   857 ;; Defined at:
   858 ;;		line 17 in file "S:\Eng Paul Li\Sourcecode\ICH R2ULBL 02 Ver B\ICH-LR-HR.C"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  a               2    5[BANK0 ] unsigned int 
   863 ;; Return value:  Size  Location     Type
   864 ;;		None               void
   865 ;; Registers used:
   866 ;;		wreg, status,2, status,0
   867 ;; Tracked objects:
   868 ;;		On entry : 1F/0
   869 ;;		On exit  : 1F/0
   870 ;;		Unchanged: FFE00/0
   871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   872 ;;      Params:         0       0       0       0
   873 ;;      Locals:         0       2       0       0
   874 ;;      Temps:          0       5       0       0
   875 ;;      Totals:         0       7       0       0
   876 ;;Total ram usage:        7 bytes
   877 ;; Hardware stack levels used:    1
   878 ;; Hardware stack levels required when called:    3
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_main
   883 ;; This function uses a non-reentrant model
   884 ;;
   885  018A                     _key_execute:	
   886                           
   887                           ;ICH-LR-HR.C: 18: if (Key_state.allBits){
   888                           
   889                           ; Regs used in _key_execute: [wreg+status,2+status,0]
   890  018A  0839               	movf	_Key_state,w
   891  018B  1903               	btfsc	3,2
   892  018C  2A2F               	goto	l23181
   893                           
   894                           ;ICH-LR-HR.C: 24: if ((Key_state.oneBit.LROpen && Key_state.oneBit.LRClose) || (Key_stat
      +                          e.oneBit.HROpen && Key_state.oneBit.HRClose) || (Key_state.oneBit.HROpen && Key_state.on
      +                          eBit.LRClose))
   895  018D  1C39               	btfss	_Key_state,0
   896  018E  2991               	goto	l20245
   897  018F  18B9               	btfsc	_Key_state,1
   898  0190  2998               	goto	l23131
   899  0191                     l20245:	
   900  0191  1D39               	btfss	_Key_state,2
   901  0192  2995               	goto	l20247
   902  0193  19B9               	btfsc	_Key_state,3
   903  0194  2998               	goto	l23131
   904  0195                     l20247:	
   905  0195  1939               	btfsc	_Key_state,2
   906  0196  1CB9               	btfss	_Key_state,1
   907  0197  29C4               	goto	l20241
   908  0198                     l23131:	
   909                           
   910                           ;ICH-LR-HR.C: 25: flag_LRopen = flag_LRclose = flag_HRopen = flag_HRclose = Key_LED.oneB
      +                          it.LROpen = Key_LED.oneBit.LRClose = Key_LED.oneBit.HROpen = Key_LED.oneBit.HRClose = 0;
   911  0198  0838               	movf	_Key_LED,w
   912  0199  39F7               	andlw	-9
   913  019A  2460  3181         	fcall	PL6	;call to abstracted procedure
   914  019C  0DD9               	rlf	??_key_execute+1,f
   915  019D  0DD9               	rlf	??_key_execute+1,f
   916  019E  0838               	movf	_Key_LED,w
   917  019F  0659               	xorwf	??_key_execute+1,w
   918  01A0  39FB               	andlw	-5
   919  01A1  0659               	xorwf	??_key_execute+1,w
   920  01A2  00B8               	movwf	_Key_LED
   921  01A3  0C38               	rrf	_Key_LED,w
   922  01A4  0C89               	rrf	9,f
   923  01A5  3901               	andlw	1
   924  01A6  00DA               	movwf	??_key_execute+2
   925  01A7  0DDA               	rlf	??_key_execute+2,f
   926  01A8  0838               	movf	_Key_LED,w
   927  01A9  065A               	xorwf	??_key_execute+2,w
   928  01AA  39FD               	andlw	-3
   929  01AB  065A               	xorwf	??_key_execute+2,w
   930  01AC  00B8               	movwf	_Key_LED
   931  01AD  0C38               	rrf	_Key_LED,w
   932  01AE  3901               	andlw	1
   933  01AF  00DB               	movwf	??_key_execute+3
   934  01B0  0638               	xorwf	_Key_LED,w
   935  01B1  39FE               	andlw	-2
   936  01B2  065B               	xorwf	??_key_execute+3,w
   937  01B3  00B8               	movwf	_Key_LED
   938  01B4  3901               	andlw	1
   939  01B5  00DC               	movwf	??_key_execute+4
   940  01B6  0C5C               	rrf	??_key_execute+4,w
   941  01B7  10FA               	bcf	_flag_HRclose/(0+8),_flag_HRclose& (0+7)
   942  01B8  1803               	btfsc	3,0
   943  01B9  14FA               	bsf	_flag_HRclose/(0+8),_flag_HRclose& (0+7)
   944  01BA  117A               	bcf	_flag_HRopen/(0+8),_flag_HRopen& (0+7)
   945  01BB  18FA               	btfsc	_flag_HRclose/(0+8),_flag_HRclose& (0+7)
   946  01BC  157A               	bsf	_flag_HRopen/(0+8),_flag_HRopen& (0+7)
   947  01BD  11FA               	bcf	_flag_LRclose/(0+8),_flag_LRclose& (0+7)
   948  01BE  197A               	btfsc	_flag_HRopen/(0+8),_flag_HRopen& (0+7)
   949  01BF  15FA               	bsf	_flag_LRclose/(0+8),_flag_LRclose& (0+7)
   950  01C0  127A               	bcf	_flag_LRopen/(0+8),_flag_LRopen& (0+7)
   951  01C1  19FA               	btfsc	_flag_LRclose/(0+8),_flag_LRclose& (0+7)
   952  01C2  167A               	bsf	_flag_LRopen/(0+8),_flag_LRopen& (0+7)
   953  01C3  2A1A               	goto	l23171
   954  01C4                     l20241:	
   955                           
   956                           ;ICH-LR-HR.C: 27: else{
   957                           ;ICH-LR-HR.C: 29: if (Key_state.oneBit.HROpen){
   958  01C4  1D39               	btfss	_Key_state,2
   959  01C5  29CC               	goto	l23137
   960                           
   961                           ;ICH-LR-HR.C: 30: if (!flag_HRopen)
   962  01C6  197A               	btfsc	_flag_HRopen/(0+8),_flag_HRopen& (0+7)
   963  01C7  29D7               	goto	l23139
   964                           
   965                           ;ICH-LR-HR.C: 31: flag_HRopen = Key_LED.oneBit.HROpen = 1;
   966  01C8  0838               	movf	_Key_LED,w
   967  01C9  39FB               	andlw	-5
   968  01CA  3804               	iorlw	4
   969  01CB  29CE               	goto	L8
   970  01CC                     l23137:	
   971                           
   972                           ;ICH-LR-HR.C: 33: else
   973                           ;ICH-LR-HR.C: 34: flag_HRopen = Key_LED.oneBit.HROpen = 0;
   974  01CC  0838               	movf	_Key_LED,w
   975  01CD  39FB               	andlw	-5
   976  01CE                     L8:	
   977  01CE  00B8               	movwf	_Key_LED
   978  01CF  0C38               	rrf	_Key_LED,w
   979  01D0  0C89               	rrf	9,f
   980  01D1  3901               	andlw	1
   981  01D2  00D8               	movwf	??_key_execute
   982  01D3  0C58               	rrf	??_key_execute,w
   983  01D4  117A               	bcf	_flag_HRopen/(0+8),_flag_HRopen& (0+7)
   984  01D5  1803               	btfsc	3,0
   985  01D6  157A               	bsf	_flag_HRopen/(0+8),_flag_HRopen& (0+7)
   986  01D7                     l23139:	
   987                           
   988                           ;ICH-LR-HR.C: 37: if (Key_state.oneBit.LROpen){
   989  01D7  0020               	movlb	0	; select bank0
   990  01D8  1C39               	btfss	_Key_state,0
   991  01D9  29E0               	goto	l23145
   992                           
   993                           ;ICH-LR-HR.C: 38: if (!flag_LRopen)
   994  01DA  1A7A               	btfsc	_flag_LRopen/(0+8),_flag_LRopen& (0+7)
   995  01DB  29E9               	goto	l23147
   996                           
   997                           ;ICH-LR-HR.C: 39: flag_LRopen = Key_LED.oneBit.LROpen = 1;
   998  01DC  0838               	movf	_Key_LED,w
   999  01DD  39FE               	andlw	-2
  1000  01DE  3801               	iorlw	1
  1001  01DF  29E2               	goto	L9
  1002  01E0                     l23145:	
  1003                           
  1004                           ;ICH-LR-HR.C: 41: else
  1005                           ;ICH-LR-HR.C: 42: flag_LRopen = Key_LED.oneBit.LROpen = 0;
  1006  01E0  0838               	movf	_Key_LED,w
  1007  01E1  39FE               	andlw	-2
  1008  01E2                     L9:	
  1009  01E2  00B8               	movwf	_Key_LED
  1010  01E3  3901               	andlw	1
  1011  01E4  00D8               	movwf	??_key_execute
  1012  01E5  0C58               	rrf	??_key_execute,w
  1013  01E6  127A               	bcf	_flag_LRopen/(0+8),_flag_LRopen& (0+7)
  1014  01E7  1803               	btfsc	3,0
  1015  01E8  167A               	bsf	_flag_LRopen/(0+8),_flag_LRopen& (0+7)
  1016  01E9                     l23147:	
  1017                           
  1018                           ;ICH-LR-HR.C: 45: if (Key_state.oneBit.LRClose){
  1019  01E9  0020               	movlb	0	; select bank0
  1020  01EA  1CB9               	btfss	_Key_state,1
  1021  01EB  2A03               	goto	l23161
  1022                           
  1023                           ;ICH-LR-HR.C: 46: if (!flag_LRclose)
  1024  01EC  19FA               	btfsc	_flag_LRclose/(0+8),_flag_LRclose& (0+7)
  1025  01ED  29F5               	goto	l23153
  1026                           
  1027                           ;ICH-LR-HR.C: 47: flag_LRclose = Key_LED.oneBit.LRClose = 1;
  1028  01EE  0838               	movf	_Key_LED,w
  1029  01EF  39FD               	andlw	-3
  1030  01F0  3802               	iorlw	2
  1031  01F1  2484  3181         	fcall	PL11	;call to abstracted procedure
  1032  01F3  1803               	btfsc	3,0
  1033  01F4  15FA               	bsf	_flag_LRclose/(0+8),_flag_LRclose& (0+7)
  1034  01F5                     l23153:	
  1035                           
  1036                           ;ICH-LR-HR.C: 48: for (unsigned int a; a < 0x0fff; a++)
  1037  01F5  300F               	movlw	15
  1038  01F6  0020               	movlb	0	; select bank0
  1039  01F7  025E               	subwf	key_execute@a+1,w
  1040  01F8  30FF               	movlw	255
  1041  01F9  1903               	skipnz
  1042  01FA  025D               	subwf	key_execute@a,w
  1043  01FB  1803               	btfsc	3,0
  1044  01FC  2A01               	goto	l20258
  1045  01FD  0ADD               	incf	key_execute@a,f
  1046  01FE  1903               	skipnz
  1047  01FF  0ADE               	incf	key_execute@a+1,f
  1048  0200  29F5               	goto	l23153
  1049  0201                     l20258:	
  1050                           
  1051                           ;ICH-LR-HR.C: 50: Key_LED.oneBit.HRClose = 1;
  1052  0201  15B8               	bsf	_Key_LED,3
  1053                           
  1054                           ;ICH-LR-HR.C: 51: }
  1055  0202  2A1A               	goto	l23171
  1056  0203                     l23161:	
  1057                           
  1058                           ;ICH-LR-HR.C: 52: else{
  1059                           ;ICH-LR-HR.C: 53: flag_LRclose = Key_LED.oneBit.LRClose = 0;
  1060  0203  0838               	movf	_Key_LED,w
  1061  0204  39FD               	andlw	-3
  1062  0205  2484  3181         	fcall	PL11	;call to abstracted procedure
  1063  0207  1803               	btfsc	3,0
  1064  0208  15FA               	bsf	_flag_LRclose/(0+8),_flag_LRclose& (0+7)
  1065                           
  1066                           ;ICH-LR-HR.C: 55: if (Key_state.oneBit.HRClose){
  1067  0209  0020               	movlb	0	; select bank0
  1068  020A  1DB9               	btfss	_Key_state,3
  1069  020B  2A12               	goto	l23169
  1070                           
  1071                           ;ICH-LR-HR.C: 56: if (!flag_HRclose)
  1072  020C  18FA               	btfsc	_flag_HRclose/(0+8),_flag_HRclose& (0+7)
  1073  020D  2A1A               	goto	l23171
  1074                           
  1075                           ;ICH-LR-HR.C: 57: flag_HRclose = Key_LED.oneBit.HRClose = 1;
  1076  020E  0838               	movf	_Key_LED,w
  1077  020F  39F7               	andlw	-9
  1078  0210  3808               	iorlw	8
  1079  0211  2A14               	goto	L10
  1080  0212                     l23169:	
  1081                           
  1082                           ;ICH-LR-HR.C: 59: else
  1083                           ;ICH-LR-HR.C: 60: flag_HRclose = Key_LED.oneBit.HRClose = 0;
  1084  0212  0838               	movf	_Key_LED,w
  1085  0213  39F7               	andlw	-9
  1086  0214                     L10:	
  1087  0214  2460  3181         	fcall	PL6	;call to abstracted procedure
  1088  0216  0C59               	rrf	??_key_execute+1,w
  1089  0217  10FA               	bcf	_flag_HRclose/(0+8),_flag_HRclose& (0+7)
  1090  0218  1803               	btfsc	3,0
  1091  0219  14FA               	bsf	_flag_HRclose/(0+8),_flag_HRclose& (0+7)
  1092  021A                     l23171:	
  1093                           
  1094                           ;ICH-LR-HR.C: 61: }
  1095                           ;ICH-LR-HR.C: 62: }
  1096                           ;ICH-LR-HR.C: 103: if (Key_state.oneBit.Light){
  1097  021A  0020               	movlb	0	; select bank0
  1098  021B  1E39               	btfss	_Key_state,4
  1099  021C  2A2D               	goto	l20264
  1100                           
  1101                           ;ICH-LR-HR.C: 104: Power_Timer = 0;
  1102  021D  01B4               	clrf	_Power_Timer
  1103  021E  01B5               	clrf	_Power_Timer+1
  1104                           
  1105                           ;ICH-LR-HR.C: 105: if (!flag_light){
  1106  021F  1AFA               	btfsc	_flag_light/(0+8),_flag_light& (0+7)
  1107  0220  0008               	return
  1108  0221  3000               	movlw	0
  1109                           
  1110                           ;ICH-LR-HR.C: 106: flag_light = 1;
  1111  0222  16FA               	bsf	_flag_light/(0+8),_flag_light& (0+7)
  1112                           
  1113                           ;ICH-LR-HR.C: 107: Key_LED.oneBit.Light = !Key_LED.oneBit.Light;
  1114  0223  1E38               	btfss	_Key_LED,4
  1115  0224  3001               	movlw	1
  1116  0225  00D8               	movwf	??_key_execute
  1117  0226  0ED8               	swapf	??_key_execute,f
  1118  0227  0838               	movf	_Key_LED,w
  1119  0228  0658               	xorwf	??_key_execute,w
  1120  0229  39EF               	andlw	-17
  1121  022A  0658               	xorwf	??_key_execute,w
  1122  022B  00B8               	movwf	_Key_LED
  1123  022C  0008               	return
  1124  022D                     l20264:	
  1125                           
  1126                           ;ICH-LR-HR.C: 110: else
  1127                           ;ICH-LR-HR.C: 111: flag_light = 0;
  1128  022D  12FA               	bcf	_flag_light/(0+8),_flag_light& (0+7)
  1129  022E  0008               	return
  1130  022F                     l23181:	
  1131  022F  3000               	movlw	0
  1132                           
  1133                           ;ICH-LR-HR.C: 113: else
  1134                           ;ICH-LR-HR.C: 115: Key_LED.oneBit.LROpen = Key_LED.oneBit.LRClose = Key_LED.oneBit.HROpe
      +                          n = Key_LED.oneBit.HRClose = flag_LRopen = flag_LRclose = flag_HRopen = flag_HRclose = f
      +                          lag_light = 0;
  1135  0230  12FA               	bcf	_flag_light/(0+8),_flag_light& (0+7)
  1136  0231  10FA               	bcf	_flag_HRclose/(0+8),_flag_HRclose& (0+7)
  1137  0232  117A               	bcf	_flag_HRopen/(0+8),_flag_HRopen& (0+7)
  1138  0233  11FA               	bcf	_flag_LRclose/(0+8),_flag_LRclose& (0+7)
  1139  0234  127A               	bcf	_flag_LRopen/(0+8),_flag_LRopen& (0+7)
  1140  0235  1A7A               	btfsc	_flag_LRopen/(0+8),_flag_LRopen& (0+7)
  1141  0236  3001               	movlw	1
  1142  0237  00D8               	movwf	??_key_execute
  1143  0238  0DD8               	rlf	??_key_execute,f
  1144  0239  0DD8               	rlf	??_key_execute,f
  1145  023A  0DD8               	rlf	??_key_execute,f
  1146  023B  0838               	movf	_Key_LED,w
  1147  023C  0658               	xorwf	??_key_execute,w
  1148  023D  39F7               	andlw	-9
  1149  023E  0658               	xorwf	??_key_execute,w
  1150  023F  00B8               	movwf	_Key_LED
  1151  0240  0C38               	rrf	_Key_LED,w
  1152  0241  00D9               	movwf	??_key_execute+1
  1153  0242  0CD9               	rrf	??_key_execute+1,f
  1154  0243  0C59               	rrf	??_key_execute+1,w
  1155  0244  3901               	andlw	1
  1156  0245  00DA               	movwf	??_key_execute+2
  1157  0246  0DDA               	rlf	??_key_execute+2,f
  1158  0247  0DDA               	rlf	??_key_execute+2,f
  1159  0248  0838               	movf	_Key_LED,w
  1160  0249  065A               	xorwf	??_key_execute+2,w
  1161  024A  39FB               	andlw	-5
  1162  024B  065A               	xorwf	??_key_execute+2,w
  1163  024C  00B8               	movwf	_Key_LED
  1164  024D  0C38               	rrf	_Key_LED,w
  1165  024E  0C89               	rrf	9,f
  1166  024F  3901               	andlw	1
  1167  0250  00DB               	movwf	??_key_execute+3
  1168  0251  0DDB               	rlf	??_key_execute+3,f
  1169  0252  0838               	movf	_Key_LED,w
  1170  0253  065B               	xorwf	??_key_execute+3,w
  1171  0254  39FD               	andlw	-3
  1172  0255  065B               	xorwf	??_key_execute+3,w
  1173  0256  00B8               	movwf	_Key_LED
  1174  0257  0C38               	rrf	_Key_LED,w
  1175  0258  3901               	andlw	1
  1176  0259  00DC               	movwf	??_key_execute+4
  1177  025A  0638               	xorwf	_Key_LED,w
  1178  025B  39FE               	andlw	-2
  1179  025C  065C               	xorwf	??_key_execute+4,w
  1180  025D  00B8               	movwf	_Key_LED
  1181  025E  0008               	return
  1182  025F                     __end_of_key_execute:	
  1183  025F                     __ptext575:	
  1184 ;; =============== function _mTouch_ButtonStateMachine ends ============
  1185                           
  1186                           
  1187 ;; *************** function _mTouch_Init *****************
  1188 ;; Defined at:
  1189 ;;		line 210 in file "S:\Eng Paul Li\Sourcecode\ICH R2ULBL 02 Ver B\mTouch.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;		None
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  acqData         1    3[BANK0 ] PTR struct .
  1194 ;;		 -> mTouch_acqData(20), 
  1195 ;;  sensorIndex     1    4[BANK0 ] char 
  1196 ;; Return value:  Size  Location     Type
  1197 ;;		None               void
  1198 ;; Registers used:
  1199 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 17F/1
  1202 ;;		On exit  : 17F/1
  1203 ;;		Unchanged: FFE80/0
  1204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1205 ;;      Params:         0       0       0       0
  1206 ;;      Locals:         0       2       0       0
  1207 ;;      Temps:          0       0       0       0
  1208 ;;      Totals:         0       2       0       0
  1209 ;;Total ram usage:        2 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; Hardware stack levels required when called:    4
  1212 ;; This function calls:
  1213 ;;		___bmul
  1214 ;;		_mTouch_ChangeMode
  1215 ;; This function is called by:
  1216 ;;		_main
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219  025F                     _mTouch_Init:	
  1220                           
  1221                           ;mTouch.c: 228: for (int8_t sensorIndex = 5-1; sensorIndex >= 0; sensorIndex--)
  1222                           
  1223                           ; Regs used in _mTouch_Init: [wreg+fsr1l-status,0+pclath+cstack]
  1224  025F  3004               	movlw	4
  1225  0260  0020               	movlb	0	; select bank0
  1226  0261  00DC               	movwf	mTouch_Init@sensorIndex
  1227  0262                     l23421:	
  1228                           
  1229                           ;mTouch.c: 229: {
  1230                           ;mTouch.c: 232: mTouch_AcquisitionData* acqData = &mTouch_acqData[sensorIndex];
  1231  0262  085C               	movf	mTouch_Init@sensorIndex,w
  1232  0263  0709               	addwf	9,w
  1233  0264  0709               	addwf	9,w
  1234  0265  3EA0               	addlw	_mTouch_acqData& (0+255)
  1235  0266  00DB               	movwf	mTouch_Init@acqData
  1236                           
  1237                           ;mTouch.c: 233: (*acqData).result.v &= 0x000F;
  1238  0267  3E02               	addlw	2
  1239  0268  0086               	movwf	6
  1240  0269  300F               	movlw	15
  1241  026A  0187               	clrf	7
  1242  026B  0581               	andwf	1,f
  1243  026C  3141               	addfsr 1,1
  1244  026D  0181               	clrf	1
  1245                           
  1246                           ;mTouch.c: 234: (*acqData).result.v |= (uint16_t)(0x47F << 4);
  1247  026E  085B               	movf	mTouch_Init@acqData,w
  1248  026F  3E02               	addlw	2
  1249  0270  0086               	movwf	6
  1250  0271  30F0               	movlw	240
  1251  0272  0187               	clrf	7
  1252  0273  0481               	iorwf	1,f
  1253  0274  3141               	addfsr 1,1
  1254  0275  3047               	movlw	71
  1255  0276  0481               	iorwf	1,f
  1256                           
  1257                           ;mTouch.c: 236: mTouch_stateVars.sensor[sensorIndex].state = MTOUCH_INITIALIZING;
  1258  0277  3005               	movlw	5
  1259  0278  00D8               	movwf	?___bmul
  1260  0279  085C               	movf	mTouch_Init@sensorIndex,w
  1261  027A  2371  3181         	fcall	___bmul
  1262  027C  3E3F               	addlw	(_mTouch_stateVars+1)& (0+255)
  1263  027D  0086               	movwf	6
  1264  027E  30FC               	movlw	-4
  1265  027F  0187               	clrf	7
  1266  0280  0581               	andwf	1,f
  1267                           
  1268                           ;mTouch.c: 238: mTouch_stateVars.sensor[sensorIndex].timeout = 0;
  1269  0281  3005               	movlw	5
  1270  0282  00D8               	movwf	?___bmul
  1271  0283  085C               	movf	mTouch_Init@sensorIndex,w
  1272  0284  2371  3181         	fcall	___bmul
  1273  0286  3E3F               	addlw	(_mTouch_stateVars+1)& (0+255)
  1274  0287  0086               	movwf	6
  1275  0288  3005               	movlw	5
  1276  0289  0187               	clrf	7
  1277  028A  1181               	bcf	1,3
  1278                           
  1279                           ;mTouch.c: 240: mTouch_stateVars.sensor[sensorIndex].timer = 30;
  1280  028B  00D8               	movwf	?___bmul
  1281  028C  085C               	movf	mTouch_Init@sensorIndex,w
  1282  028D  2371  3181         	fcall	___bmul
  1283  028F  3E41               	addlw	(_mTouch_stateVars+3)& (0+255)
  1284  0290  0086               	movwf	6
  1285  0291  301E               	movlw	30
  1286  0292  0187               	clrf	7
  1287  0293  3FC0               	movwi [0]fsr1
  1288  0294  3000               	movlw	0
  1289  0295  3FC1               	movwi [1]fsr1
  1290                           
  1291                           ;mTouch.c: 241: mTouch_stateVars.sensor[sensorIndex].baselineCount = 255;
  1292  0296  3005               	movlw	5
  1293  0297  00D8               	movwf	?___bmul
  1294  0298  085C               	movf	mTouch_Init@sensorIndex,w
  1295  0299  2371  3181         	fcall	___bmul
  1296  029B  248B  3181         	fcall	PL12	;call to abstracted procedure
  1297                           
  1298                           ;mTouch.c: 243: mTouch_stateVars.sensor[sensorIndex].debounce = 0;
  1299  029D  3005               	movlw	5
  1300  029E  00D8               	movwf	?___bmul
  1301  029F  085C               	movf	mTouch_Init@sensorIndex,w
  1302  02A0  2371  3181         	fcall	___bmul
  1303  02A2  3E43               	addlw	(_mTouch_stateVars+5)& (0+255)
  1304  02A3  0086               	movwf	6
  1305  02A4  30FC               	movlw	-4
  1306  02A5  0187               	clrf	7
  1307  02A6  0581               	andwf	1,f
  1308                           
  1309                           ;mTouch.c: 246: mTouch_average [sensorIndex] = 0;
  1310  02A7  355C               	lslf	mTouch_Init@sensorIndex,w
  1311  02A8  3E20               	addlw	_mTouch_average& (0+255)
  1312  02A9  0086               	movwf	6
  1313  02AA  0181               	clrf	1
  1314  02AB  3141               	addfsr 1,1
  1315  02AC  0181               	clrf	1
  1316  02AD  03DC               	decf	mTouch_Init@sensorIndex,f
  1317  02AE  1FDC               	btfss	mTouch_Init@sensorIndex,7
  1318  02AF  2A62               	goto	l23421
  1319                           
  1320                           ;mTouch.c: 251: }
  1321                           ;mTouch.c: 280: mTouch_state.dataReady = 0;
  1322  02B0  103D               	bcf	_mTouch_state,0
  1323                           
  1324                           ;mTouch.c: 281: mTouch_state.areInitialized = 0;
  1325  02B1  10BD               	bcf	_mTouch_state,1
  1326                           
  1327                           ;mTouch.c: 306: mTouch_ChangeMode();
  1328  02B2  2392               	fcall	_mTouch_ChangeMode
  1329                           
  1330                           ;mTouch.c: 310: ADCON1bits.ADCS = 0b101; ADCON1bits.ADFM = 1;;
  1331  02B3  0021               	movlb	1	; select bank1
  1332  02B4  081E               	movf	30,w	;volatile
  1333  02B5  398F               	andlw	-113
  1334  02B6  3850               	iorlw	80
  1335  02B7  009E               	movwf	30	;volatile
  1336  02B8  179E               	bsf	30,7	;volatile
  1337                           
  1338                           ;mTouch.c: 316: TMR0IF = 0; TMR0IE = 1;;
  1339  02B9  110B               	bcf	11,2
  1340  02BA  168B               	bsf	11,5
  1341  02BB  0008               	return
  1342  02BC                     __end_of_mTouch_Init:	
  1343  02BC                     __ptext573:	
  1344 ;; =============== function _mTouch_Decode ends ============
  1345                           
  1346                           
  1347 ;; *************** function _mTouch_UpdateBaseline *****************
  1348 ;; Defined at:
  1349 ;;		line 970 in file "S:\Eng Paul Li\Sourcecode\ICH R2ULBL 02 Ver B\mTouch.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  reading         2   10[BANK0 ] unsigned int 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;		None               void
  1356 ;; Registers used:
  1357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 1F/0
  1360 ;;		On exit  : 1F/0
  1361 ;;		Unchanged: FFE00/0
  1362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1363 ;;      Params:         0       0       0       0
  1364 ;;      Locals:         0       2       0       0
  1365 ;;      Temps:          0       7       0       0
  1366 ;;      Totals:         0       9       0       0
  1367 ;;Total ram usage:        9 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; Hardware stack levels required when called:    4
  1370 ;; This function calls:
  1371 ;;		___bmul
  1372 ;; This function is called by:
  1373 ;;		_mTouch_Decode
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376  02BC                     _mTouch_UpdateBaseline:	
  1377                           
  1378                           ;mTouch.c: 971: uint16_t reading = mTouch_sensorData[mTouch_currentScan];
  1379                           
  1380                           ; Regs used in _mTouch_UpdateBaseline: [wreg-status,0+pclath+cstack]
  1381  02BC  353B               	lslf	_mTouch_currentScan,w
  1382  02BD  3E2A               	addlw	_mTouch_sensorData& (0+255)
  1383  02BE  0086               	movwf	6
  1384  02BF  0187               	clrf	7
  1385  02C0  3F40               	moviw [0]fsr1
  1386  02C1  00E2               	movwf	mTouch_UpdateBaseline@reading
  1387  02C2  3F41               	moviw [1]fsr1
  1388  02C3  00E3               	movwf	mTouch_UpdateBaseline@reading+1
  1389                           
  1390                           ;mTouch.c: 987: if (mTouch_stateVars.sensor[mTouch_currentScan].timeout)
  1391  02C4  3005               	movlw	5
  1392  02C5  00D8               	movwf	?___bmul
  1393  02C6  083B               	movf	_mTouch_currentScan,w
  1394  02C7  2371  3181         	fcall	___bmul
  1395  02C9  3E3F               	addlw	(_mTouch_stateVars+1)& (0+255)
  1396  02CA  0086               	movwf	6
  1397  02CB  0187               	clrf	7
  1398  02CC  1D81               	btfss	1,3
  1399  02CD  2AFD               	goto	l9183
  1400                           
  1401                           ;mTouch.c: 988: {
  1402                           ;mTouch.c: 989: if ((int16_t)(mTouch_average[mTouch_currentScan] - reading) > (int16_t)(
      +                          mTouch_pressThreshold[mTouch_currentScan] >> 1))
  1403  02CE  353B               	lslf	_mTouch_currentScan,w
  1404  02CF  2476  3181         	fcall	PL9	;call to abstracted procedure
  1405  02D1  0862               	movf	mTouch_UpdateBaseline@reading,w
  1406  02D2  025B               	subwf	??_mTouch_UpdateBaseline,w
  1407  02D3  00DD               	movwf	??_mTouch_UpdateBaseline+2
  1408  02D4  0863               	movf	mTouch_UpdateBaseline@reading+1,w
  1409  02D5  3B5C               	subwfb	??_mTouch_UpdateBaseline+1,w
  1410  02D6  00DE               	movwf	??_mTouch_UpdateBaseline+3
  1411  02D7  2468  3181         	fcall	PL7	;call to abstracted procedure
  1412  02D9  00DF               	movwf	??_mTouch_UpdateBaseline+4
  1413  02DA  3F01               	moviw [1]fsr0
  1414  02DB  00E0               	movwf	??_mTouch_UpdateBaseline+5
  1415  02DC  36E0               	lsrf	??_mTouch_UpdateBaseline+5,f
  1416  02DD  0CDF               	rrf	??_mTouch_UpdateBaseline+4,f
  1417  02DE  0860               	movf	??_mTouch_UpdateBaseline+5,w
  1418  02DF  3A80               	xorlw	128
  1419  02E0  00E1               	movwf	??_mTouch_UpdateBaseline+6
  1420  02E1  085E               	movf	??_mTouch_UpdateBaseline+3,w
  1421  02E2  3A80               	xorlw	128
  1422  02E3  0261               	subwf	??_mTouch_UpdateBaseline+6,w
  1423  02E4  1D03               	skipz
  1424  02E5  2AE8               	goto	u1855
  1425  02E6  085D               	movf	??_mTouch_UpdateBaseline+2,w
  1426  02E7  025F               	subwf	??_mTouch_UpdateBaseline+4,w
  1427  02E8                     u1855:	
  1428                           
  1429                           ;mTouch.c: 990: {
  1430                           ;mTouch.c: 991: mTouch_stateVars.sensor[mTouch_currentScan].baselineCorrection = 1;
  1431  02E8  3005               	movlw	5
  1432  02E9  1803               	skipnc
  1433  02EA  2AFE               	goto	L1
  1434  02EB  0020               	movlb	0	; select bank0
  1435  02EC  00D8               	movwf	?___bmul
  1436  02ED  083B               	movf	_mTouch_currentScan,w
  1437  02EE  2371  3181         	fcall	___bmul
  1438  02F0  3E3F               	addlw	(_mTouch_stateVars+1)& (0+255)
  1439  02F1  0086               	movwf	6
  1440  02F2  3005               	movlw	5
  1441  02F3  0187               	clrf	7
  1442  02F4  1501               	bsf	1,2
  1443                           
  1444                           ;mTouch.c: 992: mTouch_stateVars.sensor[mTouch_currentScan].timeout = 0;
  1445  02F5  00D8               	movwf	?___bmul
  1446  02F6  083B               	movf	_mTouch_currentScan,w
  1447  02F7  2371  3181         	fcall	___bmul
  1448  02F9  3E3F               	addlw	(_mTouch_stateVars+1)& (0+255)
  1449  02FA  0086               	movwf	6
  1450  02FB  0187               	clrf	7
  1451  02FC  1181               	bcf	1,3
  1452  02FD                     l9183:	
  1453                           
  1454                           ;mTouch.c: 993: }
  1455                           ;mTouch.c: 994: }
  1456                           ;mTouch.c: 997: if (mTouch_stateVars.sensor[mTouch_currentScan].baselineCorrection)
  1457  02FD  3005               	movlw	5
  1458  02FE                     L1:	
  1459  02FE  0020               	movlb	0	; select bank0
  1460  02FF  00D8               	movwf	?___bmul
  1461  0300  083B               	movf	_mTouch_currentScan,w
  1462  0301  2371  3181         	fcall	___bmul
  1463  0303  3E3F               	addlw	(_mTouch_stateVars+1)& (0+255)
  1464  0304  0086               	movwf	6
  1465  0305  3005               	movlw	5
  1466  0306  0187               	clrf	7
  1467                           
  1468                           ;mTouch.c: 998: {
  1469                           ;mTouch.c: 999: mTouch_stateVars.sensor[mTouch_currentScan].baselineCount = 1;
  1470  0307  1D01               	btfss	1,2
  1471  0308  2B3C               	goto	L2
  1472  0309  00D8               	movwf	?___bmul
  1473  030A  083B               	movf	_mTouch_currentScan,w
  1474  030B  2371  3181         	fcall	___bmul
  1475  030D  3E40               	addlw	(_mTouch_stateVars+2)& (0+255)
  1476  030E  0086               	movwf	6
  1477  030F  0187               	clrf	7
  1478  0310  0801               	movf	1,w
  1479  0311  3900               	andlw	-256
  1480  0312  3801               	iorlw	1
  1481  0313  0081               	movwf	1
  1482                           
  1483                           ;mTouch.c: 1001: if ((int16_t)(mTouch_average[mTouch_currentScan] - reading) < (int16_t)
      +                          (mTouch_releaseThreshold[mTouch_currentScan]))
  1484  0314  246F  3181         	fcall	PL8	;call to abstracted procedure
  1485  0316  00DB               	movwf	??_mTouch_UpdateBaseline
  1486  0317  3F01               	moviw [1]fsr0
  1487  0318  00DC               	movwf	??_mTouch_UpdateBaseline+1
  1488  0319  353B               	lslf	_mTouch_currentScan,w
  1489  031A  3E20               	addlw	_mTouch_average& (0+255)
  1490  031B  0086               	movwf	6
  1491  031C  3F40               	moviw [0]fsr1
  1492  031D  00DD               	movwf	??_mTouch_UpdateBaseline+2
  1493  031E  3F41               	moviw [1]fsr1
  1494  031F  00DE               	movwf	??_mTouch_UpdateBaseline+3
  1495  0320  0862               	movf	mTouch_UpdateBaseline@reading,w
  1496  0321  025D               	subwf	??_mTouch_UpdateBaseline+2,w
  1497  0322  00DF               	movwf	??_mTouch_UpdateBaseline+4
  1498  0323  0863               	movf	mTouch_UpdateBaseline@reading+1,w
  1499  0324  3B5E               	subwfb	??_mTouch_UpdateBaseline+3,w
  1500  0325  00E0               	movwf	??_mTouch_UpdateBaseline+5
  1501  0326  3A80               	xorlw	128
  1502  0327  00E1               	movwf	??_mTouch_UpdateBaseline+6
  1503  0328  085C               	movf	??_mTouch_UpdateBaseline+1,w
  1504  0329  3A80               	xorlw	128
  1505  032A  0261               	subwf	??_mTouch_UpdateBaseline+6,w
  1506  032B  1D03               	skipz
  1507  032C  2B2F               	goto	u1875
  1508  032D  085B               	movf	??_mTouch_UpdateBaseline,w
  1509  032E  025F               	subwf	??_mTouch_UpdateBaseline+4,w
  1510  032F                     u1875:	
  1511                           
  1512                           ;mTouch.c: 1002: {
  1513                           ;mTouch.c: 1003: mTouch_stateVars.sensor[mTouch_currentScan].baselineCorrection = 0;
  1514  032F  3005               	movlw	5
  1515  0330  1803               	skipnc
  1516  0331  2B3C               	goto	L2
  1517  0332  0020               	movlb	0	; select bank0
  1518  0333  00D8               	movwf	?___bmul
  1519  0334  083B               	movf	_mTouch_currentScan,w
  1520  0335  2371  3181         	fcall	___bmul
  1521  0337  3E3F               	addlw	(_mTouch_stateVars+1)& (0+255)
  1522  0338  0086               	movwf	6
  1523  0339  3005               	movlw	5
  1524  033A  0187               	clrf	7
  1525  033B  1101               	bcf	1,2
  1526  033C                     L2:	
  1527                           ;mTouch.c: 1004: }
  1528                           ;mTouch.c: 1005: }
  1529                           ;mTouch.c: 1010: if ((uint8_t)(--(mTouch_stateVars.sensor[mTouch_currentScan].baselineCo
      +                          unt)) == 0)
  1530                           
  1531  033C  0020               	movlb	0	; select bank0
  1532  033D  00D8               	movwf	?___bmul
  1533  033E  083B               	movf	_mTouch_currentScan,w
  1534  033F  2371  3181         	fcall	___bmul
  1535  0341  3E40               	addlw	(_mTouch_stateVars+2)& (0+255)
  1536  0342  0086               	movwf	6
  1537  0343  0187               	clrf	7
  1538  0344  0801               	movf	1,w
  1539  0345  39FF               	andlw	255
  1540  0346  00DB               	movwf	??_mTouch_UpdateBaseline
  1541  0347  03DB               	decf	??_mTouch_UpdateBaseline,f
  1542  0348  0801               	movf	1,w
  1543  0349  065B               	xorwf	??_mTouch_UpdateBaseline,w
  1544  034A  3900               	andlw	-256
  1545  034B  065B               	xorwf	??_mTouch_UpdateBaseline,w
  1546  034C  0081               	movwf	1
  1547  034D  0801               	movf	1,w
  1548  034E  39FF               	andlw	255
  1549  034F  1D03               	skipz
  1550  0350  0008               	return
  1551                           
  1552                           ;mTouch.c: 1012: {
  1553                           ;mTouch.c: 1013: mTouch_stateVars.sensor[mTouch_currentScan].baselineCount = 255;
  1554  0351  3005               	movlw	5
  1555  0352  00D8               	movwf	?___bmul
  1556  0353  083B               	movf	_mTouch_currentScan,w
  1557  0354  2371  3181         	fcall	___bmul
  1558  0356  248B  3181         	fcall	PL12	;call to abstracted procedure
  1559                           
  1560                           ;mTouch.c: 1032: mTouch_average[mTouch_currentScan] -= (uint16_t)(mTouch_average[mTouch_
      +                          currentScan] >> 3);
  1561  0358  353B               	lslf	_mTouch_currentScan,w
  1562  0359  2476  3181         	fcall	PL9	;call to abstracted procedure
  1563  035B  244F  3181         	fcall	PL4	;call to abstracted procedure
  1564  035D  085B               	movf	??_mTouch_UpdateBaseline,w
  1565  035E  0281               	subwf	1,f
  1566  035F  3141               	addfsr 1,1
  1567  0360  085C               	movf	??_mTouch_UpdateBaseline+1,w
  1568  0361  3B81               	subwfb	1,f
  1569  0362  317F               	addfsr 1,-1
  1570                           
  1571                           ;mTouch.c: 1033: mTouch_average[mTouch_currentScan] += (uint16_t)(reading >> 3);
  1572  0363  0863               	movf	mTouch_UpdateBaseline@reading+1,w
  1573  0364  00DC               	movwf	??_mTouch_UpdateBaseline+1
  1574  0365  0862               	movf	mTouch_UpdateBaseline@reading,w
  1575  0366  00DB               	movwf	??_mTouch_UpdateBaseline
  1576  0367  244F  3181         	fcall	PL4	;call to abstracted procedure
  1577  0369  0187               	clrf	7
  1578  036A  085B               	movf	??_mTouch_UpdateBaseline,w
  1579  036B  0781               	addwf	1,f
  1580  036C  3141               	addfsr 1,1
  1581  036D  085C               	movf	??_mTouch_UpdateBaseline+1,w
  1582  036E  3D81               	addwfc	1,f
  1583  036F  317F               	addfsr 1,-1
  1584  0370  0008               	return
  1585  0371                     __end_of_mTouch_UpdateBaseline:	
  1586  0371                     __ptext576:	
  1587 ;; =============== function _mTouch_Init ends ============
  1588                           
  1589                           
  1590 ;; *************** function ___bmul *****************
  1591 ;; Defined at:
  1592 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  multiplier      1    wreg     unsigned char 
  1595 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;  multiplier      1    2[BANK0 ] unsigned char 
  1598 ;;  product         1    1[BANK0 ] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      unsigned char 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0
  1603 ;; Tracked objects:
  1604 ;;		On entry : 1F/0
  1605 ;;		On exit  : 1F/0
  1606 ;;		Unchanged: FFFE0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1608 ;;      Params:         0       1       0       0
  1609 ;;      Locals:         0       2       0       0
  1610 ;;      Temps:          0       0       0       0
  1611 ;;      Totals:         0       3       0       0
  1612 ;;Total ram usage:        3 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    3
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_mTouch_ButtonStateMachine
  1619 ;;		_mTouch_Init
  1620 ;;		_mTouch_UpdateBaseline
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623  0371                     ___bmul:	
  1624                           
  1625                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1626                           ;___bmul@multiplier stored from wreg
  1627  0371  00DA               	movwf	___bmul@multiplier
  1628  0372  01D9               	clrf	___bmul@product
  1629  0373                     l23381:	
  1630  0373  0858               	movf	___bmul@multiplicand,w
  1631  0374  185A               	btfsc	___bmul@multiplier,0
  1632  0375  07D9               	addwf	___bmul@product,f
  1633  0376  35D8               	lslf	___bmul@multiplicand,f
  1634  0377  36DA               	lsrf	___bmul@multiplier,f
  1635  0378  08DA               	movf	___bmul@multiplier,f
  1636  0379  1D03               	skipz
  1637  037A  2B73               	goto	l23381
  1638  037B  0859               	movf	___bmul@product,w
  1639  037C  0008               	return
  1640  037D                     __end_of___bmul:	
  1641  037D                     __ptext572:	
  1642 ;; =============== function _main ends ============
  1643                           
  1644                           
  1645 ;; *************** function _mTouch_Decode *****************
  1646 ;; Defined at:
  1647 ;;		line 340 in file "S:\Eng Paul Li\Sourcecode\ICH R2ULBL 02 Ver B\mTouch.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;		None
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;		None               void
  1654 ;; Registers used:
  1655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 1F/0
  1658 ;;		On exit  : 1F/0
  1659 ;;		Unchanged: FFE00/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1661 ;;      Params:         0       0       0       0
  1662 ;;      Locals:         0       0       0       0
  1663 ;;      Temps:          0       0       0       0
  1664 ;;      Totals:         0       0       0       0
  1665 ;;Total ram usage:        0 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    5
  1668 ;; This function calls:
  1669 ;;		_mTouch_ButtonStateMachine
  1670 ;;		_mTouch_UpdateBaseline
  1671 ;;		_mTouch_ChangeMode
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676  037D                     _mTouch_Decode:	
  1677                           
  1678                           ;mTouch.c: 345: TMR0IE = 0;;
  1679                           
  1680                           ; Regs used in _mTouch_Decode: [wreg-status,0+pclath+cstack]
  1681  037D  128B               	bcf	11,5
  1682                           
  1683                           ;mTouch.c: 348: mTouch_state.areInitialized = 1;
  1684  037E  14BD               	bsf	_mTouch_state,1
  1685                           
  1686                           ;mTouch.c: 349: mTouch_state.buttonStateChange = 0;
  1687  037F  113D               	bcf	_mTouch_state,2
  1688                           
  1689                           ;mTouch.c: 370: mTouch_currentScan = 0;
  1690  0380  01BB               	clrf	_mTouch_currentScan
  1691                           
  1692                           ;mTouch.c: 426: mTouch_currentScan = 0;
  1693  0381  01BB               	clrf	_mTouch_currentScan
  1694  0382                     l23551:	
  1695                           
  1696                           ;mTouch.c: 432: {
  1697                           ;mTouch.c: 438: if (mTouch_ButtonStateMachine())
  1698  0382  2397  3181         	fcall	_mTouch_ButtonStateMachine
  1699  0384  3A00               	xorlw	0
  1700  0385  1903               	skipnz
  1701  0386  2B89               	goto	l23555
  1702                           
  1703                           ;mTouch.c: 443: {
  1704                           ;mTouch.c: 444: mTouch_UpdateBaseline();
  1705  0387  22BC  3181         	fcall	_mTouch_UpdateBaseline
  1706  0389                     l23555:	
  1707                           
  1708                           ;mTouch.c: 445: }
  1709                           ;mTouch.c: 448: mTouch_currentScan++;
  1710  0389  0ABB               	incf	_mTouch_currentScan,f
  1711                           
  1712                           ;mTouch.c: 449: } while (mTouch_currentScan != 5);
  1713  038A  083B               	movf	_mTouch_currentScan,w
  1714  038B  3A05               	xorlw	5
  1715  038C  1D03               	skipz
  1716  038D  2B82               	goto	l23551
  1717                           
  1718                           ;mTouch.c: 515: mTouch_ChangeMode();
  1719  038E  2392               	fcall	_mTouch_ChangeMode
  1720                           
  1721                           ;mTouch.c: 521: TMR0IF = 0; TMR0IE = 1;;
  1722  038F  110B               	bcf	11,2
  1723  0390  168B               	bsf	11,5
  1724  0391  0008               	return
  1725  0392                     __end_of_mTouch_Decode:	
  1726  0392                     __ptext577:	
  1727 ;; =============== function ___bmul ends ============
  1728                           
  1729                           
  1730 ;; *************** function _mTouch_ChangeMode *****************
  1731 ;; Defined at:
  1732 ;;		line 470 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;		None               void
  1739 ;; Registers used:
  1740 ;;		wreg, status,2
  1741 ;; Tracked objects:
  1742 ;;		On entry : 1F/0
  1743 ;;		On exit  : 1F/0
  1744 ;;		Unchanged: FFFE0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1746 ;;      Params:         0       0       0       0
  1747 ;;      Locals:         0       0       0       0
  1748 ;;      Temps:          0       0       0       0
  1749 ;;      Totals:         0       0       0       0
  1750 ;;Total ram usage:        0 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    3
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_mTouch_Init
  1757 ;;		_mTouch_Decode
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760  0392                     _mTouch_ChangeMode:	
  1761  0392  301E               	movlw	30
  1762                           
  1763                           ;cas16f1933.h: 472: mTouch_currentAcqData = 0;
  1764                           
  1765                           ; Regs used in _mTouch_ChangeMode: [wreg+status,2]
  1766  0393  01FD               	clrf	_mTouch_currentAcqData
  1767                           
  1768                           ;cas16f1933.h: 491: mTouch_currentScan = 0;
  1769  0394  01BB               	clrf	_mTouch_currentScan
  1770                           
  1771                           ;cas16f1933.h: 509: mTouch_stateVars.sampleCounter = 30;
  1772  0395  00BE               	movwf	_mTouch_stateVars
  1773  0396  0008               	return
  1774  0397                     __end_of_mTouch_ChangeMode:	
  1775  0397                     __ptext574:	
  1776 ;; =============== function _mTouch_UpdateBaseline ends ============
  1777                           
  1778                           
  1779 ;; *************** function _mTouch_ButtonStateMachine *****************
  1780 ;; Defined at:
  1781 ;;		line 528 in file "S:\Eng Paul Li\Sourcecode\ICH R2ULBL 02 Ver B\mTouch.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  delta           2    5[BANK0 ] unsigned int 
  1786 ;;  sensor          1    7[BANK0 ] PTR struct .
  1787 ;;		 -> mTouch_stateVars(26), 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      unsigned char 
  1790 ;; Registers used:
  1791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 1F/0
  1794 ;;		On exit  : 1F/0
  1795 ;;		Unchanged: FFFE0/0
  1796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1797 ;;      Params:         0       0       0       0
  1798 ;;      Locals:         0       3       0       0
  1799 ;;      Temps:          0       2       0       0
  1800 ;;      Totals:         0       5       0       0
  1801 ;;Total ram usage:        5 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    4
  1804 ;; This function calls:
  1805 ;;		___bmul
  1806 ;; This function is called by:
  1807 ;;		_mTouch_Decode
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810  0397                     _mTouch_ButtonStateMachine:	
  1811                           
  1812                           ;mTouch.c: 543: mTouch_SensorVariables* sensor = &mTouch_stateVars.sensor[mTouch_current
      +                          Scan];
  1813                           
  1814                           ; Regs used in _mTouch_ButtonStateMachine: [wreg-status,0+pclath+cstack]
  1815  0397  3005               	movlw	5
  1816  0398  00D8               	movwf	?___bmul
  1817  0399  083B               	movf	_mTouch_currentScan,w
  1818  039A  2371  3181         	fcall	___bmul
  1819  039C  3E3F               	addlw	(_mTouch_stateVars+1)& (0+255)
  1820  039D  00DF               	movwf	mTouch_ButtonStateMachine@sensor
  1821                           
  1822                           ;mTouch.c: 551: uint16_t delta = mTouch_sensorData[mTouch_currentScan] - mTouch_average[
      +                          mTouch_currentScan];
  1823  039E  353B               	lslf	_mTouch_currentScan,w
  1824  039F  3E20               	addlw	_mTouch_average& (0+255)
  1825  03A0  0086               	movwf	6
  1826  03A1  0187               	clrf	7
  1827  03A2  353B               	lslf	_mTouch_currentScan,w
  1828  03A3  3E2A               	addlw	_mTouch_sensorData& (0+255)
  1829  03A4  0084               	movwf	4
  1830  03A5  0185               	clrf	5
  1831  03A6  3F40               	moviw [0]fsr1
  1832  03A7  0200               	subwf	0,w
  1833  03A8  00DD               	movwf	mTouch_ButtonStateMachine@delta
  1834  03A9  3101               	addfsr 0,1
  1835  03AA  3F41               	moviw [1]fsr1
  1836  03AB  3B00               	subwfb	0,w
  1837  03AC  00DE               	movwf	mTouch_ButtonStateMachine@delta+1
  1838                           
  1839                           ;mTouch.c: 553: if ((int16_t) delta < 0)
  1840  03AD  1FDE               	btfss	mTouch_ButtonStateMachine@delta+1,7
  1841  03AE  2C23               	goto	l23521
  1842                           
  1843                           ;mTouch.c: 554: {
  1844                           ;mTouch.c: 555: delta = 0;
  1845  03AF  01DD               	clrf	mTouch_ButtonStateMachine@delta
  1846  03B0  01DE               	clrf	mTouch_ButtonStateMachine@delta+1
  1847  03B1  2C23               	goto	l23521
  1848  03B2                     l23461:	
  1849                           
  1850                           ;mTouch.c: 620: {
  1851                           ;mTouch.c: 621: if (--((*sensor).timer) <= 0)
  1852  03B2  2442  3181         	fcall	PL3	;call to abstracted procedure
  1853  03B4  1D03               	skipz
  1854  03B5  2BBC               	goto	l9165
  1855                           
  1856                           ;mTouch.c: 622: {
  1857                           ;mTouch.c: 627: (*sensor).state = MTOUCH_RELEASED;
  1858  03B6  085F               	movf	mTouch_ButtonStateMachine@sensor,w
  1859  03B7  247D  3181         	fcall	PL10	;call to abstracted procedure
  1860                           
  1861                           ;mTouch.c: 629: mTouch_average[mTouch_currentScan] = mTouch_sensorData[mTouch_currentSca
      +                          n];
  1862                           
  1863                           ;mTouch.c: 632: (*sensor).debounce = 2;
  1864  03B9  2430  3181         	fcall	PL2	;call to abstracted procedure
  1865  03BB  2C1F               	goto	L5
  1866  03BC                     l9165:	
  1867                           ;mTouch.c: 635: }
  1868                           
  1869                           
  1870                           ;mTouch.c: 636: else
  1871                           ;mTouch.c: 637: {
  1872                           ;mTouch.c: 639: mTouch_state.areInitialized = 0;
  1873  03BC  10BD               	bcf	_mTouch_state,1
  1874  03BD  3400               	retlw	0
  1875  03BE                     L6:	
  1876                           ;mTouch.c: 674: {
  1877                           ;mTouch.c: 686: if ((*sensor).debounce == 0)
  1878                           
  1879  03BE  2491  3181         	fcall	PL13	;call to abstracted procedure
  1880  03C0  1D03               	skipz
  1881  03C1  2BD0               	goto	l23479
  1882                           
  1883                           ;mTouch.c: 687: {
  1884                           ;mTouch.c: 688: (*sensor).debounce = 2;
  1885  03C2  085F               	movf	mTouch_ButtonStateMachine@sensor,w
  1886  03C3  3E04               	addlw	4
  1887                           
  1888                           ;mTouch.c: 694: (*sensor).state = MTOUCH_PRESSED;
  1889  03C4  2459  3181         	fcall	PL5	;call to abstracted procedure
  1890                           
  1891                           ;mTouch.c: 698: (*sensor).timer = 3000;
  1892  03C6  2459  3181         	fcall	PL5	;call to abstracted procedure
  1893  03C8  3E02               	addlw	2
  1894  03C9  0086               	movwf	6
  1895  03CA  30B8               	movlw	184
  1896  03CB  3FC0               	movwi [0]fsr1
  1897  03CC  300B               	movlw	11
  1898  03CD  3FC1               	movwi [1]fsr1
  1899  03CE                     l23477:	
  1900                           
  1901                           ;mTouch.c: 710: mTouch_state.buttonStateChange = 1;
  1902  03CE  153D               	bsf	_mTouch_state,2
  1903                           
  1904                           ;mTouch.c: 714: }
  1905  03CF  3400               	retlw	0
  1906  03D0                     l23479:	
  1907                           
  1908                           ;mTouch.c: 715: else
  1909                           ;mTouch.c: 716: {
  1910                           ;mTouch.c: 717: (*sensor).debounce--;
  1911  03D0  085F               	movf	mTouch_ButtonStateMachine@sensor,w
  1912  03D1  2491               	fcall	PL13	;call to abstracted procedure
  1913  03D2  00DB               	movwf	??_mTouch_ButtonStateMachine
  1914  03D3  03DB               	decf	??_mTouch_ButtonStateMachine,f
  1915  03D4  0801               	movf	1,w
  1916  03D5  065B               	xorwf	??_mTouch_ButtonStateMachine,w
  1917  03D6  39FC               	andlw	-4
  1918  03D7  065B               	xorwf	??_mTouch_ButtonStateMachine,w
  1919  03D8                     L3:	
  1920  03D8  0081               	movwf	1
  1921  03D9                     l23465:	
  1922                           
  1923                           ;mTouch.c: 645: }
  1924                           ;mTouch.c: 647: return 0;
  1925  03D9  3400               	retlw	0
  1926  03DA                     l23469:	
  1927                           
  1928                           ;mTouch.c: 671: {
  1929                           ;mTouch.c: 673: if(delta > (int16_t)mTouch_pressThreshold[mTouch_currentScan])
  1930  03DA  2468  3181         	fcall	PL7	;call to abstracted procedure
  1931  03DC  00DB               	movwf	??_mTouch_ButtonStateMachine
  1932  03DD  3F01               	moviw [1]fsr0
  1933  03DE  00DC               	movwf	??_mTouch_ButtonStateMachine+1
  1934  03DF  085E               	movf	mTouch_ButtonStateMachine@delta+1,w
  1935  03E0  025C               	subwf	??_mTouch_ButtonStateMachine+1,w
  1936  03E1  1D03               	skipz
  1937  03E2  2BE5               	goto	u1795
  1938  03E3  085D               	movf	mTouch_ButtonStateMachine@delta,w
  1939  03E4  025B               	subwf	??_mTouch_ButtonStateMachine,w
  1940  03E5                     u1795:	
  1941                           
  1942                           ;mTouch.c: 732: else
  1943                           ;mTouch.c: 733: {
  1944                           ;mTouch.c: 735: (*sensor).debounce = 2;
  1945  03E5  085F               	movf	mTouch_ButtonStateMachine@sensor,w
  1946  03E6  1C03               	btfss	3,0
  1947  03E7  2BBE               	goto	L6
  1948  03E8  3E04               	addlw	4
  1949  03E9  0086               	movwf	6
  1950  03EA  0187               	clrf	7
  1951  03EB  0801               	movf	1,w
  1952  03EC  39FC               	andlw	-4
  1953  03ED  3802               	iorlw	2
  1954  03EE  0081               	movwf	1
  1955                           
  1956                           ;mTouch.c: 743: return 1;
  1957  03EF  3401               	retlw	1
  1958  03F0                     l23491:	
  1959                           
  1960                           ;mTouch.c: 780: {
  1961                           ;mTouch.c: 785: if (--((*sensor).timer) <= 0)
  1962  03F0  2442  3181         	fcall	PL3	;call to abstracted procedure
  1963  03F2  1D03               	skipz
  1964  03F3  2C00               	goto	l23503
  1965                           
  1966                           ;mTouch.c: 786: {
  1967                           ;mTouch.c: 790: (*sensor).state = MTOUCH_RELEASED;
  1968  03F4  085F               	movf	mTouch_ButtonStateMachine@sensor,w
  1969  03F5  247D  3181         	fcall	PL10	;call to abstracted procedure
  1970                           
  1971                           ;mTouch.c: 791: (*sensor).timeout = 1;
  1972  03F7  085F               	movf	mTouch_ButtonStateMachine@sensor,w
  1973  03F8  0086               	movwf	6
  1974  03F9  1581               	bsf	1,3
  1975                           
  1976                           ;mTouch.c: 793: mTouch_average[mTouch_currentScan] = mTouch_sensorData[mTouch_currentSca
      +                          n];
  1977                           
  1978                           ;mTouch.c: 796: (*sensor).debounce = 2;
  1979  03FA  2430  3181         	fcall	PL2	;call to abstracted procedure
  1980  03FC  0801               	movf	1,w
  1981  03FD  39FC               	andlw	-4
  1982  03FE  3802               	iorlw	2
  1983  03FF  2C1A               	goto	L4
  1984  0400                     l23503:	
  1985                           
  1986                           ;mTouch.c: 803: }
  1987                           ;mTouch.c: 810: if (delta < (int16_t)mTouch_releaseThreshold[mTouch_currentScan])
  1988  0400  246F  3181         	fcall	PL8	;call to abstracted procedure
  1989  0402  00DB               	movwf	??_mTouch_ButtonStateMachine
  1990  0403  3F01               	moviw [1]fsr0
  1991  0404  00DC               	movwf	??_mTouch_ButtonStateMachine+1
  1992  0405  025E               	subwf	mTouch_ButtonStateMachine@delta+1,w
  1993  0406  1D03               	skipz
  1994  0407  2C0A               	goto	u1825
  1995  0408  085B               	movf	??_mTouch_ButtonStateMachine,w
  1996  0409  025D               	subwf	mTouch_ButtonStateMachine@delta,w
  1997  040A                     u1825:	
  1998                           
  1999                           ;mTouch.c: 816: {
  2000                           ;mTouch.c: 819: if ((*sensor).debounce == 0)
  2001  040A  085F               	movf	mTouch_ButtonStateMachine@sensor,w
  2002  040B  1803               	skipnc
  2003  040C  2C1C               	goto	L7
  2004  040D  3E04               	addlw	4
  2005  040E  2497  3181         	fcall	PL15	;call to abstracted procedure
  2006  0410  1D03               	skipz
  2007  0411  2BD0               	goto	l23479
  2008                           
  2009                           ;mTouch.c: 820: {
  2010                           ;mTouch.c: 821: (*sensor).debounce = 2;
  2011  0412  085F               	movf	mTouch_ButtonStateMachine@sensor,w
  2012  0413  3E04               	addlw	4
  2013                           
  2014                           ;mTouch.c: 827: (*sensor).state = MTOUCH_RELEASED;
  2015  0414  2459  3181         	fcall	PL5	;call to abstracted procedure
  2016  0416  0086               	movwf	6
  2017  0417  0801               	movf	1,w
  2018  0418  39FC               	andlw	-4
  2019  0419  3801               	iorlw	1
  2020  041A                     L4:	
  2021  041A  0081               	movwf	1
  2022  041B  2BCE               	goto	l23477
  2023  041C                     L7:	
  2024                           ;mTouch.c: 845: else
  2025                           ;mTouch.c: 846: {
  2026                           ;mTouch.c: 849: (*sensor).debounce = 2;
  2027                           
  2028  041C  3E04               	addlw	4
  2029  041D  0086               	movwf	6
  2030  041E  0187               	clrf	7
  2031  041F                     L5:	
  2032  041F  0801               	movf	1,w
  2033  0420  39FC               	andlw	-4
  2034  0421  3802               	iorlw	2
  2035  0422  2BD8               	goto	L3
  2036  0423                     l23521:	
  2037  0423  085F               	movf	mTouch_ButtonStateMachine@sensor,w
  2038  0424  2497  3181         	fcall	PL15	;call to abstracted procedure
  2039                           
  2040                           ; Switch size 1, requested type "space"
  2041                           ; Number of cases is 3, Range of values is 0 to 2
  2042                           ; switch strategies available:
  2043                           ; Name         Instructions Cycles
  2044                           ; simple_byte           10     6 (average)
  2045                           ; direct_byte           12     6 (fixed)
  2046                           ; jumptable            260     6 (fixed)
  2047                           ; rangetable             7     4 (fixed)
  2048                           ; spacedrange           11     6 (fixed)
  2049                           ; locatedrange           3     3 (fixed)
  2050                           ;	Chosen strategy is simple_byte
  2051  0426  1903               	skipnz
  2052  0427  2BB2               	goto	l23461
  2053  0428  3A01               	xorlw	1	; case 1
  2054  0429  1903               	skipnz
  2055  042A  2BDA               	goto	l23469
  2056  042B  3A03               	xorlw	3	; case 2
  2057  042C  1903               	skipnz
  2058  042D  2BF0               	goto	l23491
  2059  042E  2BD9               	goto	l23465
  2060  042F  0008               	return
  2061  0430                     __end_of_mTouch_ButtonStateMachine:	
  2062  0430                     PL2:	
  2063  0430  353B               	lslf	_mTouch_currentScan,w
  2064  0431  3E2A               	addlw	_mTouch_sensorData& (0+255)
  2065  0432  0086               	movwf	6
  2066  0433  3F40               	moviw [0]fsr1
  2067  0434  00DB               	movwf	??_mTouch_ButtonStateMachine
  2068  0435  3F41               	moviw [1]fsr1
  2069  0436  00DC               	movwf	??_mTouch_ButtonStateMachine+1
  2070  0437  353B               	lslf	_mTouch_currentScan,w
  2071  0438  3E20               	addlw	_mTouch_average& (0+255)
  2072  0439  0086               	movwf	6
  2073  043A  085B               	movf	??_mTouch_ButtonStateMachine,w
  2074  043B  3FC0               	movwi [0]fsr1
  2075  043C  085C               	movf	??_mTouch_ButtonStateMachine+1,w
  2076  043D  3FC1               	movwi [1]fsr1
  2077  043E  085F               	movf	mTouch_ButtonStateMachine@sensor,w
  2078  043F  3E04               	addlw	4
  2079  0440  0086               	movwf	6
  2080  0441  0008               	return
  2081  0442                     PL3:	
  2082  0442  085F               	movf	mTouch_ButtonStateMachine@sensor,w
  2083  0443  3E02               	addlw	2
  2084  0444  0086               	movwf	6
  2085  0445  3001               	movlw	1
  2086  0446  0187               	clrf	7
  2087  0447  0281               	subwf	1,f
  2088  0448  3141               	addfsr 1,1
  2089  0449  3000               	movlw	0
  2090  044A  3B81               	subwfb	1,f
  2091  044B  317F               	addfsr 1,-1
  2092  044C  0016               	moviw fsr1++
  2093  044D  0401               	iorwf	1,w
  2094  044E  0008               	return
  2095  044F                     PL4:	
  2096  044F  36DC               	lsrf	??_mTouch_UpdateBaseline+1,f
  2097  0450  0CDB               	rrf	??_mTouch_UpdateBaseline,f
  2098  0451  36DC               	lsrf	??_mTouch_UpdateBaseline+1,f
  2099  0452  0CDB               	rrf	??_mTouch_UpdateBaseline,f
  2100  0453  36DC               	lsrf	??_mTouch_UpdateBaseline+1,f
  2101  0454  0CDB               	rrf	??_mTouch_UpdateBaseline,f
  2102  0455  353B               	lslf	_mTouch_currentScan,w
  2103  0456  3E20               	addlw	_mTouch_average& (0+255)
  2104  0457  0086               	movwf	6
  2105  0458  0008               	return
  2106  0459                     PL5:	
  2107  0459  0086               	movwf	6
  2108  045A  0801               	movf	1,w
  2109  045B  39FC               	andlw	-4
  2110  045C  3802               	iorlw	2
  2111  045D  0081               	movwf	1
  2112  045E  085F               	movf	mTouch_ButtonStateMachine@sensor,w
  2113  045F  0008               	return
  2114  0460                     PL6:	
  2115  0460  00B8               	movwf	_Key_LED
  2116  0461  0C38               	rrf	_Key_LED,w
  2117  0462  00D8               	movwf	??_key_execute
  2118  0463  0CD8               	rrf	??_key_execute,f
  2119  0464  0C58               	rrf	??_key_execute,w
  2120  0465  3901               	andlw	1
  2121  0466  00D9               	movwf	??_key_execute+1
  2122  0467  0008               	return
  2123  0468                     PL7:	
  2124  0468  353B               	lslf	_mTouch_currentScan,w
  2125  0469  3E20               	addlw	low (_mTouch_pressThreshold| (0+32768))
  2126  046A  0084               	movwf	4
  2127  046B  3080               	movlw	high (_mTouch_pressThreshold| (0+32768))
  2128  046C  0085               	movwf	5
  2129  046D  3F00               	moviw [0]fsr0
  2130  046E  0008               	return
  2131  046F                     PL8:	
  2132  046F  353B               	lslf	_mTouch_currentScan,w
  2133  0470  3E2A               	addlw	low (_mTouch_releaseThreshold| (0+32768))
  2134  0471  0084               	movwf	4
  2135  0472  3080               	movlw	high (_mTouch_releaseThreshold| (0+32768))
  2136  0473  0085               	movwf	5
  2137  0474  3F00               	moviw [0]fsr0
  2138  0475  0008               	return
  2139  0476                     PL9:	
  2140  0476  3E20               	addlw	_mTouch_average& (0+255)
  2141  0477  0086               	movwf	6
  2142  0478  3F40               	moviw [0]fsr1
  2143  0479  00DB               	movwf	??_mTouch_UpdateBaseline
  2144  047A  3F41               	moviw [1]fsr1
  2145  047B  00DC               	movwf	??_mTouch_UpdateBaseline+1
  2146  047C  0008               	return
  2147  047D                     PL10:	
  2148  047D  0086               	movwf	6
  2149  047E  0187               	clrf	7
  2150  047F  0801               	movf	1,w
  2151  0480  39FC               	andlw	-4
  2152  0481  3801               	iorlw	1
  2153  0482  0081               	movwf	1
  2154  0483  0008               	return
  2155  0484                     PL11:	
  2156  0484  00B8               	movwf	_Key_LED
  2157  0485  0C38               	rrf	_Key_LED,w
  2158  0486  3901               	andlw	1
  2159  0487  00D8               	movwf	??_key_execute
  2160  0488  0C58               	rrf	??_key_execute,w
  2161  0489  11FA               	bcf	_flag_LRclose/(0+8),_flag_LRclose& (0+7)
  2162  048A  0008               	return
  2163  048B                     PL12:	
  2164  048B  3E40               	addlw	(_mTouch_stateVars+2)& (0+255)
  2165  048C  0086               	movwf	6
  2166  048D  30FF               	movlw	255
  2167  048E  0187               	clrf	7
  2168  048F  0481               	iorwf	1,f
  2169  0490  0008               	return
  2170  0491                     PL13:	
  2171  0491  3E04               	addlw	4
  2172  0492  0086               	movwf	6
  2173  0493  0187               	clrf	7
  2174  0494  0801               	movf	1,w
  2175  0495  3903               	andlw	3
  2176  0496  0008               	return
  2177  0497                     PL15:	
  2178  0497  0086               	movwf	6
  2179  0498  0187               	clrf	7
  2180  0499  0801               	movf	1,w
  2181  049A  3903               	andlw	3
  2182  049B  0008               	return
  2183                           
  2184                           	psect	bitbssCOMMON
  2185  03D0                     __pbitbssCOMMON:	
  2186  03D0                     _LED_enable:	
  2187  03D0                     	ds	1
  2188  03D1                     _flag_HRclose:	
  2189  03D1                     	ds	1
  2190  03D2                     _flag_HRopen:	
  2191  03D2                     	ds	1
  2192  03D3                     _flag_LRclose:	
  2193  03D3                     	ds	1
  2194  03D4                     _flag_LRopen:	
  2195  03D4                     	ds	1
  2196  03D5                     _flag_light:	
  2197  03D5                     	ds	1
  2198                           
  2199                           	psect	bssCOMMON
  2200  007B                     __pbssCOMMON:	
  2201  007B                     _mTouch_lastResult:	
  2202  007B                     	ds	2
  2203  007D                     _mTouch_currentAcqData:	
  2204  007D                     	ds	1
  2205                           
  2206                           	psect	bssBANK0
  2207  0020                     __pbssBANK0:	
  2208  0020                     _mTouch_average:	
  2209  0020                     	ds	10
  2210  002A                     _mTouch_sensorData:	
  2211  002A                     	ds	10
  2212  0034                     _Power_Timer:	
  2213  0034                     	ds	2
  2214  0036                     _timer:	
  2215  0036                     	ds	2
  2216  0038                     _Key_LED:	
  2217  0038                     	ds	1
  2218  0039                     _Key_state:	
  2219  0039                     	ds	1
  2220  003A                     _PWMcount:	
  2221  003A                     	ds	1
  2222  003B                     _mTouch_currentScan:	
  2223  003B                     	ds	1
  2224  003C                     _mTouch_delayCount:	
  2225  003C                     	ds	1
  2226  003D                     _mTouch_state:	
  2227  003D                     	ds	1
  2228  003E                     _mTouch_stateVars:	
  2229  003E                     	ds	26
  2230                           
  2231                           	psect	dataBANK0
  2232  0065                     __pdataBANK0:	
  2233  0065                     _mTouch_jitter:	
  2234  0065                     	ds	1
  2235                           
  2236                           	psect	bssBANK1
  2237  00A0                     __pbssBANK1:	
  2238  00A0                     _mTouch_acqData:	
  2239  00A0                     	ds	20
  2240                           
  2241                           	psect	clrtext
  2242  0786                     clear_ram:	
  2243                           ;	Called with FSR0 containing the base address, and
  2244                           ;	WREG with the size to clear
  2245                           
  2246  0786  0064               	clrwdt	;clear the watchdog before getting into this loop
  2247  0787                     clrloop:	
  2248  0787  0180               	clrf	0	;clear RAM location pointed to by FSR
  2249  0788  3101               	addfsr 0,1
  2250  0789  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2251  078A  2F87               	goto	clrloop	;have we reached the end yet?
  2252  078B  3400               	retlw	0	;all done for this memory range, return
  2253                           
  2254                           	psect	cstackCOMMON
  2255  0070                     __pcstackCOMMON:	
  2256  0070                     ?_Example_System_Init:	
  2257  0070                     ?_mTouch_Init:	
  2258                           ; 0 bytes @ 0x0
  2259                           
  2260  0070                     ?_mTouch_Decode:	
  2261                           ; 0 bytes @ 0x0
  2262                           
  2263  0070                     ?_key_execute:	
  2264                           ; 0 bytes @ 0x0
  2265                           
  2266  0070                     ?_ICH_Timers:	
  2267                           ; 0 bytes @ 0x0
  2268                           
  2269  0070                     ??_ICH_Timers:	
  2270                           ; 0 bytes @ 0x0
  2271                           
  2272  0070                     ?_ICH_Outputs:	
  2273                           ; 0 bytes @ 0x0
  2274                           
  2275  0070                     ??_ICH_Outputs:	
  2276                           ; 0 bytes @ 0x0
  2277                           
  2278  0070                     ?_mTouch_Scan:	
  2279                           ; 0 bytes @ 0x0
  2280                           
  2281  0070                     ?_mTouch_ChangeMode:	
  2282                           ; 0 bytes @ 0x0
  2283                           
  2284  0070                     ?_mTouch_UpdateBaseline:	
  2285                           ; 0 bytes @ 0x0
  2286                           
  2287  0070                     ?_mTouch_ScanA_0:	
  2288                           ; 0 bytes @ 0x0
  2289                           
  2290  0070                     ??_mTouch_ScanA_0:	
  2291                           ; 0 bytes @ 0x0
  2292                           
  2293  0070                     ?_mTouch_ScanA_1:	
  2294                           ; 0 bytes @ 0x0
  2295                           
  2296  0070                     ??_mTouch_ScanA_1:	
  2297                           ; 0 bytes @ 0x0
  2298                           
  2299  0070                     ?_mTouch_ScanA_2:	
  2300                           ; 0 bytes @ 0x0
  2301                           
  2302  0070                     ??_mTouch_ScanA_2:	
  2303                           ; 0 bytes @ 0x0
  2304                           
  2305  0070                     ?_mTouch_ScanA_3:	
  2306                           ; 0 bytes @ 0x0
  2307                           
  2308  0070                     ??_mTouch_ScanA_3:	
  2309                           ; 0 bytes @ 0x0
  2310                           
  2311  0070                     ?_mTouch_ScanA_4:	
  2312                           ; 0 bytes @ 0x0
  2313                           
  2314  0070                     ??_mTouch_ScanA_4:	
  2315                           ; 0 bytes @ 0x0
  2316                           
  2317  0070                     ?_mTouch_ScanB_0:	
  2318                           ; 0 bytes @ 0x0
  2319                           
  2320  0070                     ??_mTouch_ScanB_0:	
  2321                           ; 0 bytes @ 0x0
  2322                           
  2323  0070                     ?_mTouch_ScanB_1:	
  2324                           ; 0 bytes @ 0x0
  2325                           
  2326  0070                     ??_mTouch_ScanB_1:	
  2327                           ; 0 bytes @ 0x0
  2328                           
  2329  0070                     ?_mTouch_ScanB_2:	
  2330                           ; 0 bytes @ 0x0
  2331                           
  2332  0070                     ??_mTouch_ScanB_2:	
  2333                           ; 0 bytes @ 0x0
  2334                           
  2335  0070                     ?_mTouch_ScanB_3:	
  2336                           ; 0 bytes @ 0x0
  2337                           
  2338  0070                     ??_mTouch_ScanB_3:	
  2339                           ; 0 bytes @ 0x0
  2340                           
  2341  0070                     ?_mTouch_ScanB_4:	
  2342                           ; 0 bytes @ 0x0
  2343                           
  2344  0070                     ??_mTouch_ScanB_4:	
  2345                           ; 0 bytes @ 0x0
  2346                           
  2347  0070                     ?_mTouch_WaitForGoDone:	
  2348                           ; 0 bytes @ 0x0
  2349                           
  2350  0070                     ??_mTouch_WaitForGoDone:	
  2351                           ; 0 bytes @ 0x0
  2352                           
  2353  0070                     ?_mTouch_StoreScanA:	
  2354                           ; 0 bytes @ 0x0
  2355                           
  2356  0070                     ??_mTouch_StoreScanA:	
  2357                           ; 0 bytes @ 0x0
  2358                           
  2359  0070                     ?_mTouch_StoreScanB:	
  2360                           ; 0 bytes @ 0x0
  2361                           
  2362  0070                     ??_mTouch_StoreScanB:	
  2363                           ; 0 bytes @ 0x0
  2364                           
  2365  0070                     ?_mTouch_DecimationFilter:	
  2366                           ; 0 bytes @ 0x0
  2367                           
  2368  0070                     ??_mTouch_DecimationFilter:	
  2369                           ; 0 bytes @ 0x0
  2370                           
  2371  0070                     ?_main:	
  2372                           ; 0 bytes @ 0x0
  2373                           
  2374  0070                     ?_ISR:	
  2375                           ; 0 bytes @ 0x0
  2376                           
  2377  0070                     ?i1_mTouch_ChangeMode:	
  2378                           ; 0 bytes @ 0x0
  2379                           
  2380  0070                     ??i1_mTouch_ChangeMode:	
  2381                           ; 0 bytes @ 0x0
  2382                           
  2383  0070                     ?_mTouch_ButtonStateMachine:	
  2384                           ; 0 bytes @ 0x0
  2385                           
  2386                           
  2387                           ; 1 bytes @ 0x0
  2388  0070                     	ds	5
  2389  0075                     mTouch_DecimationFilter@result:	
  2390                           
  2391                           ; 2 bytes @ 0x5
  2392  0075                     	ds	2
  2393  0077                     ??_mTouch_Scan:	
  2394                           
  2395                           ; 0 bytes @ 0x7
  2396  0077                     	ds	2
  2397  0079                     ??_ISR:	
  2398                           
  2399                           ; 0 bytes @ 0x9
  2400  0079                     	ds	1
  2401                           
  2402                           	psect	cstackBANK0
  2403  0058                     __pcstackBANK0:	
  2404  0058                     ??_Example_System_Init:	
  2405  0058                     ??_key_execute:	
  2406                           ; 0 bytes @ 0x0
  2407                           
  2408  0058                     ??_mTouch_ChangeMode:	
  2409                           ; 0 bytes @ 0x0
  2410                           
  2411  0058                     ?___bmul:	
  2412                           ; 0 bytes @ 0x0
  2413                           
  2414  0058                     ___bmul@multiplicand:	
  2415                           ; 1 bytes @ 0x0
  2416                           
  2417                           
  2418                           ; 1 bytes @ 0x0
  2419  0058                     	ds	1
  2420  0059                     ??___bmul:	
  2421  0059                     ___bmul@product:	
  2422                           ; 0 bytes @ 0x1
  2423                           
  2424                           
  2425                           ; 1 bytes @ 0x1
  2426  0059                     	ds	1
  2427  005A                     ___bmul@multiplier:	
  2428                           
  2429                           ; 1 bytes @ 0x2
  2430  005A                     	ds	1
  2431  005B                     ??_mTouch_Init:	
  2432  005B                     ??_mTouch_ButtonStateMachine:	
  2433                           ; 0 bytes @ 0x3
  2434                           
  2435  005B                     ??_mTouch_UpdateBaseline:	
  2436                           ; 0 bytes @ 0x3
  2437                           
  2438  005B                     mTouch_Init@acqData:	
  2439                           ; 0 bytes @ 0x3
  2440                           
  2441                           
  2442                           ; 1 bytes @ 0x3
  2443  005B                     	ds	1
  2444  005C                     mTouch_Init@sensorIndex:	
  2445                           
  2446                           ; 1 bytes @ 0x4
  2447  005C                     	ds	1
  2448  005D                     mTouch_ButtonStateMachine@delta:	
  2449  005D                     key_execute@a:	
  2450                           ; 2 bytes @ 0x5
  2451                           
  2452                           
  2453                           ; 2 bytes @ 0x5
  2454  005D                     	ds	2
  2455  005F                     mTouch_ButtonStateMachine@sensor:	
  2456                           
  2457                           ; 1 bytes @ 0x7
  2458  005F                     	ds	3
  2459  0062                     mTouch_UpdateBaseline@reading:	
  2460                           
  2461                           ; 2 bytes @ 0xA
  2462  0062                     	ds	2
  2463  0064                     ??_mTouch_Decode:	
  2464  0064                     ??_main:	
  2465                           ; 0 bytes @ 0xC
  2466                           
  2467                           
  2468                           ; 0 bytes @ 0xC
  2469  0064                     	ds	1
  2470                           
  2471                           	psect	intentry
  2472  0004                     __pintentry:	
  2473 ;; =============== function _Example_System_Init ends ============
  2474                           
  2475                           
  2476 ;; *************** function _ISR *****************
  2477 ;; Defined at:
  2478 ;;		line 249 in file "S:\Eng Paul Li\Sourcecode\ICH R2ULBL 02 Ver B\main.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;		None
  2483 ;; Return value:  Size  Location     Type
  2484 ;;		None               void
  2485 ;; Registers used:
  2486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 1F/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2492 ;;      Params:         0       0       0       0
  2493 ;;      Locals:         0       0       0       0
  2494 ;;      Temps:          1       0       0       0
  2495 ;;      Totals:         1       0       0       0
  2496 ;;Total ram usage:        1 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:    2
  2499 ;; This function calls:
  2500 ;;		_ICH_Timers
  2501 ;;		_ICH_Outputs
  2502 ;;		_mTouch_Scan
  2503 ;; This function is called by:
  2504 ;;		Interrupt level 1
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507  0004                     _ISR:	
  2508                           
  2509                           ; Regs used in _ISR: [allreg]
  2510  0004  3180               	pagesel	$
  2511  0005  0020               	movlb	0	; select bank0
  2512  0006  087F               	movf	127,w
  2513  0007  00F9               	movwf	??_ISR
  2514                           
  2515                           ;main.c: 250: if (TMR2IF)
  2516  0008  1C91               	btfss	17,1
  2517  0009  280E               	goto	i1l23189
  2518                           
  2519                           ;main.c: 251: {
  2520                           ;main.c: 253: ICH_Timers();
  2521  000A  3187  2766  3180   	fcall	_ICH_Timers
  2522                           
  2523                           ;main.c: 254: TMR2IF = 0;
  2524  000D  1091               	bcf	17,1
  2525  000E                     i1l23189:	
  2526                           
  2527                           ;main.c: 255: }
  2528                           ;main.c: 257: if (T0IF)
  2529  000E  1D0B               	btfss	11,2
  2530  000F  2818               	goto	i1l1894
  2531                           
  2532                           ;main.c: 258: {
  2533                           ;main.c: 260: ICH_Outputs();
  2534  0010  3185  2594  3180   	fcall	_ICH_Outputs
  2535                           
  2536                           ;main.c: 293: if ((TMR0IF && TMR0IE))
  2537  0013  190B               	btfsc	11,2
  2538  0014  1E8B               	btfss	11,5
  2539  0015  2818               	goto	i1l1894
  2540                           
  2541                           ;main.c: 294: {
  2542                           ;main.c: 295: mTouch_Scan();
  2543  0016  3184  249C         	fcall	_mTouch_Scan
  2544  0018                     i1l1894:	
  2545  0018  0879               	movf	??_ISR,w
  2546  0019  0020               	movlb	0	; select bank0
  2547  001A  00FF               	movwf	127
  2548  001B  0009               	retfie
  2549  001C                     __end_of_ISR:	
  2550                           
  2551                           	psect	text581
  2552  049C                     __ptext581:	
  2553 ;; =============== function _ISR ends ============
  2554                           
  2555                           
  2556 ;; *************** function _mTouch_Scan *****************
  2557 ;; Defined at:
  2558 ;;		line 188 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;		None               void
  2565 ;; Registers used:
  2566 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 1F/2
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: FFE00/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2572 ;;      Params:         0       0       0       0
  2573 ;;      Locals:         0       0       0       0
  2574 ;;      Temps:          2       0       0       0
  2575 ;;      Totals:         2       0       0       0
  2576 ;;Total ram usage:        2 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    1
  2579 ;; This function calls:
  2580 ;;		_mTouch_ScanA_4
  2581 ;;		_mTouch_ScanA_3
  2582 ;;		_mTouch_ScanA_2
  2583 ;;		_mTouch_ScanA_1
  2584 ;;		_mTouch_ScanA_0
  2585 ;;		_mTouch_WaitForGoDone
  2586 ;;		_mTouch_StoreScanA
  2587 ;;		_mTouch_ScanB_4
  2588 ;;		_mTouch_ScanB_3
  2589 ;;		_mTouch_ScanB_2
  2590 ;;		_mTouch_ScanB_1
  2591 ;;		_mTouch_ScanB_0
  2592 ;;		_mTouch_StoreScanB
  2593 ;;		_mTouch_DecimationFilter
  2594 ;;		i1_mTouch_ChangeMode
  2595 ;; This function is called by:
  2596 ;;		_ISR
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599  049C                     _mTouch_Scan:	
  2600  049C                     mTouch_Scan:	
  2601                           ; Regs used in _mTouch_Scan: [wreg+fsr1l-status,0+pclath+cstack]
  2602                           
  2603                           
  2604                           ;cas16f1933.h: 220: mTouch_currentAcqData = &mTouch_acqData[mTouch_currentScan];
  2605                           
  2606                           ;#
  2607  049C  0020               	movlb	0	; select bank0
  2608  049D  083B               	movf	_mTouch_currentScan,w
  2609  049E  0709               	addwf	9,w
  2610  049F  0709               	addwf	9,w
  2611  04A0  3EA0               	addlw	_mTouch_acqData& (0+255)
  2612  04A1  00FD               	movwf	_mTouch_currentAcqData
  2613                           
  2614                           ;cas16f1933.h: 232: mTouch_ScanA[mTouch_currentScan]();
  2615  04A2  083B               	movf	_mTouch_currentScan,w
  2616  04A3  3E34               	addlw	low (_mTouch_ScanA| (0+32768))
  2617  04A4  3180               	movlp	high __stringtab
  2618  04A5  000A               	callw
  2619  04A6  3181  2101  3184   	fcall	i1fptable
  2620                           
  2621                           ;cas16f1933.h: 238: mTouch_WaitForGoDone();
  2622  04A9  24F4  3184         	fcall	_mTouch_WaitForGoDone
  2623                           
  2624                           ;cas16f1933.h: 239: mTouch_StoreScanA();
  2625  04AB  24FE               	fcall	_mTouch_StoreScanA
  2626                           
  2627                           ;cas16f1933.h: 245: mTouch_ScanB[mTouch_currentScan]();
  2628  04AC  0020               	movlb	0	; select bank0
  2629  04AD  083B               	movf	_mTouch_currentScan,w
  2630  04AE  3E39               	addlw	low (_mTouch_ScanB| (0+32768))
  2631  04AF  3180               	movlp	high __stringtab
  2632  04B0  000A               	callw
  2633  04B1  3181  2101  3184   	fcall	i1fptable
  2634                           
  2635                           ;cas16f1933.h: 251: mTouch_WaitForGoDone();
  2636  04B4  24F4  3184         	fcall	_mTouch_WaitForGoDone
  2637                           
  2638                           ;cas16f1933.h: 252: mTouch_StoreScanB();
  2639  04B6  2507  3184         	fcall	_mTouch_StoreScanB
  2640                           
  2641                           ;cas16f1933.h: 261: mTouch_DecimationFilter();
  2642  04B8  2512  3184         	fcall	_mTouch_DecimationFilter
  2643                           
  2644                           ;cas16f1933.h: 278: mTouch_currentScan++;
  2645  04BA  0020               	movlb	0	; select bank0
  2646  04BB  0ABB               	incf	_mTouch_currentScan,f
  2647                           
  2648                           ;cas16f1933.h: 282: if (mTouch_currentScan == 5)
  2649  04BC  083B               	movf	_mTouch_currentScan,w
  2650  04BD  3A05               	xorlw	5
  2651  04BE  1D03               	skipz
  2652  04BF  2CE8               	goto	i1l23299
  2653                           
  2654                           ;cas16f1933.h: 283: {
  2655                           ;cas16f1933.h: 289: mTouch_currentScan = 0;
  2656  04C0  01BB               	clrf	_mTouch_currentScan
  2657                           
  2658                           ;cas16f1933.h: 311: if (--mTouch_stateVars.sampleCounter == 0)
  2659  04C1  0BBE               	decfsz	_mTouch_stateVars,f
  2660  04C2  2CE8               	goto	i1l23299
  2661                           
  2662                           ;cas16f1933.h: 312: {
  2663                           ;cas16f1933.h: 313: mTouch_stateVars.sampleCounter = 30;
  2664  04C3  301E               	movlw	30
  2665  04C4  00BE               	movwf	_mTouch_stateVars
  2666  04C5                     i1l23287:	
  2667                           
  2668                           ;cas16f1933.h: 318: {
  2669                           ;cas16f1933.h: 319: mTouch_currentAcqData = &mTouch_acqData[mTouch_currentScan];
  2670  04C5  083B               	movf	_mTouch_currentScan,w
  2671  04C6  0709               	addwf	9,w
  2672  04C7  0709               	addwf	9,w
  2673  04C8  3EA0               	addlw	_mTouch_acqData& (0+255)
  2674  04C9  00FD               	movwf	_mTouch_currentAcqData
  2675                           
  2676                           ;cas16f1933.h: 320: mTouch_sensorData[mTouch_currentScan] = (uint16_t)(((uint24_t)((*mTo
      +                          uch_currentAcqData).accumulator.v) & 0xFFFFF) >> 0);
  2677  04CA  0086               	movwf	6
  2678  04CB  0187               	clrf	7
  2679  04CC  3F40               	moviw [0]fsr1
  2680  04CD  00F7               	movwf	??_mTouch_Scan
  2681  04CE  3F41               	moviw [1]fsr1
  2682  04CF  00F8               	movwf	??_mTouch_Scan+1
  2683  04D0  353B               	lslf	_mTouch_currentScan,w
  2684  04D1  3E2A               	addlw	_mTouch_sensorData& (0+255)
  2685  04D2  0086               	movwf	6
  2686  04D3  0877               	movf	??_mTouch_Scan,w
  2687  04D4  3FC0               	movwi [0]fsr1
  2688  04D5  0878               	movf	??_mTouch_Scan+1,w
  2689  04D6  3FC1               	movwi [1]fsr1
  2690                           
  2691                           ;cas16f1933.h: 321: (*mTouch_currentAcqData).accumulator.v &= 0xF00000;
  2692  04D7  087D               	movf	_mTouch_currentAcqData,w
  2693  04D8  0086               	movwf	6
  2694  04D9  3000               	movlw	0
  2695  04DA  0581               	andwf	1,f
  2696  04DB  3141               	addfsr 1,1
  2697  04DC  0581               	andwf	1,f
  2698  04DD  3141               	addfsr 1,1
  2699  04DE  30F0               	movlw	240
  2700  04DF  0581               	andwf	1,f
  2701  04E0  317E               	addfsr 1,-2
  2702                           
  2703                           ;cas16f1933.h: 323: mTouch_currentScan++;
  2704  04E1  0ABB               	incf	_mTouch_currentScan,f
  2705                           
  2706                           ;cas16f1933.h: 324: } while (mTouch_currentScan != 5);
  2707  04E2  083B               	movf	_mTouch_currentScan,w
  2708  04E3  3A05               	xorlw	5
  2709  04E4  1D03               	skipz
  2710  04E5  2CC5               	goto	i1l23287
  2711                           
  2712                           ;cas16f1933.h: 333: mTouch_ChangeMode();
  2713  04E6  2589               	fcall	i1_mTouch_ChangeMode
  2714                           
  2715                           ;cas16f1933.h: 335: mTouch_state.dataReady = 1;
  2716  04E7  143D               	bsf	_mTouch_state,0
  2717  04E8                     i1l23299:	
  2718  04E8  0020               	banksel	_mTouch_jitter	;#
  2719  04E9  1003               	bcf	3,0	;#
  2720  04EA  0C65               	rrf	_mTouch_jitter,w	;#
  2721  04EB  1803               	btfsc	3,0	;#
  2722  04EC  3AB4               	xorlw	180	;#
  2723  04ED  00E5               	movwf	_mTouch_jitter	;#
  2724  04EE  393F               	andlw	63	;#
  2725  04EF  0020               	banksel	21	;#
  2726  04F0  0195               	clrf	21	;#
  2727  04F1  0795               	addwf	21,f	;#
  2728                           
  2729                           ;cas16f1933.h: 362: TMR0IF = 0;
  2730  04F2  110B               	bcf	11,2
  2731  04F3  0008               	return
  2732  04F4                     __end_of_mTouch_Scan:	
  2733  04F4                     __ptext597:	
  2734 ;; =============== function _mTouch_StoreScanA ends ============
  2735                           
  2736                           
  2737 ;; *************** function _mTouch_WaitForGoDone *****************
  2738 ;; Defined at:
  2739 ;;		line 434 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;		None
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;		None               void
  2746 ;; Registers used:
  2747 ;;		wreg
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 1E/0
  2751 ;;		Unchanged: FFFE0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2753 ;;      Params:         0       0       0       0
  2754 ;;      Locals:         0       0       0       0
  2755 ;;      Temps:          0       0       0       0
  2756 ;;      Totals:         0       0       0       0
  2757 ;;Total ram usage:        0 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_mTouch_Scan
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765  04F4                     _mTouch_WaitForGoDone:	
  2766                           
  2767                           ;cas16f1933.h: 435: mTouch_delayCount = 0xFF;
  2768                           
  2769                           ; Regs used in _mTouch_WaitForGoDone: [wreg]
  2770  04F4  30FF               	movlw	255
  2771  04F5  0020               	movlb	0	; select bank0
  2772  04F6  00BC               	movwf	_mTouch_delayCount
  2773  04F7                     i1l11069:	
  2774                           ;cas16f1933.h: 436: while (GO_nDONE && --mTouch_delayCount);
  2775                           
  2776  04F7  0021               	movlb	1	; select bank1
  2777  04F8  1C9D               	btfss	29,1
  2778  04F9  0008               	return
  2779  04FA  0020               	movlb	0	; select bank0
  2780  04FB  0BBC               	decfsz	_mTouch_delayCount,f
  2781  04FC  2CF7               	goto	i1l11069
  2782  04FD  0008               	return
  2783  04FE                     __end_of_mTouch_WaitForGoDone:	
  2784  04FE                     __ptext596:	
  2785 ;; =============== function _mTouch_StoreScanB ends ============
  2786                           
  2787                           
  2788 ;; *************** function _mTouch_StoreScanA *****************
  2789 ;; Defined at:
  2790 ;;		line 440 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;		None
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;		None
  2795 ;; Return value:  Size  Location     Type
  2796 ;;		None               void
  2797 ;; Registers used:
  2798 ;;		wreg
  2799 ;; Tracked objects:
  2800 ;;		On entry : 1E/0
  2801 ;;		On exit  : 1F/1
  2802 ;;		Unchanged: FFFE0/0
  2803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2804 ;;      Params:         0       0       0       0
  2805 ;;      Locals:         0       0       0       0
  2806 ;;      Temps:          0       0       0       0
  2807 ;;      Totals:         0       0       0       0
  2808 ;;Total ram usage:        0 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; This function calls:
  2811 ;;		Nothing
  2812 ;; This function is called by:
  2813 ;;		_mTouch_Scan
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816  04FE                     _mTouch_StoreScanA:	
  2817                           
  2818                           ;cas16f1933.h: 444: mTouch_lastResult = (uint16_t) (ADRESH << 8) + ADRESL;
  2819                           
  2820                           ; Regs used in _mTouch_StoreScanA: [wreg]
  2821  04FE  0021               	movlb	1	; select bank1
  2822  04FF  081C               	movf	28,w	;volatile
  2823  0500  00FC               	movwf	_mTouch_lastResult+1
  2824  0501  01FB               	clrf	_mTouch_lastResult
  2825  0502  081B               	movf	27,w	;volatile
  2826  0503  07FB               	addwf	_mTouch_lastResult,f
  2827  0504  1803               	skipnc
  2828  0505  0AFC               	incf	_mTouch_lastResult+1,f
  2829  0506  0008               	return
  2830  0507                     __end_of_mTouch_StoreScanA:	
  2831  0507                     __ptext595:	
  2832 ;; =============== function _mTouch_DecimationFilter ends ============
  2833                           
  2834                           
  2835 ;; *************** function _mTouch_StoreScanB *****************
  2836 ;; Defined at:
  2837 ;;		line 453 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;		None               void
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0
  2846 ;; Tracked objects:
  2847 ;;		On entry : 1E/1
  2848 ;;		On exit  : 1F/1
  2849 ;;		Unchanged: FFFE0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2851 ;;      Params:         0       0       0       0
  2852 ;;      Locals:         0       0       0       0
  2853 ;;      Temps:          1       0       0       0
  2854 ;;      Totals:         1       0       0       0
  2855 ;;Total ram usage:        1 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; This function calls:
  2858 ;;		Nothing
  2859 ;; This function is called by:
  2860 ;;		_mTouch_Scan
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863  0507                     _mTouch_StoreScanB:	
  2864                           
  2865                           ;cas16f1933.h: 457: mTouch_lastResult = (uint16_t)((ADRESH | 0x04) << 8) + ADRESL - mTou
      +                          ch_lastResult;
  2866                           
  2867                           ; Regs used in _mTouch_StoreScanB: [wreg+status,2+status,0]
  2868  0507  3004               	movlw	4
  2869  0508  0021               	movlb	1	; select bank1
  2870  0509  041C               	iorwf	28,w	;volatile
  2871  050A  00F0               	movwf	??_mTouch_StoreScanB
  2872  050B  087B               	movf	_mTouch_lastResult,w
  2873  050C  021B               	subwf	27,w	;volatile
  2874  050D  00FB               	movwf	_mTouch_lastResult
  2875  050E  087C               	movf	_mTouch_lastResult+1,w
  2876  050F  3B70               	subwfb	??_mTouch_StoreScanB,w
  2877  0510  00FC               	movwf	_mTouch_lastResult+1
  2878  0511  0008               	return
  2879  0512                     __end_of_mTouch_StoreScanB:	
  2880  0512                     __ptext594:	
  2881 ;; =============== function _mTouch_ScanA_4 ends ============
  2882                           
  2883                           
  2884 ;; *************** function _mTouch_DecimationFilter *****************
  2885 ;; Defined at:
  2886 ;;		line 373 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;  result          2    5[COMMON] unsigned int 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;		None               void
  2893 ;; Registers used:
  2894 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2895 ;; Tracked objects:
  2896 ;;		On entry : 1F/1
  2897 ;;		On exit  : 1F/1
  2898 ;;		Unchanged: FFFE0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2900 ;;      Params:         0       0       0       0
  2901 ;;      Locals:         2       0       0       0
  2902 ;;      Temps:          5       0       0       0
  2903 ;;      Totals:         7       0       0       0
  2904 ;;Total ram usage:        7 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_mTouch_Scan
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912  0512                     _mTouch_DecimationFilter:	
  2913                           
  2914                           ;cas16f1933.h: 376: uint16_t result = (uint16_t)((*mTouch_currentAcqData).result.v >> 4);
  2915                           
  2916                           ; Regs used in _mTouch_DecimationFilter: [wreg+fsr1l-status,0]
  2917  0512  258E  3184         	fcall	PL14	;call to abstracted procedure
  2918  0514  00F5               	movwf	mTouch_DecimationFilter@result
  2919  0515  3F41               	moviw [1]fsr1
  2920  0516  00F6               	movwf	mTouch_DecimationFilter@result+1
  2921  0517  300F               	movlw	15
  2922  0518  0EF5               	swapf	mTouch_DecimationFilter@result,f
  2923  0519  0EF6               	swapf	mTouch_DecimationFilter@result+1,f
  2924  051A  05F5               	andwf	mTouch_DecimationFilter@result,f
  2925  051B  0876               	movf	mTouch_DecimationFilter@result+1,w
  2926  051C  39F0               	andlw	240
  2927  051D  04F5               	iorwf	mTouch_DecimationFilter@result,f
  2928  051E  300F               	movlw	15
  2929  051F  05F6               	andwf	mTouch_DecimationFilter@result+1,f
  2930                           
  2931                           ;cas16f1933.h: 394: if ((uint16_t)(mTouch_lastResult) > (uint16_t)(result + 5))
  2932  0520  0875               	movf	mTouch_DecimationFilter@result,w
  2933  0521  3E05               	addlw	5
  2934  0522  00F0               	movwf	??_mTouch_DecimationFilter
  2935  0523  3000               	movlw	0
  2936  0524  3D76               	addwfc	mTouch_DecimationFilter@result+1,w
  2937  0525  00F1               	movwf	??_mTouch_DecimationFilter+1
  2938  0526  087C               	movf	_mTouch_lastResult+1,w
  2939  0527  0271               	subwf	??_mTouch_DecimationFilter+1,w
  2940  0528  1D03               	skipz
  2941  0529  2D2C               	goto	u168_25
  2942  052A  087B               	movf	_mTouch_lastResult,w
  2943  052B  0270               	subwf	??_mTouch_DecimationFilter,w
  2944  052C                     u168_25:	
  2945  052C  1803               	skipnc
  2946  052D  2D33               	goto	i1l23343
  2947                           
  2948                           ;cas16f1933.h: 395: {
  2949                           ;cas16f1933.h: 396: result += 5;
  2950  052E  3005               	movlw	5
  2951  052F  07F5               	addwf	mTouch_DecimationFilter@result,f
  2952  0530  1803               	skipnc
  2953  0531  0AF6               	incf	mTouch_DecimationFilter@result+1,f
  2954                           
  2955                           ;cas16f1933.h: 397: }
  2956  0532  2D50               	goto	i1l23353
  2957  0533                     i1l23343:	
  2958                           
  2959                           ;cas16f1933.h: 398: else if (result > 5)
  2960  0533  3000               	movlw	0
  2961  0534  0276               	subwf	mTouch_DecimationFilter@result+1,w
  2962  0535  3006               	movlw	6
  2963  0536  1903               	skipnz
  2964  0537  0275               	subwf	mTouch_DecimationFilter@result,w
  2965  0538  1C03               	skipc
  2966  0539  2D4C               	goto	i1l23349
  2967                           
  2968                           ;cas16f1933.h: 399: {
  2969                           ;cas16f1933.h: 400: if ((uint16_t)(mTouch_lastResult) < result - 5)
  2970  053A  0875               	movf	mTouch_DecimationFilter@result,w
  2971  053B  3EFB               	addlw	251
  2972  053C  00F0               	movwf	??_mTouch_DecimationFilter
  2973  053D  30FF               	movlw	255
  2974  053E  3D76               	addwfc	mTouch_DecimationFilter@result+1,w
  2975  053F  00F1               	movwf	??_mTouch_DecimationFilter+1
  2976  0540  027C               	subwf	_mTouch_lastResult+1,w
  2977  0541  1D03               	skipz
  2978  0542  2D45               	goto	u170_25
  2979  0543  0870               	movf	??_mTouch_DecimationFilter,w
  2980  0544  027B               	subwf	_mTouch_lastResult,w
  2981  0545                     u170_25:	
  2982  0545  1803               	skipnc
  2983  0546  2D4C               	goto	i1l23349
  2984                           
  2985                           ;cas16f1933.h: 401: {
  2986                           ;cas16f1933.h: 402: result -= 5;
  2987  0547  3005               	movlw	5
  2988  0548  02F5               	subwf	mTouch_DecimationFilter@result,f
  2989  0549  3000               	movlw	0
  2990  054A  3BF6               	subwfb	mTouch_DecimationFilter@result+1,f
  2991                           
  2992                           ;cas16f1933.h: 403: } else {
  2993  054B  2D50               	goto	i1l23353
  2994  054C                     i1l23349:	
  2995                           
  2996                           ;cas16f1933.h: 404: result = mTouch_lastResult;
  2997  054C  087C               	movf	_mTouch_lastResult+1,w
  2998  054D  00F6               	movwf	mTouch_DecimationFilter@result+1
  2999  054E  087B               	movf	_mTouch_lastResult,w
  3000  054F  00F5               	movwf	mTouch_DecimationFilter@result
  3001  0550                     i1l23353:	
  3002                           
  3003                           ;cas16f1933.h: 410: }
  3004                           ;cas16f1933.h: 419: (*mTouch_currentAcqData).result.v &= 0x000F;
  3005  0550  087D               	movf	_mTouch_currentAcqData,w
  3006  0551  3E02               	addlw	2
  3007  0552  0086               	movwf	6
  3008  0553  300F               	movlw	15
  3009  0554  0187               	clrf	7
  3010  0555  0581               	andwf	1,f
  3011  0556  3141               	addfsr 1,1
  3012  0557  0181               	clrf	1
  3013                           
  3014                           ;cas16f1933.h: 420: (*mTouch_currentAcqData).result.v |= (uint16_t)(result << 4);
  3015  0558  0876               	movf	mTouch_DecimationFilter@result+1,w
  3016  0559  00F1               	movwf	??_mTouch_DecimationFilter+1
  3017  055A  0875               	movf	mTouch_DecimationFilter@result,w
  3018  055B  00F0               	movwf	??_mTouch_DecimationFilter
  3019  055C  30F0               	movlw	240
  3020  055D  0EF0               	swapf	??_mTouch_DecimationFilter,f
  3021  055E  0EF1               	swapf	??_mTouch_DecimationFilter+1,f
  3022  055F  05F1               	andwf	??_mTouch_DecimationFilter+1,f
  3023  0560  0870               	movf	??_mTouch_DecimationFilter,w
  3024  0561  390F               	andlw	15
  3025  0562  04F1               	iorwf	??_mTouch_DecimationFilter+1,f
  3026  0563  30F0               	movlw	240
  3027  0564  05F0               	andwf	??_mTouch_DecimationFilter,f
  3028  0565  087D               	movf	_mTouch_currentAcqData,w
  3029  0566  3E02               	addlw	2
  3030  0567  0086               	movwf	6
  3031  0568  0187               	clrf	7
  3032  0569  0870               	movf	??_mTouch_DecimationFilter,w
  3033  056A  0481               	iorwf	1,f
  3034  056B  3141               	addfsr 1,1
  3035  056C  0871               	movf	??_mTouch_DecimationFilter+1,w
  3036  056D  0481               	iorwf	1,f
  3037                           
  3038                           ;cas16f1933.h: 427: (*mTouch_currentAcqData).accumulator.v += (uint16_t)((*mTouch_curren
      +                          tAcqData).result.v >> 4);
  3039  056E  258E  3184         	fcall	PL14	;call to abstracted procedure
  3040  0570  00F0               	movwf	??_mTouch_DecimationFilter
  3041  0571  3F41               	moviw [1]fsr1
  3042  0572  00F1               	movwf	??_mTouch_DecimationFilter+1
  3043  0573  3004               	movlw	4
  3044  0574                     u171_25:	
  3045  0574  36F1               	lsrf	??_mTouch_DecimationFilter+1,f
  3046  0575  0CF0               	rrf	??_mTouch_DecimationFilter,f
  3047  0576  0B89               	decfsz	9,f
  3048  0577  2D74               	goto	u171_25
  3049  0578  0870               	movf	??_mTouch_DecimationFilter,w
  3050  0579  00F2               	movwf	??_mTouch_DecimationFilter+2
  3051  057A  0871               	movf	??_mTouch_DecimationFilter+1,w
  3052  057B  00F3               	movwf	??_mTouch_DecimationFilter+3
  3053  057C  01F4               	clrf	??_mTouch_DecimationFilter+4
  3054  057D  087D               	movf	_mTouch_currentAcqData,w
  3055  057E  0086               	movwf	6
  3056  057F  0187               	clrf	7
  3057  0580  0872               	movf	??_mTouch_DecimationFilter+2,w
  3058  0581  0781               	addwf	1,f
  3059  0582  3141               	addfsr 1,1
  3060  0583  0873               	movf	??_mTouch_DecimationFilter+3,w
  3061  0584  3D81               	addwfc	1,f
  3062  0585  3141               	addfsr 1,1
  3063  0586  0874               	movf	??_mTouch_DecimationFilter+4,w
  3064  0587  3D81               	addwfc	1,f
  3065  0588  0008               	return
  3066  0589                     __end_of_mTouch_DecimationFilter:	
  3067  0589                     __ptext583:	
  3068 ;; =============== function _ICH_Outputs ends ============
  3069                           
  3070                           
  3071 ;; *************** function i1_mTouch_ChangeMode *****************
  3072 ;; Defined at:
  3073 ;;		line 470 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;		None
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;		None
  3078 ;; Return value:  Size  Location     Type
  3079 ;;		None               void
  3080 ;; Registers used:
  3081 ;;		wreg, status,2
  3082 ;; Tracked objects:
  3083 ;;		On entry : 1F/0
  3084 ;;		On exit  : 1F/0
  3085 ;;		Unchanged: FFFE0/0
  3086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3087 ;;      Params:         0       0       0       0
  3088 ;;      Locals:         0       0       0       0
  3089 ;;      Temps:          0       0       0       0
  3090 ;;      Totals:         0       0       0       0
  3091 ;;Total ram usage:        0 bytes
  3092 ;; Hardware stack levels used:    1
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		_mTouch_Scan
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099  0589                     i1_mTouch_ChangeMode:	
  3100  0589  301E               	movlw	30
  3101                           
  3102                           ;cas16f1933.h: 472: mTouch_currentAcqData = 0;
  3103                           
  3104                           ; Regs used in i1_mTouch_ChangeMode: [wreg+status,2]
  3105  058A  01FD               	clrf	_mTouch_currentAcqData
  3106                           
  3107                           ;cas16f1933.h: 491: mTouch_currentScan = 0;
  3108  058B  01BB               	clrf	_mTouch_currentScan
  3109                           
  3110                           ;cas16f1933.h: 509: mTouch_stateVars.sampleCounter = 30;
  3111  058C  00BE               	movwf	_mTouch_stateVars
  3112  058D  0008               	return
  3113  058E                     __end_ofi1_mTouch_ChangeMode:	
  3114  058E                     PL14:	
  3115  058E  087D               	movf	_mTouch_currentAcqData,w
  3116  058F  3E02               	addlw	2
  3117  0590  0086               	movwf	6
  3118  0591  0187               	clrf	7
  3119  0592  3F40               	moviw [0]fsr1
  3120  0593  0008               	return
  3121                           
  3122                           	psect	text582
  3123  0594                     __ptext582:	
  3124 ;; =============== function _mTouch_Scan ends ============
  3125                           
  3126                           
  3127 ;; *************** function _ICH_Outputs *****************
  3128 ;; Defined at:
  3129 ;;		line 118 in file "S:\Eng Paul Li\Sourcecode\ICH R2ULBL 02 Ver B\ICH-LR-HR.C"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;		None               void
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0
  3138 ;; Tracked objects:
  3139 ;;		On entry : 1F/0
  3140 ;;		On exit  : 1F/2
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3143 ;;      Params:         0       0       0       0
  3144 ;;      Locals:         0       0       0       0
  3145 ;;      Temps:          0       0       0       0
  3146 ;;      Totals:         0       0       0       0
  3147 ;;Total ram usage:        0 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_ISR
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155  0594                     _ICH_Outputs:	
  3156  0594  3028               	movlw	40
  3157                           
  3158                           ;ICH-LR-HR.C: 120: PWMcount++;
  3159                           
  3160                           ; Regs used in _ICH_Outputs: [wreg+status,2+status,0]
  3161  0595  0ABA               	incf	_PWMcount,f
  3162                           
  3163                           ;ICH-LR-HR.C: 121: if (PWMcount >= 40)
  3164  0596  023A               	subwf	_PWMcount,w
  3165  0597  1803               	btfsc	3,0
  3166                           
  3167                           ;ICH-LR-HR.C: 122: PWMcount = 0;
  3168  0598  01BA               	clrf	_PWMcount
  3169                           
  3170                           ;ICH-LR-HR.C: 126: if ((PWMcount <= ((40 *5) / 100) && LED_enable)){
  3171  0599  3003               	movlw	3
  3172  059A  023A               	subwf	_PWMcount,w
  3173  059B  1C03               	btfss	3,0
  3174  059C  1C7A               	btfss	_LED_enable/(0+8),_LED_enable& (0+7)
  3175  059D  2DBD               	goto	i1l20272
  3176                           
  3177                           ;ICH-LR-HR.C: 127: LATB7 = LATC4 = LATC3 = LATC6 = LATC5 = 1;
  3178  059E  0022               	movlb	2	; select bank2
  3179  059F  168E               	bsf	14,5
  3180  05A0  1E8E               	btfss	14,5
  3181  05A1  2DA5               	goto	u138_20
  3182  05A2  0022               	movlb	2	; select bank2
  3183  05A3  170E               	bsf	14,6
  3184  05A4  2DA7               	goto	u139_24
  3185  05A5                     u138_20:	
  3186  05A5  0022               	movlb	2	; select bank2
  3187  05A6  130E               	bcf	14,6
  3188  05A7                     u139_24:	
  3189  05A7  1F0E               	btfss	14,6
  3190  05A8  2DAC               	goto	u139_20
  3191  05A9  0022               	movlb	2	; select bank2
  3192  05AA  158E               	bsf	14,3
  3193  05AB  2DAE               	goto	u140_24
  3194  05AC                     u139_20:	
  3195  05AC  0022               	movlb	2	; select bank2
  3196  05AD  118E               	bcf	14,3
  3197  05AE                     u140_24:	
  3198  05AE  1D8E               	btfss	14,3
  3199  05AF  2DB3               	goto	u140_20
  3200  05B0  0022               	movlb	2	; select bank2
  3201  05B1  160E               	bsf	14,4
  3202  05B2  2DB5               	goto	u141_24
  3203  05B3                     u140_20:	
  3204  05B3  0022               	movlb	2	; select bank2
  3205  05B4  120E               	bcf	14,4
  3206  05B5                     u141_24:	
  3207  05B5  1E0E               	btfss	14,4
  3208  05B6  2DBA               	goto	u141_20
  3209  05B7  0022               	movlb	2	; select bank2
  3210  05B8  178D               	bsf	13,7
  3211  05B9  2DDF               	goto	i1l20273
  3212  05BA                     u141_20:	
  3213  05BA  0022               	movlb	2	; select bank2
  3214  05BB  138D               	bcf	13,7
  3215                           
  3216                           ;ICH-LR-HR.C: 128: }
  3217  05BC  2DDF               	goto	i1l20273
  3218  05BD                     i1l20272:	
  3219                           
  3220                           ;ICH-LR-HR.C: 129: else{
  3221                           ;ICH-LR-HR.C: 130: if (!Key_LED.oneBit.LROpen || !LED_enable)
  3222  05BD  1C38               	btfss	_Key_LED,0
  3223  05BE  2DC1               	goto	i1l20276
  3224  05BF  187A               	btfsc	_LED_enable/(0+8),_LED_enable& (0+7)
  3225  05C0  2DC3               	goto	i1l20274
  3226  05C1                     i1l20276:	
  3227                           
  3228                           ;ICH-LR-HR.C: 131: LATB7 = 0;
  3229  05C1  0022               	movlb	2	; select bank2
  3230  05C2  138D               	bcf	13,7
  3231  05C3                     i1l20274:	
  3232                           
  3233                           ;ICH-LR-HR.C: 132: if (!Key_LED.oneBit.LRClose || !LED_enable)
  3234  05C3  0020               	movlb	0	; select bank0
  3235  05C4  1CB8               	btfss	_Key_LED,1
  3236  05C5  2DC8               	goto	i1l20279
  3237  05C6  187A               	btfsc	_LED_enable/(0+8),_LED_enable& (0+7)
  3238  05C7  2DCA               	goto	i1l20277
  3239  05C8                     i1l20279:	
  3240                           
  3241                           ;ICH-LR-HR.C: 133: LATC4 = 0;
  3242  05C8  0022               	movlb	2	; select bank2
  3243  05C9  120E               	bcf	14,4
  3244  05CA                     i1l20277:	
  3245                           
  3246                           ;ICH-LR-HR.C: 134: if (!Key_LED.oneBit.HROpen || !LED_enable)
  3247  05CA  0020               	movlb	0	; select bank0
  3248  05CB  1D38               	btfss	_Key_LED,2
  3249  05CC  2DCF               	goto	i1l20282
  3250  05CD  187A               	btfsc	_LED_enable/(0+8),_LED_enable& (0+7)
  3251  05CE  2DD1               	goto	i1l20280
  3252  05CF                     i1l20282:	
  3253                           
  3254                           ;ICH-LR-HR.C: 135: LATC3 = 0;
  3255  05CF  0022               	movlb	2	; select bank2
  3256  05D0  118E               	bcf	14,3
  3257  05D1                     i1l20280:	
  3258                           
  3259                           ;ICH-LR-HR.C: 136: if (!Key_LED.oneBit.HRClose || !LED_enable)
  3260  05D1  0020               	movlb	0	; select bank0
  3261  05D2  1DB8               	btfss	_Key_LED,3
  3262  05D3  2DD6               	goto	i1l20285
  3263  05D4  187A               	btfsc	_LED_enable/(0+8),_LED_enable& (0+7)
  3264  05D5  2DD8               	goto	i1l20283
  3265  05D6                     i1l20285:	
  3266                           
  3267                           ;ICH-LR-HR.C: 137: LATC6 = 0;
  3268  05D6  0022               	movlb	2	; select bank2
  3269  05D7  130E               	bcf	14,6
  3270  05D8                     i1l20283:	
  3271                           
  3272                           ;ICH-LR-HR.C: 138: if (!Key_LED.oneBit.Light || !LED_enable)
  3273  05D8  0020               	movlb	0	; select bank0
  3274  05D9  1E38               	btfss	_Key_LED,4
  3275  05DA  2DDD               	goto	i1l20288
  3276  05DB  187A               	btfsc	_LED_enable/(0+8),_LED_enable& (0+7)
  3277  05DC  2DDF               	goto	i1l20273
  3278  05DD                     i1l20288:	
  3279                           
  3280                           ;ICH-LR-HR.C: 139: LATC5 = 0;
  3281  05DD  0022               	movlb	2	; select bank2
  3282  05DE  128E               	bcf	14,5
  3283  05DF                     i1l20273:	
  3284                           
  3285                           ;ICH-LR-HR.C: 140: }
  3286                           ;ICH-LR-HR.C: 184: if (Key_LED.oneBit.LROpen){
  3287  05DF  0020               	movlb	0	; select bank0
  3288  05E0  1C38               	btfss	_Key_LED,0
  3289  05E1  2DE8               	goto	i1l20289
  3290                           
  3291                           ;ICH-LR-HR.C: 185: LATA6 = 0;
  3292  05E2  0022               	movlb	2	; select bank2
  3293  05E3  130C               	bcf	12,6
  3294                           
  3295                           ;ICH-LR-HR.C: 186: _nop();
  3296  05E4  0000               	nop
  3297                           
  3298                           ;ICH-LR-HR.C: 190: LATA7 = 1;
  3299  05E5  0022               	movlb	2	; select bank2
  3300  05E6  178C               	bsf	12,7
  3301                           
  3302                           ;ICH-LR-HR.C: 193: }
  3303  05E7  2DEA               	goto	i1l20290
  3304  05E8                     i1l20289:	
  3305                           
  3306                           ;ICH-LR-HR.C: 194: else
  3307                           ;ICH-LR-HR.C: 195: LATA7 = 0;
  3308  05E8  0022               	movlb	2	; select bank2
  3309  05E9  138C               	bcf	12,7
  3310  05EA                     i1l20290:	
  3311                           
  3312                           ;ICH-LR-HR.C: 199: if (Key_LED.oneBit.LRClose){
  3313  05EA  0020               	movlb	0	; select bank0
  3314  05EB  1CB8               	btfss	_Key_LED,1
  3315  05EC  2DF3               	goto	i1l20291
  3316                           
  3317                           ;ICH-LR-HR.C: 200: LATA7 = 0;
  3318  05ED  0022               	movlb	2	; select bank2
  3319  05EE  138C               	bcf	12,7
  3320                           
  3321                           ;ICH-LR-HR.C: 201: _nop();
  3322  05EF  0000               	nop
  3323                           
  3324                           ;ICH-LR-HR.C: 205: LATA6 = 1;
  3325  05F0  0022               	movlb	2	; select bank2
  3326  05F1  170C               	bsf	12,6
  3327                           
  3328                           ;ICH-LR-HR.C: 208: }
  3329  05F2  2DF5               	goto	i1l20292
  3330  05F3                     i1l20291:	
  3331                           
  3332                           ;ICH-LR-HR.C: 209: else
  3333                           ;ICH-LR-HR.C: 210: LATA6 = 0;
  3334  05F3  0022               	movlb	2	; select bank2
  3335  05F4  130C               	bcf	12,6
  3336  05F5                     i1l20292:	
  3337                           
  3338                           ;ICH-LR-HR.C: 214: if (Key_LED.oneBit.HROpen){
  3339  05F5  0020               	movlb	0	; select bank0
  3340  05F6  1D38               	btfss	_Key_LED,2
  3341  05F7  2DFE               	goto	i1l20293
  3342                           
  3343                           ;ICH-LR-HR.C: 215: LATC1 = 0;
  3344  05F8  0022               	movlb	2	; select bank2
  3345  05F9  108E               	bcf	14,1
  3346                           
  3347                           ;ICH-LR-HR.C: 216: _nop();
  3348  05FA  0000               	nop
  3349                           
  3350                           ;ICH-LR-HR.C: 220: LATC0 = 1;
  3351  05FB  0022               	movlb	2	; select bank2
  3352  05FC  140E               	bsf	14,0
  3353                           
  3354                           ;ICH-LR-HR.C: 223: }
  3355  05FD  2E05               	goto	i1l20294
  3356  05FE                     i1l20293:	
  3357                           
  3358                           ;ICH-LR-HR.C: 224: else if ((!Key_LED.oneBit.LROpen) && (!Key_LED.oneBit.HRClose) && (!K
      +                          ey_LED.oneBit.LRClose))
  3359  05FE  1C38               	btfss	_Key_LED,0
  3360  05FF  19B8               	btfsc	_Key_LED,3
  3361  0600  2E05               	goto	i1l20294
  3362  0601  18B8               	btfsc	_Key_LED,1
  3363  0602  2E05               	goto	i1l20294
  3364                           
  3365                           ;ICH-LR-HR.C: 225: LATC0 = 0;
  3366  0603  0022               	movlb	2	; select bank2
  3367  0604  100E               	bcf	14,0
  3368  0605                     i1l20294:	
  3369                           
  3370                           ;ICH-LR-HR.C: 229: if (Key_LED.oneBit.HRClose){
  3371  0605  0020               	movlb	0	; select bank0
  3372  0606  1DB8               	btfss	_Key_LED,3
  3373  0607  2E0E               	goto	i1l20296
  3374                           
  3375                           ;ICH-LR-HR.C: 230: LATC0 = 0;
  3376  0608  0022               	movlb	2	; select bank2
  3377  0609  100E               	bcf	14,0
  3378                           
  3379                           ;ICH-LR-HR.C: 231: _nop();
  3380  060A  0000               	nop
  3381                           
  3382                           ;ICH-LR-HR.C: 235: LATC1 = 1;
  3383  060B  0022               	movlb	2	; select bank2
  3384  060C  148E               	bsf	14,1
  3385                           
  3386                           ;ICH-LR-HR.C: 238: }
  3387  060D  2E13               	goto	i1l20297
  3388  060E                     i1l20296:	
  3389                           
  3390                           ;ICH-LR-HR.C: 239: else if ((!Key_LED.oneBit.LRClose) && (!Key_LED.oneBit.HROpen))
  3391  060E  1CB8               	btfss	_Key_LED,1
  3392  060F  1938               	btfsc	_Key_LED,2
  3393  0610  2E13               	goto	i1l20297
  3394                           
  3395                           ;ICH-LR-HR.C: 240: LATC1 = 0;
  3396  0611  0022               	movlb	2	; select bank2
  3397  0612  108E               	bcf	14,1
  3398  0613                     i1l20297:	
  3399                           
  3400                           ;ICH-LR-HR.C: 243: if (Key_LED.oneBit.Light)
  3401  0613  0020               	movlb	0	; select bank0
  3402  0614  1E38               	btfss	_Key_LED,4
  3403  0615  2E19               	goto	i1l20299
  3404                           
  3405                           ;ICH-LR-HR.C: 244: LATC2 = 1;
  3406  0616  0022               	movlb	2	; select bank2
  3407  0617  150E               	bsf	14,2
  3408  0618  0008               	return
  3409  0619                     i1l20299:	
  3410                           
  3411                           ;ICH-LR-HR.C: 245: else
  3412                           ;ICH-LR-HR.C: 246: LATC2 = 0;
  3413  0619  0022               	movlb	2	; select bank2
  3414  061A  110E               	bcf	14,2
  3415  061B  0008               	return
  3416  061C                     __end_of_ICH_Outputs:	
  3417                           
  3418                           	psect	text584
  3419  061C                     __ptext584:	
  3420 ;; =============== function i1_mTouch_ChangeMode ends ============
  3421                           
  3422                           
  3423 ;; *************** function _mTouch_ScanB_3 *****************
  3424 ;; Defined at:
  3425 ;;		line 523 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;		None
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;		None
  3430 ;; Return value:  Size  Location     Type
  3431 ;;		None               void
  3432 ;; Registers used:
  3433 ;;		None
  3434 ;; Tracked objects:
  3435 ;;		On entry : 1F/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: FFE00/0
  3438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3439 ;;      Params:         0       0       0       0
  3440 ;;      Locals:         0       0       0       0
  3441 ;;      Temps:          0       0       0       0
  3442 ;;      Totals:         0       0       0       0
  3443 ;;Total ram usage:        0 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_mTouch_Scan
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451  061C                     _mTouch_ScanB_3:	
  3452                           
  3453                           ; Regs used in _mTouch_ScanB_3: []
  3454  061C  0022               	banksel	269	;#
  3455  061D  100D               	bcf	13,0	;#
  3456  061E  0021               	banksel	157	;#
  3457  061F  3031               	movlw	49	;#
  3458  0620  009D               	movwf	29	;#
  3459  0621  300D               	movlw	13	;#
  3460  0622  0086               	movwf	6	;#
  3461  0623  3001               	movlw	1	;#
  3462  0624  0087               	movwf	7	;#
  3463  0625  308D               	movlw	141	;#
  3464  0626  0084               	movwf	4	;#
  3465  0627  3000               	movlw	0	;#
  3466  0628  0085               	movwf	5	;#
  3467  0629  0020               	banksel	_mTouch_delayCount	;#
  3468  062A  3005               	movlw	5	;#
  3469  062B  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  3470  062C  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3471  062D  2E1B               	goto	($+-1)	;#
  3472  062E  0021               	banksel	157	;#
  3473  062F  3029               	movlw	41	;#
  3474  0630  1480               	bsf	0,1	;#
  3475  0631  009D               	movwf	29	;#
  3476  0632  0020               	banksel	_mTouch_delayCount	;#
  3477  0633  3005               	movlw	5	;#
  3478  0634  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  3479  0635  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3480  0636  2E1B               	goto	($+-1)	;#
  3481  0637  0021               	banksel	157	;#
  3482  0638  149D               	bsf	29,1	;#
  3483  0639  0000               	nop	;#
  3484  063A  1081               	bcf	1,1	;#
  3485  063B  1080               	bcf	0,1	;#
  3486  063C  0008               	return
  3487  063D                     __end_of_mTouch_ScanB_3:	
  3488                           
  3489                           	psect	text585
  3490  063D                     __ptext585:	
  3491 ;; =============== function _mTouch_ScanB_3 ends ============
  3492                           
  3493                           
  3494 ;; *************** function _mTouch_ScanB_2 *****************
  3495 ;; Defined at:
  3496 ;;		line 520 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;		None
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;		None               void
  3503 ;; Registers used:
  3504 ;;		None
  3505 ;; Tracked objects:
  3506 ;;		On entry : 1F/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: FFE00/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3510 ;;      Params:         0       0       0       0
  3511 ;;      Locals:         0       0       0       0
  3512 ;;      Temps:          0       0       0       0
  3513 ;;      Totals:         0       0       0       0
  3514 ;;Total ram usage:        0 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_mTouch_Scan
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522  063D                     _mTouch_ScanB_2:	
  3523                           
  3524                           ; Regs used in _mTouch_ScanB_2: []
  3525  063D  0022               	banksel	269	;#
  3526  063E  118D               	bcf	13,3	;#
  3527  063F  0021               	banksel	157	;#
  3528  0640  3025               	movlw	37	;#
  3529  0641  009D               	movwf	29	;#
  3530  0642  300D               	movlw	13	;#
  3531  0643  0086               	movwf	6	;#
  3532  0644  3001               	movlw	1	;#
  3533  0645  0087               	movwf	7	;#
  3534  0646  308D               	movlw	141	;#
  3535  0647  0084               	movwf	4	;#
  3536  0648  3000               	movlw	0	;#
  3537  0649  0085               	movwf	5	;#
  3538  064A  0020               	banksel	_mTouch_delayCount	;#
  3539  064B  3005               	movlw	5	;#
  3540  064C  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  3541  064D  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3542  064E  2E3C               	goto	($+-1)	;#
  3543  064F  0021               	banksel	157	;#
  3544  0650  3031               	movlw	49	;#
  3545  0651  1400               	bsf	0,0	;#
  3546  0652  009D               	movwf	29	;#
  3547  0653  0020               	banksel	_mTouch_delayCount	;#
  3548  0654  3005               	movlw	5	;#
  3549  0655  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  3550  0656  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3551  0657  2E3C               	goto	($+-1)	;#
  3552  0658  0021               	banksel	157	;#
  3553  0659  149D               	bsf	29,1	;#
  3554  065A  0000               	nop	;#
  3555  065B  1001               	bcf	1,0	;#
  3556  065C  1000               	bcf	0,0	;#
  3557  065D  0008               	return
  3558  065E                     __end_of_mTouch_ScanB_2:	
  3559                           
  3560                           	psect	text586
  3561  065E                     __ptext586:	
  3562 ;; =============== function _mTouch_ScanB_2 ends ============
  3563                           
  3564                           
  3565 ;; *************** function _mTouch_ScanB_1 *****************
  3566 ;; Defined at:
  3567 ;;		line 517 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;		None
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;		None               void
  3574 ;; Registers used:
  3575 ;;		None
  3576 ;; Tracked objects:
  3577 ;;		On entry : 1F/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: FFE00/0
  3580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3581 ;;      Params:         0       0       0       0
  3582 ;;      Locals:         0       0       0       0
  3583 ;;      Temps:          0       0       0       0
  3584 ;;      Totals:         0       0       0       0
  3585 ;;Total ram usage:        0 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_mTouch_Scan
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593  065E                     _mTouch_ScanB_1:	
  3594                           
  3595                           ; Regs used in _mTouch_ScanB_1: []
  3596  065E  0022               	banksel	269	;#
  3597  065F  120D               	bcf	13,4	;#
  3598  0660  0021               	banksel	157	;#
  3599  0661  302D               	movlw	45	;#
  3600  0662  009D               	movwf	29	;#
  3601  0663  300D               	movlw	13	;#
  3602  0664  0086               	movwf	6	;#
  3603  0665  3001               	movlw	1	;#
  3604  0666  0087               	movwf	7	;#
  3605  0667  308D               	movlw	141	;#
  3606  0668  0084               	movwf	4	;#
  3607  0669  3000               	movlw	0	;#
  3608  066A  0085               	movwf	5	;#
  3609  066B  0020               	banksel	_mTouch_delayCount	;#
  3610  066C  3005               	movlw	5	;#
  3611  066D  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  3612  066E  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3613  066F  2E5D               	goto	($+-1)	;#
  3614  0670  0021               	banksel	157	;#
  3615  0671  3025               	movlw	37	;#
  3616  0672  1580               	bsf	0,3	;#
  3617  0673  009D               	movwf	29	;#
  3618  0674  0020               	banksel	_mTouch_delayCount	;#
  3619  0675  3005               	movlw	5	;#
  3620  0676  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  3621  0677  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3622  0678  2E5D               	goto	($+-1)	;#
  3623  0679  0021               	banksel	157	;#
  3624  067A  149D               	bsf	29,1	;#
  3625  067B  0000               	nop	;#
  3626  067C  1181               	bcf	1,3	;#
  3627  067D  1180               	bcf	0,3	;#
  3628  067E  0008               	return
  3629  067F                     __end_of_mTouch_ScanB_1:	
  3630                           
  3631                           	psect	text587
  3632  067F                     __ptext587:	
  3633 ;; =============== function _mTouch_ScanB_1 ends ============
  3634                           
  3635                           
  3636 ;; *************** function _mTouch_ScanB_0 *****************
  3637 ;; Defined at:
  3638 ;;		line 514 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;		None
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;		None
  3643 ;; Return value:  Size  Location     Type
  3644 ;;		None               void
  3645 ;; Registers used:
  3646 ;;		None
  3647 ;; Tracked objects:
  3648 ;;		On entry : 1F/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: FFE00/0
  3651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3652 ;;      Params:         0       0       0       0
  3653 ;;      Locals:         0       0       0       0
  3654 ;;      Temps:          0       0       0       0
  3655 ;;      Totals:         0       0       0       0
  3656 ;;Total ram usage:        0 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		_mTouch_Scan
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664  067F                     _mTouch_ScanB_0:	
  3665                           
  3666                           ; Regs used in _mTouch_ScanB_0: []
  3667  067F  0022               	banksel	269	;#
  3668  0680  110D               	bcf	13,2	;#
  3669  0681  0021               	banksel	157	;#
  3670  0682  3021               	movlw	33	;#
  3671  0683  009D               	movwf	29	;#
  3672  0684  300D               	movlw	13	;#
  3673  0685  0086               	movwf	6	;#
  3674  0686  3001               	movlw	1	;#
  3675  0687  0087               	movwf	7	;#
  3676  0688  308D               	movlw	141	;#
  3677  0689  0084               	movwf	4	;#
  3678  068A  3000               	movlw	0	;#
  3679  068B  0085               	movwf	5	;#
  3680  068C  0020               	banksel	_mTouch_delayCount	;#
  3681  068D  3005               	movlw	5	;#
  3682  068E  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  3683  068F  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3684  0690  2E7E               	goto	($+-1)	;#
  3685  0691  0021               	banksel	157	;#
  3686  0692  302D               	movlw	45	;#
  3687  0693  1600               	bsf	0,4	;#
  3688  0694  009D               	movwf	29	;#
  3689  0695  0020               	banksel	_mTouch_delayCount	;#
  3690  0696  3005               	movlw	5	;#
  3691  0697  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  3692  0698  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3693  0699  2E7E               	goto	($+-1)	;#
  3694  069A  0021               	banksel	157	;#
  3695  069B  149D               	bsf	29,1	;#
  3696  069C  0000               	nop	;#
  3697  069D  1201               	bcf	1,4	;#
  3698  069E  1200               	bcf	0,4	;#
  3699  069F  0008               	return
  3700  06A0                     __end_of_mTouch_ScanB_0:	
  3701                           
  3702                           	psect	text588
  3703  06A0                     __ptext588:	
  3704 ;; =============== function _mTouch_ScanB_0 ends ============
  3705                           
  3706                           
  3707 ;; *************** function _mTouch_ScanB_4 *****************
  3708 ;; Defined at:
  3709 ;;		line 526 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;		None
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;		None
  3714 ;; Return value:  Size  Location     Type
  3715 ;;		None               void
  3716 ;; Registers used:
  3717 ;;		None
  3718 ;; Tracked objects:
  3719 ;;		On entry : 1F/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: FFE00/0
  3722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3723 ;;      Params:         0       0       0       0
  3724 ;;      Locals:         0       0       0       0
  3725 ;;      Temps:          0       0       0       0
  3726 ;;      Totals:         0       0       0       0
  3727 ;;Total ram usage:        0 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; This function calls:
  3730 ;;		Nothing
  3731 ;; This function is called by:
  3732 ;;		_mTouch_Scan
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735  06A0                     _mTouch_ScanB_4:	
  3736                           
  3737                           ; Regs used in _mTouch_ScanB_4: []
  3738  06A0  0022               	banksel	269	;#
  3739  06A1  108D               	bcf	13,1	;#
  3740  06A2  0021               	banksel	157	;#
  3741  06A3  3029               	movlw	41	;#
  3742  06A4  009D               	movwf	29	;#
  3743  06A5  300D               	movlw	13	;#
  3744  06A6  0086               	movwf	6	;#
  3745  06A7  3001               	movlw	1	;#
  3746  06A8  0087               	movwf	7	;#
  3747  06A9  308D               	movlw	141	;#
  3748  06AA  0084               	movwf	4	;#
  3749  06AB  3000               	movlw	0	;#
  3750  06AC  0085               	movwf	5	;#
  3751  06AD  0020               	banksel	_mTouch_delayCount	;#
  3752  06AE  3005               	movlw	5	;#
  3753  06AF  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  3754  06B0  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3755  06B1  2E9F               	goto	($+-1)	;#
  3756  06B2  0021               	banksel	157	;#
  3757  06B3  3021               	movlw	33	;#
  3758  06B4  1500               	bsf	0,2	;#
  3759  06B5  009D               	movwf	29	;#
  3760  06B6  0020               	banksel	_mTouch_delayCount	;#
  3761  06B7  3005               	movlw	5	;#
  3762  06B8  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  3763  06B9  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3764  06BA  2E9F               	goto	($+-1)	;#
  3765  06BB  0021               	banksel	157	;#
  3766  06BC  149D               	bsf	29,1	;#
  3767  06BD  0000               	nop	;#
  3768  06BE  1101               	bcf	1,2	;#
  3769  06BF  1100               	bcf	0,2	;#
  3770  06C0  0008               	return
  3771  06C1                     __end_of_mTouch_ScanB_4:	
  3772                           
  3773                           	psect	text589
  3774  06C1                     __ptext589:	
  3775 ;; =============== function _mTouch_ScanB_4 ends ============
  3776                           
  3777                           
  3778 ;; *************** function _mTouch_ScanA_3 *****************
  3779 ;; Defined at:
  3780 ;;		line 523 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;		None
  3785 ;; Return value:  Size  Location     Type
  3786 ;;		None               void
  3787 ;; Registers used:
  3788 ;;		None
  3789 ;; Tracked objects:
  3790 ;;		On entry : 1F/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: FFE00/0
  3793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3794 ;;      Params:         0       0       0       0
  3795 ;;      Locals:         0       0       0       0
  3796 ;;      Temps:          0       0       0       0
  3797 ;;      Totals:         0       0       0       0
  3798 ;;Total ram usage:        0 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_mTouch_Scan
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806  06C1                     _mTouch_ScanA_3:	
  3807                           
  3808                           ; Regs used in _mTouch_ScanA_3: []
  3809  06C1  0022               	banksel	269	;#
  3810  06C2  140D               	bsf	13,0	;#
  3811  06C3  0021               	banksel	157	;#
  3812  06C4  3031               	movlw	49	;#
  3813  06C5  009D               	movwf	29	;#
  3814  06C6  300D               	movlw	13	;#
  3815  06C7  0086               	movwf	6	;#
  3816  06C8  3001               	movlw	1	;#
  3817  06C9  0087               	movwf	7	;#
  3818  06CA  308D               	movlw	141	;#
  3819  06CB  0084               	movwf	4	;#
  3820  06CC  3000               	movlw	0	;#
  3821  06CD  0085               	movwf	5	;#
  3822  06CE  0020               	banksel	_mTouch_delayCount	;#
  3823  06CF  3005               	movlw	5	;#
  3824  06D0  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  3825  06D1  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3826  06D2  2EC0               	goto	($+-1)	;#
  3827  06D3  0021               	banksel	157	;#
  3828  06D4  3029               	movlw	41	;#
  3829  06D5  1480               	bsf	0,1	;#
  3830  06D6  009D               	movwf	29	;#
  3831  06D7  0020               	banksel	_mTouch_delayCount	;#
  3832  06D8  3005               	movlw	5	;#
  3833  06D9  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  3834  06DA  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3835  06DB  2EC0               	goto	($+-1)	;#
  3836  06DC  0021               	banksel	157	;#
  3837  06DD  149D               	bsf	29,1	;#
  3838  06DE  0000               	nop	;#
  3839  06DF  1481               	bsf	1,1	;#
  3840  06E0  1080               	bcf	0,1	;#
  3841  06E1  0008               	return
  3842  06E2                     __end_of_mTouch_ScanA_3:	
  3843                           
  3844                           	psect	text590
  3845  06E2                     __ptext590:	
  3846 ;; =============== function _mTouch_ScanA_3 ends ============
  3847                           
  3848                           
  3849 ;; *************** function _mTouch_ScanA_2 *****************
  3850 ;; Defined at:
  3851 ;;		line 520 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;		None
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;		None
  3856 ;; Return value:  Size  Location     Type
  3857 ;;		None               void
  3858 ;; Registers used:
  3859 ;;		None
  3860 ;; Tracked objects:
  3861 ;;		On entry : 1F/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: FFE00/0
  3864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3865 ;;      Params:         0       0       0       0
  3866 ;;      Locals:         0       0       0       0
  3867 ;;      Temps:          0       0       0       0
  3868 ;;      Totals:         0       0       0       0
  3869 ;;Total ram usage:        0 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; This function calls:
  3872 ;;		Nothing
  3873 ;; This function is called by:
  3874 ;;		_mTouch_Scan
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877  06E2                     _mTouch_ScanA_2:	
  3878                           
  3879                           ; Regs used in _mTouch_ScanA_2: []
  3880  06E2  0022               	banksel	269	;#
  3881  06E3  158D               	bsf	13,3	;#
  3882  06E4  0021               	banksel	157	;#
  3883  06E5  3025               	movlw	37	;#
  3884  06E6  009D               	movwf	29	;#
  3885  06E7  300D               	movlw	13	;#
  3886  06E8  0086               	movwf	6	;#
  3887  06E9  3001               	movlw	1	;#
  3888  06EA  0087               	movwf	7	;#
  3889  06EB  308D               	movlw	141	;#
  3890  06EC  0084               	movwf	4	;#
  3891  06ED  3000               	movlw	0	;#
  3892  06EE  0085               	movwf	5	;#
  3893  06EF  0020               	banksel	_mTouch_delayCount	;#
  3894  06F0  3005               	movlw	5	;#
  3895  06F1  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  3896  06F2  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3897  06F3  2EE1               	goto	($+-1)	;#
  3898  06F4  0021               	banksel	157	;#
  3899  06F5  3031               	movlw	49	;#
  3900  06F6  1400               	bsf	0,0	;#
  3901  06F7  009D               	movwf	29	;#
  3902  06F8  0020               	banksel	_mTouch_delayCount	;#
  3903  06F9  3005               	movlw	5	;#
  3904  06FA  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  3905  06FB  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3906  06FC  2EE1               	goto	($+-1)	;#
  3907  06FD  0021               	banksel	157	;#
  3908  06FE  149D               	bsf	29,1	;#
  3909  06FF  0000               	nop	;#
  3910  0700  1401               	bsf	1,0	;#
  3911  0701  1000               	bcf	0,0	;#
  3912  0702  0008               	return
  3913  0703                     __end_of_mTouch_ScanA_2:	
  3914                           
  3915                           	psect	text591
  3916  0703                     __ptext591:	
  3917 ;; =============== function _mTouch_ScanA_2 ends ============
  3918                           
  3919                           
  3920 ;; *************** function _mTouch_ScanA_1 *****************
  3921 ;; Defined at:
  3922 ;;		line 517 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;		None
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;		None
  3927 ;; Return value:  Size  Location     Type
  3928 ;;		None               void
  3929 ;; Registers used:
  3930 ;;		None
  3931 ;; Tracked objects:
  3932 ;;		On entry : 1F/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: FFE00/0
  3935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3936 ;;      Params:         0       0       0       0
  3937 ;;      Locals:         0       0       0       0
  3938 ;;      Temps:          0       0       0       0
  3939 ;;      Totals:         0       0       0       0
  3940 ;;Total ram usage:        0 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; This function calls:
  3943 ;;		Nothing
  3944 ;; This function is called by:
  3945 ;;		_mTouch_Scan
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948  0703                     _mTouch_ScanA_1:	
  3949                           
  3950                           ; Regs used in _mTouch_ScanA_1: []
  3951  0703  0022               	banksel	269	;#
  3952  0704  160D               	bsf	13,4	;#
  3953  0705  0021               	banksel	157	;#
  3954  0706  302D               	movlw	45	;#
  3955  0707  009D               	movwf	29	;#
  3956  0708  300D               	movlw	13	;#
  3957  0709  0086               	movwf	6	;#
  3958  070A  3001               	movlw	1	;#
  3959  070B  0087               	movwf	7	;#
  3960  070C  308D               	movlw	141	;#
  3961  070D  0084               	movwf	4	;#
  3962  070E  3000               	movlw	0	;#
  3963  070F  0085               	movwf	5	;#
  3964  0710  0020               	banksel	_mTouch_delayCount	;#
  3965  0711  3005               	movlw	5	;#
  3966  0712  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  3967  0713  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3968  0714  2F02               	goto	($+-1)	;#
  3969  0715  0021               	banksel	157	;#
  3970  0716  3025               	movlw	37	;#
  3971  0717  1580               	bsf	0,3	;#
  3972  0718  009D               	movwf	29	;#
  3973  0719  0020               	banksel	_mTouch_delayCount	;#
  3974  071A  3005               	movlw	5	;#
  3975  071B  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  3976  071C  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  3977  071D  2F02               	goto	($+-1)	;#
  3978  071E  0021               	banksel	157	;#
  3979  071F  149D               	bsf	29,1	;#
  3980  0720  0000               	nop	;#
  3981  0721  1581               	bsf	1,3	;#
  3982  0722  1180               	bcf	0,3	;#
  3983  0723  0008               	return
  3984  0724                     __end_of_mTouch_ScanA_1:	
  3985                           
  3986                           	psect	text592
  3987  0724                     __ptext592:	
  3988 ;; =============== function _mTouch_ScanA_1 ends ============
  3989                           
  3990                           
  3991 ;; *************** function _mTouch_ScanA_0 *****************
  3992 ;; Defined at:
  3993 ;;		line 514 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;		None
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;		None
  3998 ;; Return value:  Size  Location     Type
  3999 ;;		None               void
  4000 ;; Registers used:
  4001 ;;		None
  4002 ;; Tracked objects:
  4003 ;;		On entry : 1F/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: FFE00/0
  4006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4007 ;;      Params:         0       0       0       0
  4008 ;;      Locals:         0       0       0       0
  4009 ;;      Temps:          0       0       0       0
  4010 ;;      Totals:         0       0       0       0
  4011 ;;Total ram usage:        0 bytes
  4012 ;; Hardware stack levels used:    1
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_mTouch_Scan
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019  0724                     _mTouch_ScanA_0:	
  4020                           
  4021                           ; Regs used in _mTouch_ScanA_0: []
  4022  0724  0022               	banksel	269	;#
  4023  0725  150D               	bsf	13,2	;#
  4024  0726  0021               	banksel	157	;#
  4025  0727  3021               	movlw	33	;#
  4026  0728  009D               	movwf	29	;#
  4027  0729  300D               	movlw	13	;#
  4028  072A  0086               	movwf	6	;#
  4029  072B  3001               	movlw	1	;#
  4030  072C  0087               	movwf	7	;#
  4031  072D  308D               	movlw	141	;#
  4032  072E  0084               	movwf	4	;#
  4033  072F  3000               	movlw	0	;#
  4034  0730  0085               	movwf	5	;#
  4035  0731  0020               	banksel	_mTouch_delayCount	;#
  4036  0732  3005               	movlw	5	;#
  4037  0733  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  4038  0734  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  4039  0735  2F23               	goto	($+-1)	;#
  4040  0736  0021               	banksel	157	;#
  4041  0737  302D               	movlw	45	;#
  4042  0738  1600               	bsf	0,4	;#
  4043  0739  009D               	movwf	29	;#
  4044  073A  0020               	banksel	_mTouch_delayCount	;#
  4045  073B  3005               	movlw	5	;#
  4046  073C  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  4047  073D  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  4048  073E  2F23               	goto	($+-1)	;#
  4049  073F  0021               	banksel	157	;#
  4050  0740  149D               	bsf	29,1	;#
  4051  0741  0000               	nop	;#
  4052  0742  1601               	bsf	1,4	;#
  4053  0743  1200               	bcf	0,4	;#
  4054  0744  0008               	return
  4055  0745                     __end_of_mTouch_ScanA_0:	
  4056                           
  4057                           	psect	text593
  4058  0745                     __ptext593:	
  4059 ;; =============== function _mTouch_ScanA_0 ends ============
  4060                           
  4061                           
  4062 ;; *************** function _mTouch_ScanA_4 *****************
  4063 ;; Defined at:
  4064 ;;		line 526 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\include\cas16f1933.h"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;		None
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;		None               void
  4071 ;; Registers used:
  4072 ;;		None
  4073 ;; Tracked objects:
  4074 ;;		On entry : 1F/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: FFE00/0
  4077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4078 ;;      Params:         0       0       0       0
  4079 ;;      Locals:         0       0       0       0
  4080 ;;      Temps:          0       0       0       0
  4081 ;;      Totals:         0       0       0       0
  4082 ;;Total ram usage:        0 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; This function calls:
  4085 ;;		Nothing
  4086 ;; This function is called by:
  4087 ;;		_mTouch_Scan
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090  0745                     _mTouch_ScanA_4:	
  4091                           
  4092                           ; Regs used in _mTouch_ScanA_4: []
  4093  0745  0022               	banksel	269	;#
  4094  0746  148D               	bsf	13,1	;#
  4095  0747  0021               	banksel	157	;#
  4096  0748  3029               	movlw	41	;#
  4097  0749  009D               	movwf	29	;#
  4098  074A  300D               	movlw	13	;#
  4099  074B  0086               	movwf	6	;#
  4100  074C  3001               	movlw	1	;#
  4101  074D  0087               	movwf	7	;#
  4102  074E  308D               	movlw	141	;#
  4103  074F  0084               	movwf	4	;#
  4104  0750  3000               	movlw	0	;#
  4105  0751  0085               	movwf	5	;#
  4106  0752  0020               	banksel	_mTouch_delayCount	;#
  4107  0753  3005               	movlw	5	;#
  4108  0754  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  4109  0755  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  4110  0756  2F44               	goto	($+-1)	;#
  4111  0757  0021               	banksel	157	;#
  4112  0758  3021               	movlw	33	;#
  4113  0759  1500               	bsf	0,2	;#
  4114  075A  009D               	movwf	29	;#
  4115  075B  0020               	banksel	_mTouch_delayCount	;#
  4116  075C  3005               	movlw	5	;#
  4117  075D  00BC               	movwf	_mTouch_delayCount& (0+127)	;#
  4118  075E  0BBC               	decfsz	_mTouch_delayCount& (0+127),f	;#
  4119  075F  2F44               	goto	($+-1)	;#
  4120  0760  0021               	banksel	157	;#
  4121  0761  149D               	bsf	29,1	;#
  4122  0762  0000               	nop	;#
  4123  0763  1501               	bsf	1,2	;#
  4124  0764  1100               	bcf	0,2	;#
  4125  0765  0008               	return
  4126  0766                     __end_of_mTouch_ScanA_4:	
  4127                           
  4128                           	psect	text598
  4129  0766                     __ptext598:	
  4130 ;; =============== function _mTouch_WaitForGoDone ends ============
  4131                           
  4132                           
  4133 ;; *************** function _ICH_Timers *****************
  4134 ;; Defined at:
  4135 ;;		line 264 in file "S:\Eng Paul Li\Sourcecode\ICH R2ULBL 02 Ver B\ICH-LR-HR.C"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;		None               void
  4142 ;; Registers used:
  4143 ;;		wreg, status,2, status,0
  4144 ;; Tracked objects:
  4145 ;;		On entry : 1F/0
  4146 ;;		On exit  : 1F/0
  4147 ;;		Unchanged: FFFE0/0
  4148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4149 ;;      Params:         0       0       0       0
  4150 ;;      Locals:         0       0       0       0
  4151 ;;      Temps:          0       0       0       0
  4152 ;;      Totals:         0       0       0       0
  4153 ;;Total ram usage:        0 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_ISR
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161  0766                     _ICH_Timers:	
  4162                           
  4163                           ;ICH-LR-HR.C: 267: timer++;
  4164                           
  4165                           ; Regs used in _ICH_Timers: [wreg+status,2+status,0]
  4166  0766  0AB6               	incf	_timer,f
  4167  0767  1903               	skipnz
  4168  0768  0AB7               	incf	_timer+1,f
  4169                           
  4170                           ;ICH-LR-HR.C: 268: if (timer >= 16){
  4171  0769  3000               	movlw	0
  4172  076A  0237               	subwf	_timer+1,w
  4173  076B  3010               	movlw	16
  4174  076C  1903               	skipnz
  4175  076D  0236               	subwf	_timer,w
  4176  076E  1C03               	skipc
  4177  076F  0008               	return
  4178  0770  3040               	movlw	64
  4179                           
  4180                           ;ICH-LR-HR.C: 269: timer = 0;
  4181  0771  01B6               	clrf	_timer
  4182  0772  01B7               	clrf	_timer+1
  4183                           
  4184                           ;ICH-LR-HR.C: 270: LATC6 = !LATC6;
  4185  0773  0022               	movlb	2	; select bank2
  4186  0774  068E               	xorwf	14,f
  4187                           
  4188                           ;ICH-LR-HR.C: 272: if (Key_LED.oneBit.Light){
  4189  0775  0020               	movlb	0	; select bank0
  4190  0776  1E38               	btfss	_Key_LED,4
  4191  0777  2F83               	goto	i1l23215
  4192                           
  4193                           ;ICH-LR-HR.C: 273: Power_Timer++;
  4194  0778  0AB4               	incf	_Power_Timer,f
  4195  0779  1903               	skipnz
  4196  077A  0AB5               	incf	_Power_Timer+1,f
  4197                           
  4198                           ;ICH-LR-HR.C: 274: if (Power_Timer >= (3600))
  4199  077B  300E               	movlw	14
  4200  077C  0235               	subwf	_Power_Timer+1,w
  4201  077D  3010               	movlw	16
  4202  077E  1903               	skipnz
  4203  077F  0234               	subwf	_Power_Timer,w
  4204  0780  1803               	btfsc	3,0
  4205                           
  4206                           ;ICH-LR-HR.C: 275: Key_LED.oneBit.Light = 0;
  4207  0781  1238               	bcf	_Key_LED,4
  4208  0782  0008               	return
  4209  0783                     i1l23215:	
  4210                           
  4211                           ;ICH-LR-HR.C: 277: else
  4212                           ;ICH-LR-HR.C: 278: Power_Timer = 0;
  4213  0783  01B4               	clrf	_Power_Timer
  4214  0784  01B5               	clrf	_Power_Timer+1
  4215  0785  0008               	return
  4216  0786                     __end_of_ICH_Timers:	
  4217                           
  4218 ;; =============== function _ICH_Timers ends ============
  4219  0014                     
  4220                           	psect	functab
  4221  0100                     __pfunctab:	
  4222  0100                     fptable:	
  4223  0100  2900               	goto	fptable	;no entries
  4224  0101                     i1fptable:	
  4225  0101  3181               	movlp	high i1fptable
  4226  0102  0782               	addwf	2,f
  4227  0103                     i1fpbase:	
  4228  0103  2903               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
  4229  0104                     fp__mTouch_ScanA_4:	
  4230  0104  3187  2F45         	ljmp	_mTouch_ScanA_4
  4231  0106                     fp__mTouch_ScanA_0:	
  4232  0106  3187  2F24         	ljmp	_mTouch_ScanA_0
  4233  0108                     fp__mTouch_ScanA_1:	
  4234  0108  3187  2F03         	ljmp	_mTouch_ScanA_1
  4235  010A                     fp__mTouch_ScanA_2:	
  4236  010A  3186  2EE2         	ljmp	_mTouch_ScanA_2
  4237  010C                     fp__mTouch_ScanA_3:	
  4238  010C  3186  2EC1         	ljmp	_mTouch_ScanA_3
  4239  010E                     fp__mTouch_ScanB_4:	
  4240  010E  3186  2EA0         	ljmp	_mTouch_ScanB_4
  4241  0110                     fp__mTouch_ScanB_0:	
  4242  0110  3186  2E7F         	ljmp	_mTouch_ScanB_0
  4243  0112                     fp__mTouch_ScanB_1:	
  4244  0112  3186  2E5E         	ljmp	_mTouch_ScanB_1
  4245  0114                     fp__mTouch_ScanB_2:	
  4246  0114  3186  2E3D         	ljmp	_mTouch_ScanB_2
  4247  0116                     fp__mTouch_ScanB_3:	
  4248  0116  3186  2E1C         	ljmp	_mTouch_ScanB_3
  4249  007E                     btemp	set	126	;btemp
  4250  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Sep 06 13:53:18 2017

                                 pc 0002                      ___bmul@product 0059  
        __size_of_mTouch_StoreScanA 0009          __size_of_mTouch_StoreScanB 000B  
              _mTouch_WaitForGoDone 04F4                                 LATB 010D  
                               TMR0 0015                                 _ISR 0004  
                               wreg 0009                   _mTouch_sensorData 002A  
                              INDF0 0000                                INDF1 0001  
                              FSR0H 0005                                FSR1H 0007  
                              FSR0L 0004                                FSR1L 0006  
                              ?_ISR 0070                                l1881 016E  
                              l1873 0146                                l1875 0150  
                              l1877 015A                                l1879 0164  
                              l1888 0000                                TRISB 008D  
                              l9153 0000                                l9165 03BC  
                              l9183 02FD                                l9159 0000  
                              _T0IF 005A                                u1825 040A  
                              u1855 02E8                                u1795 03E5  
                              u1875 032F                                _main 0130  
                              fsr0h 0005                                fsr1h 0007  
                              fsr0l 0004                                indf0 0000  
                              indf1 0001                                fsr1l 0006  
                              btemp 007E                                start 001C  
             ??i1_mTouch_ChangeMode 0070          ?_mTouch_ButtonStateMachine 0070  
                 ___bmul@multiplier 005A                               ADCON0 009D  
                             ??_ISR 0079               ?_mTouch_WaitForGoDone 0070  
                             l11083 0000                               l20241 01C4  
                             l20245 0191                               l20247 0195  
                             l20264 022D                               l20258 0201  
                             l23101 0000                               l23111 0000  
                             l23103 0000                               l23113 0000  
                             l23105 0000                               l23121 0000  
                             l23115 0000                               l23107 0000  
                             l23131 0198                               l23123 0000  
                             l23117 0000                               l23109 0000  
                             l23119 0000                               l23153 01F5  
                             l23161 0203                               l23145 01E0  
                             l23137 01CC                               l23163 0000  
                             l23147 01E9                               l23139 01D7  
                             l23171 021A                               l23323 0000  
                             l23181 022F                               l23325 0000  
                             l23421 0262                               l23175 0000  
                             l23431 0000                               l23423 0000  
                             l23415 0000                               l23503 0400  
                             l23097 0000                               l23169 0212  
                             l23441 0000                               l23433 0000  
                             l23425 0000                               l23521 0423  
                             l23601 016F                               l23099 0000  
                             l23179 0000                               l23451 0000  
                             l23443 0000                               l23435 0000  
                             l23427 0000                               l23381 0373  
                             l23445 0000                               l23437 0000  
                             l23429 0000                               l23461 03B2  
                             l23453 0000                               l23447 0000  
                             l23439 0000                               l23455 0000  
                             l23543 0000                               l23527 0000  
                             l23551 0382                               l23449 0000  
                             l23465 03D9                               l23457 0000  
                             l23545 0000                               l23537 0000  
                             l23529 0000                               l23561 0000  
                             l23387 0000                               l23379 0000  
                             l23491 03F0                               l23483 0000  
                             l23475 0000                               l23563 0000  
                             l23555 0389                               l23547 0000  
                             l23571 0000                               l21980 0000  
                             l23389 0000                               l23477 03CE  
                             l23469 03DA                               l23557 0000  
                             l23549 0000                               l23581 0000  
                             l23573 0000                               l23565 0000  
                             l23495 0000                               l23479 03D0  
                             l23575 0138                               l23567 0000  
                             l23497 0000                               l23593 015B  
                             l23585 0147                               l23569 0000  
                             l23499 0000                               l23579 0000  
                             l23597 0165                               l23589 0151  
                             STATUS 0003                        ?_key_execute 0070  
                             ?_main 0070                               _T2CON 001C  
                             _LATC0 0870                               _LATC1 0871  
                             _LATC2 0872                               _LATA6 0866  
                             _LATC3 0873                               _LATA7 0867  
                             _LATC4 0874                               _LATC5 0875  
                             _LATB7 086F                               _LATC6 0876  
                             _PORTA 000C                               _PORTB 000D  
                             _PORTC 000E                               _PORTE 0010  
                             _TRISA 008C                               _TRISB 008D  
                             _TRISC 008E                               _TRISE 0090  
               __size_of_ICH_Timers 0020                               _timer 0036  
                             fpbase 0000                      __pbitbssCOMMON 03D0  
                             status 0003                               wtemp0 007E  
          ?_mTouch_DecimationFilter 0070                        __end_of_main 0172  
                            ??_main 0064                __size_of_mTouch_Init 005D  
                            _ADRESH 009C                              _ADRESL 009B  
              __size_of_mTouch_Scan 0058                              _ANSELA 018C  
                            _ANSELB 018D                              i1l1894 0018  
                            u140_20 05B3                              u140_24 05AE  
                            u141_20 05BA                              u141_24 05B5  
           _mTouch_releaseThreshold 002A                              u138_20 05A5  
                            u170_25 0545                              u139_20 05AC  
                            u139_24 05A7                              u171_25 0574  
                            u168_25 052C                              _OSCCON 0099  
                            _TMR0IE 005D                              _TMR0IF 005A  
                            _TMR2IE 0489                              _TMR2IF 0089  
                            ___bmul 0371                __size_of_ICH_Outputs 0088  
            ??_mTouch_WaitForGoDone 0070                              clrloop 0787  
                            fptable 0100      __size_of_mTouch_UpdateBaseline 00B5  
     __end_of_mTouch_UpdateBaseline 0371                              fptotal 0000  
                      ??_ICH_Timers 0070                 ___bmul@multiplicand 0058  
                    __pcstackCOMMON 0070                        __pidataBANK0 0000  
              __size_of_key_execute 00D5                  __end_of_ICH_Timers 0786  
       __end_of_Example_System_Init 018A              mTouch_Init@sensorIndex 005C  
                        __pbssBANK0 0020                          __pbssBANK1 00A0  
             __end_of_mTouch_Decode 0392                          __pmaintext 0130  
       ??_mTouch_ButtonStateMachine 005B                             ?___bmul 0058  
                        __pintentry 0004                        _flag_HRclose 03D1  
                        _flag_light 03D5                        _flag_LRclose 03D3  
                           i1l11100 0000                             i1l11101 0000  
                           i1l11102 0000                             i1l11110 0000  
                           i1l11103 0000                             i1l11111 0000  
                           i1l11104 0000                             i1l11121 0000  
                           i1l11114 0000                             i1l11130 0000  
                           i1l11122 0000                             i1l11115 0000  
                           i1l11131 0000                             i1l11107 0000  
                           i1l11123 0000                             i1l11116 0000  
                           i1l11132 0000                             i1l11108 0000  
                           i1l11124 0000                             i1l11117 0000  
                           i1l11109 0000                             i1l11125 0000  
                           i1l11142 0000                             i1l11118 0000  
                           i1l11150 0000                             i1l11143 0000  
                           i1l11151 0000                             i1l11135 0000  
                           i1l11080 0000                             i1l11144 0000  
                           i1l11128 0000                             i1l11152 0000  
                           i1l11136 0000                             i1l11145 0000  
                           i1l11129 0000                             i1l11153 0000  
                           i1l11137 0000                             i1l11057 0000  
                           i1l11066 0000                             i1l11146 0000  
                           i1l11090 0000                             i1l11138 0000  
                           i1l11139 0000                             i1l11083 0000  
                           i1l11069 04F7                             i1l11077 0000  
                           i1l11149 0000                             i1l11093 0000  
                           i1l11086 0000                             i1l11094 0000  
                           i1l11087 0000                             i1l11095 0000  
                           i1l11088 0000                             i1l11096 0000  
                           i1l11089 0000                             i1l11097 0000  
                           i1l20280 05D1                             i1l20272 05BD  
                           i1l20273 05DF                             i1l20290 05EA  
                           i1l20282 05CF                             i1l20274 05C3  
                           i1l20291 05F3                             i1l20283 05D8  
                           i1l20292 05F5                             i1l20276 05C1  
                           i1l20293 05FE                             i1l20285 05D6  
                           i1l20277 05CA                             i1l20294 0605  
                           i1l20279 05C8                             i1l20296 060E  
                           i1l20288 05DD                             i1l23201 0000  
                           i1l20297 0613                             i1l20289 05E8  
                           i1l23211 0000                             i1l20299 0619  
                           i1l23205 0000                             i1l23301 0000  
                           i1l23215 0783                             i1l23207 0000  
                           i1l23311 0000                             i1l23303 0000  
                           i1l23217 0000                             i1l23313 0000  
                           i1l23305 0000                             i1l23331 0000  
                           i1l23411 0000                             i1l23219 0000  
                           i1l23315 0000                             i1l23307 0000  
                           i1l23333 0000                             i1l23413 0000  
                           i1l23317 0000                             i1l23309 0000  
                           i1l23261 0000                             i1l23327 0000  
                           i1l23343 0533                             i1l23335 0000  
                           i1l23319 0000                             i1l23271 0000  
                           i1l23263 0000                             i1l23183 0000  
                           i1l23353 0550                             i1l23337 0000  
                           i1l23361 0000                             i1l23273 0000  
                           i1l23265 0000                             i1l23193 0000  
                           i1l23355 0000                             i1l23339 0000  
                           i1l23363 0000                             i1l23371 0000  
                           i1l23291 0000                             i1l23283 0000  
                           i1l23275 0000                             i1l23267 0000  
                           i1l23259 0000                             i1l23187 0000  
                           i1l23357 0000                             i1l23349 054C  
                           i1l23365 0000                             i1l23373 0000  
                           i1l23293 0000                             i1l23285 0000  
                           i1l23277 0000                             i1l23269 0000  
                           i1l23189 000E                             i1l23199 0000  
                           i1l23375 0000                             i1l23359 0000  
                           i1l23367 0000                             i1l23287 04C5  
                           i1l23279 0000                             i1l23377 0000  
                           i1l23369 0000                             i1l23297 0000  
                           i1l23289 0000                             i1l23299 04E8  
                mTouch_Init@acqData 005B                          __stringtab 001F  
       __end_ofi1_mTouch_ChangeMode 058E                             i1fpbase 0103  
                           _Key_LED 0038             __size_of_mTouch_ScanA_0 0021  
           __size_of_mTouch_ScanA_1 0021             __size_of_mTouch_ScanA_2 0021  
           __size_of_mTouch_ScanA_3 0021             __size_of_mTouch_ScanA_4 0021  
           __size_of_mTouch_ScanB_0 0021             __size_of_mTouch_ScanB_1 0021  
           __size_of_mTouch_ScanB_2 0021             __size_of_mTouch_ScanB_3 0021  
           __size_of_mTouch_ScanB_4 0021                   fp__mTouch_ScanA_0 0106  
                 fp__mTouch_ScanA_1 0108                   fp__mTouch_ScanA_2 010A  
                 fp__mTouch_ScanA_3 010C                   fp__mTouch_ScanB_0 0110  
                 fp__mTouch_ScanA_4 0104                   fp__mTouch_ScanB_1 0112  
                 fp__mTouch_ScanB_2 0114                   fp__mTouch_ScanB_3 0116  
                 fp__mTouch_ScanB_4 010E                        _mTouch_ScanA 0034  
                      _mTouch_ScanB 0039                     __size_of___bmul 000C  
                      _mTouch_state 003D                        key_execute@a 005D  
                      __size_of_ISR 0018    __size_of_mTouch_DecimationFilter 0077  
         _mTouch_ButtonStateMachine 0397                end_of_initialization 012E  
                       _Power_Timer 0034        mTouch_UpdateBaseline@reading 0062  
                        mTouch_Scan 049C                       ??_mTouch_Init 005B  
                     ??_mTouch_Scan 0077                       ??_ICH_Outputs 0070  
                  _mTouch_stateVars 003E               _mTouch_currentAcqData 007D  
                    __end_of___bmul 037D       __size_of_mTouch_WaitForGoDone 000A  
               start_initialization 0118                         __end_of_ISR 001C  
             _mTouch_UpdateBaseline 02BC                           _Key_state 0039  
               __end_of_mTouch_Init 02BC                 __end_of_mTouch_Scan 04F4  
                    _mTouch_ScanA_0 0724                      _mTouch_ScanA_1 0703  
                    _mTouch_ScanA_2 06E2                      _mTouch_ScanA_3 06C1  
                    _mTouch_ScanB_0 067F                      _mTouch_ScanA_4 0745  
                    _mTouch_ScanB_1 065E                      _mTouch_ScanB_2 063D  
                    _mTouch_ScanB_3 061C                      _mTouch_ScanB_4 06A0  
                 _mTouch_ChangeMode 0392                            ??___bmul 0059  
                    _mTouch_acqData 00A0                  ?_mTouch_ChangeMode 0070  
                       __pdataBANK0 0065                 __end_of_ICH_Outputs 061C  
                    _mTouch_average 0020                       ??_key_execute 0058  
           _mTouch_DecimationFilter 0512                 ??_mTouch_ChangeMode 0058  
                       __pbssCOMMON 007B                       __pcstackBANK0 0058  
            __end_of_mTouch_ScanA_0 0745              __end_of_mTouch_ScanA_1 0724  
            __end_of_mTouch_ScanA_2 0703              __end_of_mTouch_ScanA_3 06E2  
            __end_of_mTouch_ScanA_4 0766              __end_of_mTouch_ScanB_0 06A0  
            __end_of_mTouch_ScanB_1 067F              __end_of_mTouch_ScanB_2 065E  
            __end_of_mTouch_ScanB_3 063D              __end_of_mTouch_ScanB_4 06C1  
__size_of_mTouch_ButtonStateMachine 0099        __size_of_Example_System_Init 0018  
         __end_of_mTouch_ChangeMode 0397                           __pfunctab 0100  
                         __ptext572 037D                           __ptext581 049C  
                         __ptext573 02BC                           __ptext590 06E2  
                         __ptext582 0594                           __ptext574 0397  
                         __ptext591 0703                           __ptext583 0589  
                         __ptext575 025F                           __ptext592 0724  
                         __ptext584 061C                           __ptext576 0371  
                         __ptext593 0745                           __ptext585 063D  
                         __ptext577 0392                           __ptext594 0512  
                         __ptext586 065E                           __ptext578 018A  
                         __ptext595 0507                           __ptext587 067F  
                         __ptext579 0172                           __ptext596 04FE  
                         __ptext588 06A0                           __ptext597 04F4  
                         __ptext589 06C1                           __ptext598 0766  
                       _flag_HRopen 03D2                         _flag_LRopen 03D4  
                         __pstrings 001F              __size_of_mTouch_Decode 0015  
            ?_mTouch_UpdateBaseline 0070                         _mTouch_Init 025F  
                       _mTouch_Scan 049C                 __end_of_key_execute 025F  
                   ?_mTouch_ScanA_0 0070                     ?_mTouch_ScanA_1 0070  
                   ?_mTouch_ScanA_2 0070                     ?_mTouch_ScanA_3 0070  
                   ?_mTouch_ScanB_0 0070                     ?_mTouch_ScanA_4 0070  
                   ?_mTouch_ScanB_1 0070                     ?_mTouch_ScanB_2 0070  
                   ?_mTouch_ScanB_3 0070                     ?_mTouch_ScanB_4 0070  
             _mTouch_pressThreshold 0020   __end_of_mTouch_ButtonStateMachine 0430  
                       _ICH_Outputs 0594        __size_ofi1_mTouch_ChangeMode 0005  
                          _GO_nDONE 04E9           ??_mTouch_DecimationFilter 0070  
     mTouch_DecimationFilter@result 0075                          _ADCON1bits 009E  
                          _PWMcount 003A                            i1fptable 0101  
                          i1fptotal 0014                       _mTouch_Decode 037D  
        __size_of_mTouch_ChangeMode 0005                       _mTouch_jitter 0065  
                 _mTouch_StoreScanA 04FE                   _mTouch_StoreScanB 0507  
                       _key_execute 018A                  ?_mTouch_StoreScanA 0070  
                ?_mTouch_StoreScanB 0070                 ??_mTouch_StoreScanA 0070  
               ??_mTouch_StoreScanB 0070        __end_of_mTouch_WaitForGoDone 04FE  
   __end_of_mTouch_DecimationFilter 0589                      ?_mTouch_Decode 0070  
                     __size_of_main 0042                            clear_ram 0786  
                        _ICH_Timers 0766           __end_of_mTouch_StoreScanA 0507  
         __end_of_mTouch_StoreScanB 0512                   _mTouch_delayCount 003C  
               _Example_System_Init 0172                          _INTCONbits 000B  
                        _LED_enable 03D0     mTouch_ButtonStateMachine@sensor 005F  
                          intlevel1 0100                ?_Example_System_Init 0070  
                _mTouch_currentScan 003B      mTouch_ButtonStateMachine@delta 005D  
           ??_mTouch_UpdateBaseline 005B                          _OPTION_REG 0095  
                 _mTouch_lastResult 007B                    ??_mTouch_ScanA_0 0070  
                  ??_mTouch_ScanA_1 0070                        ?_mTouch_Init 0070  
                  ??_mTouch_ScanA_2 0070                    ??_mTouch_ScanA_3 0070  
                  ??_mTouch_ScanB_0 0070                    ??_mTouch_ScanA_4 0070  
                  ??_mTouch_ScanB_1 0070                    ??_mTouch_ScanB_2 0070  
                  ??_mTouch_ScanB_3 0070                    ??_mTouch_ScanB_4 0070  
                      ?_mTouch_Scan 0070                 i1_mTouch_ChangeMode 0589  
                   ??_mTouch_Decode 0064               ??_Example_System_Init 0058  
                       ?_ICH_Timers 0070                        ?_ICH_Outputs 0070  
              ?i1_mTouch_ChangeMode 0070  
